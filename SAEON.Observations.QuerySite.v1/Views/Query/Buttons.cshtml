@using SAEON.Observations.QuerySite.Models
@model QueryModel
@{
    Html.EJ()
        .Button("btnLoadQuery")
        .Text("Load Query")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-reload")
        .ClientSideEvents(e => e.Click("onLoadQueryClick"))
        .Enabled(Model.UserQueries.Count > 0)
        .Render();
    Html.EJ()
        .Dialog("dialogLoadQuery")
        .Title("Load query")
        .ShowOnInit(false)
        .Width("auto")
        .ClientSideEvents(ev => ev.Close("onLoadQueryClose"))
        .ContentTemplate(
        @<text>
            <div class="row">
                <div class="col-md-12">
                    @(Html.EJ()
                        .Autocomplete("editLoadName")
                        .Datasource(ds => ds.URL("/Query/GetUserQueries").Adaptor(AdaptorType.WebApiAdaptor))
                        .AutocompleteFields(f => f.Text("Name").Key("Id"))
                        .WatermarkText("Name")
                        .Width("300px")
                        .ShowPopupButton(true)
                        .ClientSideEvents(ev => ev.Change("onLoadNameChange"))
                    )
                </div>
            </div>
            <div class="row ErrorRow">
                <div class="col-md-12" id="LoadError">
                </div>
            </div>
            <div class="row ButtonRow">
                <div class="col-md-12">
                    @(Html.EJ()
                        .Button("btnLoad")
                        .Text("Load")
                        .ShowRoundedCorner(true)
                        .Type(ButtonType.Button)
                        .Size(ButtonSize.Medium)
                        .ContentType(ContentType.TextAndImage)
                        .PrefixIcon("e-icon e-save")
                        .Enabled(false)
                        .ClientSideEvents(e => e.Click("onLoadClick"))
                    )
                </div>
            </div>
        </text>)
        .Render();
    Html.EJ()
        .Button("btnSaveQuery")
        .Text("Save Query")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-save")
        .Enabled(false)
        .ClientSideEvents(e => e.Click("onSaveQueryClick"))
        .Render();
    Html.EJ()
        .Dialog("dialogSaveQuery")
        .Title("Save query")
        .ShowOnInit(false)
        .Width("auto")
        .ClientSideEvents(ev => ev.Close("onSaveQueryClose"))
        .ContentTemplate(
        @<text>
            <div class="row">
                <div class="col-md-12">
                    @(Html.EJ()
                        .MaskEdit("editSaveName")
                        .WatermarkText("Name")
                        .Width("300px")
                        .ClientSideEvents(ev => ev.Change("onSaveNameChange"))
                    )
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EJ().MaskEdit("SaveDescription").WatermarkText("Description").Width("500px")
                </div>
            </div>
            <div class="row ErrorRow">
                <div class="col-md-12" id="SaveError">
                </div>
            </div>
            <div class="row ButtonRow">
                <div class="col-md-12">
                    @(Html.EJ()
                        .Button("btnSave")
                        .Text("Save")
                        .ShowRoundedCorner(true)
                        .Type(ButtonType.Button)
                        .Size(ButtonSize.Medium)
                        .ContentType(ContentType.TextAndImage)
                        .PrefixIcon("e-icon e-save")
                        .Enabled(false)
                        .ClientSideEvents(e => e.Click("onSaveClick"))
                    )
                </div>
            </div>
        </text>)
        .Render();
    Html.EJ()
        .Button("btnSearch")
        .Text("Search")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-search")
        .Enabled(false)
        .ClientSideEvents(e => e.Click("onSearchClick"))
        .Render();
    Html.EJ()
        .Button("btnDownload")
        .Text("Download")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-dataexport")
        .Enabled(false)
        .ClientSideEvents(e => e.Click("onDownloadClick"))
        .Render();
}
