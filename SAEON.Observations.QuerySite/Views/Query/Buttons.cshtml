@using SAEON.Observations.QuerySite.Models
@model QueryModel
@{
    Html.EJ()
        .Button("btnLoadQuery")
        .Text("Load Query")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-reload")
        .ClientSideEvents(e => e.Click("onLoadQueryClick"))
        .Render();
    Html.EJ()
        .Dialog("dialogLoadQuery")
        .Title("Load query")
        .ShowOnInit(false)
        .ContentTemplate(@<p>Load a query</p>)
    .Render();
    Html.EJ()
        .Button("btnSaveQuery")
        .Text("Save Query")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-save")
        .Enabled(false)
        .ClientSideEvents(e => e.Click("onSaveQueryClick"))
        .Render();
    Html.EJ()
        .Dialog("dialogSaveQuery")
        .Title("Save query")
        .ShowOnInit(false)
        .ContentType("ajax")
        .ContentUrl("/Query/GetSaveQueryDialog")
        .Render();
    Html.EJ()
        .Button("btnSearch")
        .Text("Search")
        .ShowRoundedCorner(true)
        .Type(ButtonType.Button)
        .Size(ButtonSize.Medium)
        .ContentType(ContentType.TextAndImage)
        .PrefixIcon("e-icon e-search")
        .Enabled(false)
        .ClientSideEvents(e => e.Click("onSearchClick"))
        .Render();
    Html.EJ()
    .Button("btnDownload")
    .Text("Download")
    .ShowRoundedCorner(true)
    .Type(ButtonType.Button)
    .Size(ButtonSize.Medium)
    .ContentType(ContentType.TextAndImage)
    .PrefixIcon("e-icon e-dataexport")
    .Enabled(false)
    .ClientSideEvents(e => e.Click("onDownloadClick"))
    .Render();
}
<script type="text/javascript">
    function onLoadQueryClick() {
        DisableButtons();
        $("#dialogLoadQuery").ejDialog("open");
    }
    function onSaveQueryClick() {
        DisableButtons();
        $("#dialogSaveQuery").ejDialog("open");
    }
    function onSaveQueryOkClick() {
        $("#dialogSaveQuery").ejDialog("close");
        EnableButtons();
        alert("Saved");
    }
    function onSearchClick() {
        ShowWaiting();
        var startDate = $("#StartDate").ejDatePicker("instance")._dateValue;
        var endDate = $("#EndDate").ejDatePicker("instance")._dateValue;
        $.ajax({
            url: "/Query/UpdateFilters",
            data: JSON.stringify({
                StartDate: startDate,
                EndDate: endDate
            }),
            async: false,
            type: "POST",
            contentType: "application/json",
            success: function () {
                $.get("/Query/DataQuery")
                    .done(function () {
                        $.ajax({
                            url: "/Query/GetResultsGrid",
                            async: false,
                            type: "GET",
                            success: function (data) {
                                $("#PartialResultsGrid").html(data);
                                $.ajax({
                                    url: "/Query/GetResultsChart",
                                    async: false,
                                    type: "GET",
                                    success: function (data) {
                                        $("#PartialResultsChart").html(data);
                                        HideWaiting();
                                        EnableButtons();
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        ErrorInFunc("Error in GetResultsChart Status: " + textStatus + " Error: " + errorThrown)
                                    }
                                });
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                ErrorInFunc("Error in GetResultsGrid Status: " + textStatus + " Error: " + errorThrown)
                            }
                        });
                    })
                    .error(function (jqXHR, textStatus, errorThrown) {
                        ErrorInFunc("Error in DataQuery Status: " + textStatus + " Error: " + errorThrown)
                    })
            },
            error: function (jqXHR, textStatus, errorThrown) {
                ErrorInFunc("Error in UpdateFilters Status: " + textStatus + " Error: " + errorThrown);
            }
        })
    }
    function onDownloadClick() {

    }
    function ErrorInFunc(msg) {
        HideWaiting();
        alert(msg);
    }
    function EnableButtons() {
        treeObj = $("#treeViewLocations").data('ejTreeView');
        var checkedNodes = treeObj.getCheckedNodes();
        var selectedLocations = 0
        for (i = 0; i < checkedNodes.length; i++) {
            var checkedNode = checkedNodes[i];
            var nodeData = treeObj.getNode(checkedNode);
            if (nodeData.id.startsWith("STA~")) {
                selectedLocations = selectedLocations + 1;
            }
        }
        treeObj = $("#treeViewFeatures").data('ejTreeView');
        var checkedNodes = treeObj.getCheckedNodes();
        var selectedFeatures = 0
        for (i = 0; i < checkedNodes.length; i++) {
            var checkedNode = checkedNodes[i];
            var nodeData = treeObj.getNode(checkedNode);
            if (nodeData.id.startsWith("OFF~")) {
                selectedFeatures = selectedFeatures + 1;
            }
        }
        var btnLoadQuery = $("#btnLoadQuery").data("ejButton");
        btnLoadQuery.enable();
        var btnSaveQuery = $("#btnSaveQuery").data("ejButton");
        var btnSearch = $("#btnSearch").data("ejButton");
        if ((selectedLocations > 0) & (selectedFeatures > 0)) {
            btnSaveQuery.enable();
            btnSearch.enable();
        }
        else {
            btnSaveQuery.disable();
            btnSearch.disable();
        }
        var btnDownload = $("#btnDownload").data("ejButton");
        btnDownload.disable();
    }
    function DisableButtons() {
        var btnLoadQuery = $("#btnLoadQuery").data("ejButton");
        btnLoadQuery.disable();
        var btnSaveQuery = $("#btnSaveQuery").data("ejButton");
        btnSaveQuery.disable();
        var btnSearch = $("#btnSearch").data("ejButton");
        btnSearch.disable();
        var btnDownload = $("#btnDownload").data("ejButton");
        btnDownload.disable();
    }
</script>
