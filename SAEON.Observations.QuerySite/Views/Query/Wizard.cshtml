@using SAEON.Observations.QuerySite.Models
@model QueryModel
@{
    ViewBag.Title = "Query";
}

<div class="row">
    <div class="col-md-12">
        <div class="controlframe">
            @{Html.EJ().Tab("defaultTabs").Items(tabs =>
                {
                @*tabs.Add().ID("Locations").Text("Locations").ContentTemplate(
                    @<div class="row">
                        <div class="col-md-6">
                            @(Html.EJ().TreeView("treeViewLocations")
                                .TreeViewFields(field => field.Datasource(Model.Locations.AsEnumerable())
                                .Id("Key")
                                .ParentId("ParentKey")
                                .Text("Text")
                                .HasChild("HasChildren")
                                )
                                .ClientSideEvents(events => events.NodeCheck("onUpdateSelectedLocations").NodeUncheck("onUpdateSelectedLocations"))
                                .ShowCheckbox(true)
                            )
                        </div>
                        <div class="col-md-6" id="PartialSelectedLocations">
                            @Html.Partial("SelectedLocations", Model.SelectedLocations)
                        </div>
                    </div>);*@
                @*tabs.Add().ID("Map").Text("Map").ContentTemplate(
                    @<div>
                        <table>
                            <tr>
                                <td valign="top">
                                    <div>
                                        <p>
                                            Select sites from a map
                                        </p>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>);*@
            tabs.Add().ID("Features").Text("Features").ContentTemplate(
                @<div class="row">
                    <div class="col-md-6">
                        @(Html.EJ().TreeView("treeViewFeatures")
                                .TreeViewFields(field => field.Datasource(Model.Features)
                                //field.Datasource(features =>
                                //    features.URL($"{ViewBag.WebAPIUrl}/OData/Features").Adaptor(AdaptorType.ODataV4Adaptor).CrossDomain(true))
                                .Id("Key")
                                .ParentId("ParentKey")
                                .Text("Text")
                                .HasChild("HasChildren")
                                )
                                //.ClientSideEvents(events => events.NodeCheck("onUpdateSelectedFeatures").NodeUncheck("onUpdateSelectedFeatures"))
                                .ShowCheckbox(true)
                        //.EnablePersistence(true)
                        )
                    </div>
                    <div class="col-md-6" id="PartialSelectedFeatures">
                        @Html.Partial("SelectedFeatures", Model.SelectedFeatures)
                    </div>
                </div>);
            tabs.Add().ID("TimeFrame").Text("Time frame").ContentTemplate(
                @<div>
                    <table>
                        <tr>
                            <td valign="top">
                                <div>
                                    <p>
                                        Select time span
                                    </p>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>);
                tabs.Add().ID("Confirm").Text("Confirm").ContentTemplate(
                    @<div>
                        <table>
                            <tr>
                                <td valign="top">
                                    <div>
                                        <p>
                                            Confirm
                                        </p>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>);
                tabs.Add().ID("Results").Text("Results").ContentTemplate(
                    @<div>
                        <table>
                            <tr>
                                <td valign="top">
                                    <div>
                                        <p>
                                            Tabluar results
                                        </p>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>);
                }).Render();}
        </div>
    </div>
</div>
<script type="text/javascript">
    function onUpdateSelectedLocations() {
        treeObj = $("#treeViewLocations").data('ejTreeView');
        var checkedNodes = treeObj.getCheckedNodes();
        var selectedLocations = []
        for (i = 0; i < checkedNodes.length; i++) {
            var checkedNode = checkedNodes[i];
            var nodeData = treeObj.getNode(checkedNode);
            selectedLocations.push(nodeData.id);
        }
        ajaxUpdateSelectedLocations(selectedLocations);
    }
    function ajaxUpdateSelectedLocations(selectedLocations) {
        $.ajax({
            url: "/Query/StoreSelectedLocations",
            data: JSON.stringify({ Locations: selectedLocations }),
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (data) {
                //alert(data)
                $('#PartialSelectedLocations').html(data);
            },
            error: function () {
                alert("Oops");
            }
        });
    }
    //function onUpdateSelectedFeatures() {
    //    treeObj = $("#treeViewFeatures").data('ejTreeView');
    //    var checkedNodes = treeObj.getCheckedNodes();
    //    var selectedFeatures = []
    //    for (i = 0; i < checkedNodes.length; i++) {
    //        var checkedNode = checkedNodes[i];
    //        var nodeData = treeObj.getNode(checkedNode);
    //        selectedFeatures.push(nodeData.id);
    //    }
    //    ajaxUpdateSelectedFeatures(selectedFeatures);
    //}
    //function ajaxUpdateSelectedFeatures(selectedFeatures) {
    //    $.ajax({
    //        url: "/Query/StoreSelectedFeatures",
    //        data: JSON.stringify({ Features: selectedFeatures }),
    //        type: "POST",
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "html",
    //        success: function (data) {
    //            //alert(data)
    //            $('#PartialSelectedFeatures').html(data);
    //        },
    //        error: function () {
    //            alert("Oops");
    //        }
    //    });
    //}
</script>
