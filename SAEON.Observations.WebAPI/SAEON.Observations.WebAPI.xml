<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SAEON.Observations.WebAPI</name>
    </assembly>
    <members>
        <member name="M:SAEON.Observations.WebAPI.BaseODataController`1.GetQuery(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            query for items
            </summary>
            <returns></returns>
        </member>
        <member name="T:SAEON.Observations.WebAPI.DataSchema">
            <summary>
            Data Schema entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSchema.DataSourceTypeId">
            <summary>
            DataSourceTypeId of the DataSchema
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSchema.Description">
            <summary>
            Description of the DataSchema
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.DataSource">
            <summary>
            Data Source entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.Description">
            <summary>
            Description of the DataSource
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.Url">
            <summary>
            Url of the DataSource
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.UpdateFreq">
            <summary>
            Update Frequency of the DataSource
            Enum of {AdHoc, Daily, Weekly, Monthly, Quarterly, Annually, Hourly}
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.LastUpdate">
            <summary>
            Last update of the DataSource
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.StartDate">
            <summary>
            StartDate of the DataSource, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSource.EndDate">
            <summary>
            EndDate of the DataSource, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DataSourceType.Description">
            <summary>
            Description of the Instrument
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.DigitalObjectIdentifier">
            <summary>
            DigitalObjectIdentifiers entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.Code">
            <summary>
            Code of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.Name">
            <summary>
            Name of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.MetadataJson">
            <summary>
            MetadataJson of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.MetadataJsonSha256">
            <summary>
            Sha256 of the MetadataJson of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.MetadataHtml">
            <summary>
            MetadataHtml of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.MetadataUrl">
            <summary>
            Url of the ODP metadata record of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.ObjectStoreUrl">
            <summary>
            Object Store Url of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.QueryUrl">
            <summary>
            Query Url of the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.ODPMetadataId">
            <summary>
            ODP Id for the DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.ODPMetadataNeedsUpdate">
            <summary>
            ODP metadata needs update for DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.ODPMetadataIsValid">
            <summary>
            ODP metadata is valid for DigitalObjectIdentifier
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.AddedBy">
            <summary> 
            UserId of user who added the DigitalObjectIdentifier   
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.DigitalObjectIdentifier.UpdatedBy">
            <summary>
            UserId of user who last updated the DigitalObjectIdentifier 
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Instrument">
            <summary>
            Instrument entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.Description">
            <summary>
            Description of the Instrument
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.Url">
            <summary>
            Url of the Instrument
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.StartDate">
            <summary>
            StartDate of the Instrument, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.EndDate">
            <summary>
            EndDate of the Instrument, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.Latitude">
            <summary>
            Latitude of the Instrument
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.Longitude">
            <summary>
            Longitude of the Instrument
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Instrument.Elevation">
            <summary>
            Elevation of the Instrument, positive above sea level, negative below sea level
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Offering">
            <summary>
            Offering entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Offering.Description">
            <summary>
            Description of the Offering
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Organisation">
            <summary>
            Organisation entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Organisation.Description">
            <summary>
            Description of the Organisation
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Organisation.Url">
            <summary>
            Url of the Organisation
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Organisation.DigitalObjectIdentifierID">
            <summary>
            DigitalObjectIdentifierID of the Organisation
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.OrganisationRole">
            <summary>
            OrganisationRole entity
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Phenomenon">
            <summary>
            Phenomenon entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Phenomenon.Description">
            <summary>
            Description of the Phenomenon
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Phenomenon.Url">
            <summary>
            Url of the Phenomenon
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Programme">
            <summary>
            Programme entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Programme.Description">
            <summary>
            Description of the Programme
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Programme.Url">
            <summary>
            Url of the Programme
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Programme.StartDate">
            <summary>
            StartDate of the Programme, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Programme.EndDate">
            <summary>
            EndDate of the Programme, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Programme.DigitalObjectIdentifierID">
            <summary>
            DigitalObjectIdentifierID of the Programme
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Project">
            <summary>
            Project entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.ProgrammeId">
            <summary>
            The Programme of the Project
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.Description">
            <summary>
            Description of the Project
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.Url">
            <summary>
            Url of the Project
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.StartDate">
            <summary>
            StartDate of the Project, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.EndDate">
            <summary>
            EndDate of the Project, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Project.DigitalObjectIdentifierID">
            <summary>
            DigitalObjectIdentifierID of the Project
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Sensor">
            <summary>
            Sensor entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.Description">
            <summary>
            Description of the Sensor
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.Url">
            <summary>
            Url of the Sensor
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.PhenomenonId">
            <summary>
            PhenomenonId of the sensor
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.Latitude">
            <summary>
            Latitude of the Sensor
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.Longitude">
            <summary>
            Longitude of the Sensor
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Sensor.Elevation">
            <summary>
            Elevation of the Sensor, positive above sea level, negative below sea level
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Site">
            <summary>
            Site entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Site.Description">
            <summary>
            Description of the Site
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Site.Url">
            <summary>
            Url of the Site
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Site.StartDate">
            <summary>
            StartDate of the Site, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Site.EndDate">
            <summary>
            EndDate of the Site, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Site.DigitalObjectIdentifierID">
            <summary>
            DigitalObjectIdentifierID of the Site
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Station">
            <summary>
            Station entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.Description">
            <summary>
            Description of the Station
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.SiteId">
            <summary>
            The SiteId of the Station
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.Url">
            <summary>
            Url of the Station
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.StartDate">
            <summary>
            StartDate of the site, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.EndDate">
            <summary>
            EndDate of the Station, null means always
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.Latitude">
            <summary>
            Latitude of the Station
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.Longitude">
            <summary>
            Longitude of the Station
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Station.Elevation">
            <summary>
            Elevation of the Station, positive above sea level, negative below sea level
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.Unit">
            <summary>
            Unit Entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Unit.Name">
            <summary>
            Unit of the Unit 
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.Unit.Symbol">
            <summary>
            Symbol of the Unit
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.UserDownload">
            <summary>
            UserDownload entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Description">
            <summary>
            Description of the UserDownload
            DataCite Abstracts, should include citation format
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Title">
            <summary>
            Title of the DownLoad
            DataCite Titles
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Citation">
            <summary>
            How this DownLoad should be cited
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Keywords">
            <summary>
            Keywords of the Download, semi-colon separated
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Date">
            <summary>
            When the query for the download was executed
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Input">
            <summary>
            The input of the query that generated the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.RequeryUrl">
            <summary>
            Requery Url for download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.MetadataJson">
            <summary>
            Json sent to metadata service
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.MetadataUrl">
            <summary>
            Metadata Url for download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.OpenDataPlatformId">
            <summary>
            ODP Id for the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.DownloadUrl">
            <summary>
            Url to view the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.ZipFullName">
            <summary>
            Full file name of Zip on server
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.ZipCheckSum">
            <summary>
            SHA256 checksum of Zip
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.ZipUrl">
            <summary>
            Url to Zip of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.Places">
            <summary>
            Places of the DownLoad
            Lookup on GeoNames in format Name:Country:Lat:Lon, semi-colon separated
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.LatitudeNorth">
            <summary>
            North-most Latitude of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.LatitudeSouth">
            <summary>
            South-most Latitude of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.LongitudeWest">
            <summary>
            West-morthmost Longitude of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.LongitudeEast">
            <summary>
            East-morthmost Longitude of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.ElevationMinimum">
            <summary>
            Minimum elevation of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.ElevationMaximum">
            <summary>
            Maximum elevation of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.StartDate">
            <summary>
            Start date of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.EndDate">
            <summary>
            End date of the download
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.UserId">
            <summary>
            UserId of the UserDownload
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.AddedBy">
            <summary>
            UserId of user who added the UserDownload
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.AddedAt">
            <summary>
            Time the UserDownload was added
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserDownload.UpdatedAt">
            <summary>
            Time the UserDownload was updated
            </summary>
        </member>
        <member name="T:SAEON.Observations.WebAPI.UserQuery">
            <summary>
            UserQuery entity
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.Description">
            <summary>
            Description of the UserQuery
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.QueryInput">
            <summary>
            URI of the user query
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.UserId">
            <summary>
            UserId of UserQuery
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.AddedBy">
            <summary>
            UserId of user who added the UserQuery
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.AddedAt">
            <summary>
            Time the UserDownload was added
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.UpdatedBy">
            <summary>
            UserId of user who last updated the UserQuery
            </summary>
        </member>
        <member name="P:SAEON.Observations.WebAPI.UserQuery.UpdatedAt">
            <summary>
            Time the UserDownload was updated
            </summary>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.OData.IDEntityODataController`1.GetById(System.Guid)">
            <summary>
            Get a TEntity by Id
            </summary>
            <param name="id">The Id of the TEntity</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetAll">
            <summary>
            All Instruments
            </summary>
            <returns>ListOf(Instrument)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetByIdAsync(System.Guid)">
            <summary>
            Instrument by Id
            </summary>
            <param name="id">The Id of the Instrument</param>
            <returns>Instrument</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetByCodeAsync(System.String)">
            <summary>
            Instrument by Code
            </summary>
            <param name="code">The Code of the Instrument</param>
            <returns>Instrument</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetByNameAsync(System.String)">
            <summary>
            Instrument by Name
            </summary>
            <param name="name">The Name of the Instrument</param>
            <returns>Instrument</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetOrganisations(System.Guid)">
            <summary>
            Organisations of the Instrument
            </summary>
            <param name="id">Id of the Instrument</param>
            <returns>ListOf(Organisation)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetStations(System.Guid)">
            <summary>
            Stations of the Instrument
            </summary>
            <param name="id">Id of the Instrument</param>
            <returns>ListOf(Station)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InstrumentsController.GetSensors(System.Guid)">
            <summary>
            Sensors of the Instrument
            </summary>
            <param name="id">Id of the Instrument</param>
            <returns>ListOf(Sensor)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InventoryDatasetsController.GetAll">
            <summary>
            All Datasets
            </summary>
            <returns></returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.InventorySensorsController.GetAll">
            <summary>
            All Sensors
            </summary>
            <returns></returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OfferingsController.GetAll">
            <summary>
            All Offerings
            </summary>
            <returns>ListOf(Offering)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OfferingsController.GetByIdAsync(System.Guid)">
            <summary>
            Offering by Id
            </summary>
            <param name="id">The Id of the Offering</param>
            <returns>Offering</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OfferingsController.GetByCodeAsync(System.String)">
            <summary>
            Offering by Code
            </summary>
            <param name="code">The Code of the Offering</param>
            <returns>Offering</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OfferingsController.GetByNameAsync(System.String)">
            <summary>
            Offering by Name
            </summary>
            <param name="name">The Name of the Offering</param>
            <returns>Offering</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OfferingsController.GetPhenomena(System.Guid)">
            <summary>
            Phenomena of the Offering
            </summary>
            <param name="id">Id of the Offering</param>
            <returns>ListOf(Phenomemon)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetAll">
            <summary>
            All Organisations
            </summary>
            <returns>ListOf(Organisation)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetByIdAsync(System.Guid)">
            <summary>
            Organisation by Id
            </summary>
            <param name="id">The Id of the Organisation</param>
            <returns>Organisation</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetByCodeAsync(System.String)">
            <summary>
            Organisation by Code
            </summary>
            <param name="code">The Code of the Organisation</param>
            <returns>Organisation</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetByNameAsync(System.String)">
            <summary>
            Organisation by Name
            </summary>
            <param name="name">The Name of the Organisation</param>
            <returns>Organisation</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetSites(System.Guid)">
            <summary>
            Sites of the Organisation
            </summary>
            <param name="id">Id of Organisation</param>
            <returns>ListOf(Site)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetStations(System.Guid)">
            <summary>
            Stations of the Organisation
            </summary>
            <param name="id">Id of Organisation</param>
            <returns>ListOf(Station)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.OrganisationsController.GetInstruments(System.Guid)">
            <summary>
            Instruments of the Organisation
            </summary>
            <param name="id">Id of Organisation</param>
            <returns>ListOf(Instrument)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetAll">
            <summary>
            All Phenomena
            </summary>
            <returns>ListOf(Phenomenon)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetByIdAsync(System.Guid)">
            <summary>
            Phenomenon by Id
            </summary>
            <param name="id">The Id of the Phenomenon</param>
            <returns>Phenomenon</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetByCodeAsync(System.String)">
            <summary>
            Phenomenon by Code
            </summary>
            <param name="code">The Code of the Phenomenon</param>
            <returns>Phenomenon</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetByNameAsync(System.String)">
            <summary>
            Phenomenon by Name
            </summary>
            <param name="name">The Name of the Phenomenon</param>
            <returns>Phenomenon</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetOfferings(System.Guid)">
            <summary>
            Offerings of the Phenomenon
            </summary>
            <param name="id">Id of the Phenomenon</param>
            <returns>ListOf(Offering)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetUnits(System.Guid)">
            <summary>
            Units of the Phenomenon
            </summary>
            <param name="id">Id of the Phenomenon</param>
            <returns>ListOf(Unit)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.PhenomenaController.GetSensors(System.Guid)">
            <summary>
            Sensors of the Phenomenon
            </summary>
            <param name="id">Id of the Phenomenon</param>
            <returns>ListOf(Sensor)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProgrammesController.GetAll">
            <summary>
            All Programmes
            </summary>
            <returns>ListOf(Programme)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProgrammesController.GetByIdAsync(System.Guid)">
            <summary>
            Programme by Id
            </summary>
            <param name="id">The Id of the Programme</param>
            <returns>Programme</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProgrammesController.GetByCodeAsync(System.String)">
            <summary>
            Programme by Code
            </summary>
            <param name="code">The Code of the Programme</param>
            <returns>Programme</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProgrammesController.GetByNameAsync(System.String)">
            <summary>
            Programme by Name
            </summary> 
            <param name="name">The Name of the Programme</param>
            <returns>Programme</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProgrammesController.GetProjects(System.Guid)">
            <summary>
            Projects of the Programme
            </summary>
            <param name="id">Id of Programme</param>
            <returns>ListOf(Project)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.GetAll">
            <summary>
            All Projects
            </summary>
            <returns>ListOf(Project)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.GetByIdAsync(System.Guid)">
            <summary>
            Project by Id
            </summary>
            <param name="id">The Id of the Project</param>
            <returns>Project</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.GetByCodeAsync(System.String)">
            <summary>
            Project by Code
            </summary>
            <param name="code">The Code of the Project</param>
            <returns>Project</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.GetByNameAsync(System.String)">
            <summary>
            Project by Name
            </summary>
            <param name="name">The Name of the Project</param>
            <returns>Project</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.ProgrammeAsync(System.Guid)">
            <summary>
            Programme of the Project
            </summary>
            <param name="id">Id of Project</param>
            <returns>Programme</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.ProjectsController.GetStations(System.Guid)">
            <summary>
            Stations of the Project
            </summary>
            <param name="id">Id of Project</param>
            <returns>ListOf(Station)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetAll">
            <summary>
            All Sensors
            </summary>
            <returns>ListOf(Sensor)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetByIdAsync(System.Guid)">
            <summary>
            Sensor by Id
            </summary>
            <param name="id">The Id of the Sensor</param>
            <returns>Sensor</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetByCodeAsync(System.String)">
            <summary>
            Sensor by Code
            </summary>
            <param name="code">The Code of the Sensor</param>
            <returns>Sensor</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetByNameAsync(System.String)">
            <summary>
            Sensor by Name
            </summary>
            <param name="name">The Name of the Sensor</param>
            <returns>Sensor</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetPhenomenonAsync(System.Guid)">
            <summary>
            Phenomenon of the Sensor
            </summary>
            <param name="id">The Id of the Sensor</param>
            <returns>Phenomenon</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SensorsController.GetInstruments(System.Guid)">
            <summary>
            Instruments of the Sensor
            </summary>
            <param name="id">Id of the Sensor</param>
            <returns>ListOf(Instrument)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetAll">
            <summary>
            All Sites
            </summary>
            <returns>ListOf(Site)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetByIdAsync(System.Guid)">
            <summary>
            Site by Id
            </summary>
            <param name="id">The Id of the Site</param>
            <returns>Site</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetByCodeAsync(System.String)">
            <summary>
            Site by Code
            </summary>
            <param name="code">The Code of the Site</param>
            <returns>Site</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetByNameAsync(System.String)">
            <summary>
            Site by Name
            </summary>
            <param name="name">The Name of the Site</param>
            <returns>Site</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetOrganisations(System.Guid)">
            <summary>
            Organisations of the Site
            </summary>
            <param name="id">Id of Site</param>
            <returns>ListOf(Organisation)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.SitesController.GetStations(System.Guid)">
            <summary>
            Stations of the Site
            </summary>
            <param name="id">Id of Site</param>
            <returns>ListOf(Station)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetAll">
            <summary>
            All Stations
            </summary>
            <returns>ListOf(Station)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetByIdAsync(System.Guid)">
            <summary>
            Station by Id
            </summary>
            <param name="id">The Id of the Station</param>
            <returns>Station</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetByCodeAsync(System.String)">
            <summary>
            Station by Code
            </summary>
            <param name="code">The Code of the Station</param>
            <returns>Station</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetByNameAsync(System.String)">
            <summary>
            Station by Name
            </summary>
            <param name="name">The Name of the Station</param>
            <returns>Station</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetSiteAsync(System.Guid)">
            <summary>
            Site of a Station
            </summary>
            <param name="id">The Id of the Station</param>
            <returns>Site</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetInstruments(System.Guid)">
            <summary>
            Instruments of the Station
            </summary>
            <param name="id">Id of the Station</param>
            <returns>ListOf(Instrument)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetOrganisations(System.Guid)">
            <summary>
            Organisations of the Station
            </summary>
            <param name="id">Id of the Station</param>
            <returns>ListOf(Organisation)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.StationsController.GetProjects(System.Guid)">
            <summary>
            Projects of the Station
            </summary>
            <param name="id">Id of the Station</param>
            <returns>ListOf(Project)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.UnitsController.GetAll">
            <summary>
            All Units
            </summary>
            <returns>ListOf(Unit)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.UnitsController.GetByIdAsync(System.Guid)">
            <summary>
            Unit by Id
            </summary>
            <param name="id">The Id of the Unit</param>
            <returns>Unit</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.UnitsController.GetByCodeAsync(System.String)">
            <summary>
            Unit by Code
            </summary>
            <param name="code">The Code of the Unit</param>
            <returns>Unit</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.UnitsController.GetPhenomena(System.Guid)">
            <summary>
            Phenomena of the Unit
            </summary>
            <param name="id">Id of the Unit</param>
            <returns>ListOf(Phenomenon)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetByIdAsync(System.Guid)">
            <summary>
            Get a TEntity by Id
            </summary>
            <param name="id">The Id of the TEntity</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetSingleAsync``1(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Related Entity TEntity.TRelated
            </summary>
            <typeparam name="TRelated"></typeparam>
            <param name="id">Id of TEntity</param>
            <param name="select">Lambda to select TRelated</param>
            <returns>TaskOf(IHttpActionResult)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetSingle``1(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Related Entity TEntity.TRelated
            </summary>
            <typeparam name="TRelated"></typeparam>
            <param name="id">Id of TEntity</param>
            <param name="select">Lambda to select TRelated</param>
            <returns>TaskOf(IHttpActionResult)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetManyWithGuidId``1(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Get IQueryableOf(TRelated)
            </summary>
            <typeparam name="TRelated"></typeparam>
            <param name="id">Id of TEntity</param>
            <param name="select">Lambda to select ListOf(TRelated)</param>
            <returns>IQueryableOf(TRelated)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetManyWithIntId``1(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Get IQueryableOf(TRelated)
            </summary>
            <typeparam name="TRelated"></typeparam>
            <param name="id">Id of TEntity</param>
            <param name="select">Lambda to select ListOf(TRelated)</param>
            <returns>IQueryableOf(TRelated)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.IDEntityApiController`1.GetManyWithLongId``1(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Get IQueryableOf(TRelated)
            </summary>
            <typeparam name="TRelated"></typeparam>
            <param name="id">Id of TEntity</param>
            <param name="select">Lambda to select ListOf(TRelated)</param>
            <returns>IQueryableOf(TRelated)</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.CodedApiController`1.GetByCodeAsync(System.String)">
            <summary>
            Get a TEntity by Code
            </summary>
            <param name="code">The Code of the TEntity</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:SAEON.Observations.WebAPI.Controllers.WebAPI.NamedApiController`1.GetByNameAsync(System.String)">
            <summary>
            Get a TEntity by Name
            </summary>
            <param name="name">The Name of the TEntity</param>
            <returns>TEntity</returns>
        </member>
    </members>
</doc>
