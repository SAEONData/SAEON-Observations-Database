using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SAEON.Observations.Data{
    /// <summary>
    /// Strongly-typed collection for the VUserDownload class.
    /// </summary>
    [Serializable]
    public partial class VUserDownloadCollection : ReadOnlyList<VUserDownload, VUserDownloadCollection>
    {        
        public VUserDownloadCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vUserDownloads view.
    /// </summary>
    [Serializable]
    public partial class VUserDownload : ReadOnlyRecord<VUserDownload>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vUserDownloads", TableType.View, DataService.GetInstance("ObservationsDB"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Guid;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "UserId";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 128;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = false;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.AnsiString;
                colvarName.MaxLength = 150;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = false;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarDescription = new TableSchema.TableColumn(schema);
                colvarDescription.ColumnName = "Description";
                colvarDescription.DataType = DbType.AnsiString;
                colvarDescription.MaxLength = 5000;
                colvarDescription.AutoIncrement = false;
                colvarDescription.IsNullable = false;
                colvarDescription.IsPrimaryKey = false;
                colvarDescription.IsForeignKey = false;
                colvarDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescription);
                
                TableSchema.TableColumn colvarAddedAt = new TableSchema.TableColumn(schema);
                colvarAddedAt.ColumnName = "AddedAt";
                colvarAddedAt.DataType = DbType.DateTime;
                colvarAddedAt.MaxLength = 0;
                colvarAddedAt.AutoIncrement = false;
                colvarAddedAt.IsNullable = true;
                colvarAddedAt.IsPrimaryKey = false;
                colvarAddedAt.IsForeignKey = false;
                colvarAddedAt.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddedAt);
                
                TableSchema.TableColumn colvarAddedBy = new TableSchema.TableColumn(schema);
                colvarAddedBy.ColumnName = "AddedBy";
                colvarAddedBy.DataType = DbType.AnsiString;
                colvarAddedBy.MaxLength = 128;
                colvarAddedBy.AutoIncrement = false;
                colvarAddedBy.IsNullable = false;
                colvarAddedBy.IsPrimaryKey = false;
                colvarAddedBy.IsForeignKey = false;
                colvarAddedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddedBy);
                
                TableSchema.TableColumn colvarUpdatedAt = new TableSchema.TableColumn(schema);
                colvarUpdatedAt.ColumnName = "UpdatedAt";
                colvarUpdatedAt.DataType = DbType.DateTime;
                colvarUpdatedAt.MaxLength = 0;
                colvarUpdatedAt.AutoIncrement = false;
                colvarUpdatedAt.IsNullable = true;
                colvarUpdatedAt.IsPrimaryKey = false;
                colvarUpdatedAt.IsForeignKey = false;
                colvarUpdatedAt.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdatedAt);
                
                TableSchema.TableColumn colvarUpdatedBy = new TableSchema.TableColumn(schema);
                colvarUpdatedBy.ColumnName = "UpdatedBy";
                colvarUpdatedBy.DataType = DbType.AnsiString;
                colvarUpdatedBy.MaxLength = 128;
                colvarUpdatedBy.AutoIncrement = false;
                colvarUpdatedBy.IsNullable = false;
                colvarUpdatedBy.IsPrimaryKey = false;
                colvarUpdatedBy.IsForeignKey = false;
                colvarUpdatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdatedBy);
                
                TableSchema.TableColumn colvarRowVersion = new TableSchema.TableColumn(schema);
                colvarRowVersion.ColumnName = "RowVersion";
                colvarRowVersion.DataType = DbType.Binary;
                colvarRowVersion.MaxLength = 0;
                colvarRowVersion.AutoIncrement = false;
                colvarRowVersion.IsNullable = false;
                colvarRowVersion.IsPrimaryKey = false;
                colvarRowVersion.IsForeignKey = false;
                colvarRowVersion.IsReadOnly = true;
                
                schema.Columns.Add(colvarRowVersion);
                
                TableSchema.TableColumn colvarMetadataURL = new TableSchema.TableColumn(schema);
                colvarMetadataURL.ColumnName = "MetadataURL";
                colvarMetadataURL.DataType = DbType.AnsiString;
                colvarMetadataURL.MaxLength = 2000;
                colvarMetadataURL.AutoIncrement = false;
                colvarMetadataURL.IsNullable = false;
                colvarMetadataURL.IsPrimaryKey = false;
                colvarMetadataURL.IsForeignKey = false;
                colvarMetadataURL.IsReadOnly = false;
                
                schema.Columns.Add(colvarMetadataURL);
                
                TableSchema.TableColumn colvarDownloadURL = new TableSchema.TableColumn(schema);
                colvarDownloadURL.ColumnName = "DownloadURL";
                colvarDownloadURL.DataType = DbType.AnsiString;
                colvarDownloadURL.MaxLength = 2000;
                colvarDownloadURL.AutoIncrement = false;
                colvarDownloadURL.IsNullable = false;
                colvarDownloadURL.IsPrimaryKey = false;
                colvarDownloadURL.IsForeignKey = false;
                colvarDownloadURL.IsReadOnly = false;
                
                schema.Columns.Add(colvarDownloadURL);
                
                TableSchema.TableColumn colvarCitation = new TableSchema.TableColumn(schema);
                colvarCitation.ColumnName = "Citation";
                colvarCitation.DataType = DbType.AnsiString;
                colvarCitation.MaxLength = 5000;
                colvarCitation.AutoIncrement = false;
                colvarCitation.IsNullable = false;
                colvarCitation.IsPrimaryKey = false;
                colvarCitation.IsForeignKey = false;
                colvarCitation.IsReadOnly = false;
                
                schema.Columns.Add(colvarCitation);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.AnsiString;
                colvarTitle.MaxLength = 5000;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = false;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarKeywords = new TableSchema.TableColumn(schema);
                colvarKeywords.ColumnName = "Keywords";
                colvarKeywords.DataType = DbType.AnsiString;
                colvarKeywords.MaxLength = 1000;
                colvarKeywords.AutoIncrement = false;
                colvarKeywords.IsNullable = false;
                colvarKeywords.IsPrimaryKey = false;
                colvarKeywords.IsForeignKey = false;
                colvarKeywords.IsReadOnly = false;
                
                schema.Columns.Add(colvarKeywords);
                
                TableSchema.TableColumn colvarDateX = new TableSchema.TableColumn(schema);
                colvarDateX.ColumnName = "Date";
                colvarDateX.DataType = DbType.DateTime;
                colvarDateX.MaxLength = 0;
                colvarDateX.AutoIncrement = false;
                colvarDateX.IsNullable = false;
                colvarDateX.IsPrimaryKey = false;
                colvarDateX.IsForeignKey = false;
                colvarDateX.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateX);
                
                TableSchema.TableColumn colvarInput = new TableSchema.TableColumn(schema);
                colvarInput.ColumnName = "Input";
                colvarInput.DataType = DbType.AnsiString;
                colvarInput.MaxLength = 5000;
                colvarInput.AutoIncrement = false;
                colvarInput.IsNullable = false;
                colvarInput.IsPrimaryKey = false;
                colvarInput.IsForeignKey = false;
                colvarInput.IsReadOnly = false;
                
                schema.Columns.Add(colvarInput);
                
                TableSchema.TableColumn colvarRequeryURL = new TableSchema.TableColumn(schema);
                colvarRequeryURL.ColumnName = "RequeryURL";
                colvarRequeryURL.DataType = DbType.AnsiString;
                colvarRequeryURL.MaxLength = 5000;
                colvarRequeryURL.AutoIncrement = false;
                colvarRequeryURL.IsNullable = false;
                colvarRequeryURL.IsPrimaryKey = false;
                colvarRequeryURL.IsForeignKey = false;
                colvarRequeryURL.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequeryURL);
                
                TableSchema.TableColumn colvarDigitalObjectIdentifierID = new TableSchema.TableColumn(schema);
                colvarDigitalObjectIdentifierID.ColumnName = "DigitalObjectIdentifierID";
                colvarDigitalObjectIdentifierID.DataType = DbType.Int32;
                colvarDigitalObjectIdentifierID.MaxLength = 0;
                colvarDigitalObjectIdentifierID.AutoIncrement = false;
                colvarDigitalObjectIdentifierID.IsNullable = false;
                colvarDigitalObjectIdentifierID.IsPrimaryKey = false;
                colvarDigitalObjectIdentifierID.IsForeignKey = false;
                colvarDigitalObjectIdentifierID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDigitalObjectIdentifierID);
                
                TableSchema.TableColumn colvarMetadataJson = new TableSchema.TableColumn(schema);
                colvarMetadataJson.ColumnName = "MetadataJson";
                colvarMetadataJson.DataType = DbType.AnsiString;
                colvarMetadataJson.MaxLength = -1;
                colvarMetadataJson.AutoIncrement = false;
                colvarMetadataJson.IsNullable = false;
                colvarMetadataJson.IsPrimaryKey = false;
                colvarMetadataJson.IsForeignKey = false;
                colvarMetadataJson.IsReadOnly = false;
                
                schema.Columns.Add(colvarMetadataJson);
                
                TableSchema.TableColumn colvarZipFullName = new TableSchema.TableColumn(schema);
                colvarZipFullName.ColumnName = "ZipFullName";
                colvarZipFullName.DataType = DbType.AnsiString;
                colvarZipFullName.MaxLength = 2000;
                colvarZipFullName.AutoIncrement = false;
                colvarZipFullName.IsNullable = false;
                colvarZipFullName.IsPrimaryKey = false;
                colvarZipFullName.IsForeignKey = false;
                colvarZipFullName.IsReadOnly = false;
                
                schema.Columns.Add(colvarZipFullName);
                
                TableSchema.TableColumn colvarZipCheckSum = new TableSchema.TableColumn(schema);
                colvarZipCheckSum.ColumnName = "ZipCheckSum";
                colvarZipCheckSum.DataType = DbType.AnsiString;
                colvarZipCheckSum.MaxLength = 64;
                colvarZipCheckSum.AutoIncrement = false;
                colvarZipCheckSum.IsNullable = false;
                colvarZipCheckSum.IsPrimaryKey = false;
                colvarZipCheckSum.IsForeignKey = false;
                colvarZipCheckSum.IsReadOnly = false;
                
                schema.Columns.Add(colvarZipCheckSum);
                
                TableSchema.TableColumn colvarZipURL = new TableSchema.TableColumn(schema);
                colvarZipURL.ColumnName = "ZipURL";
                colvarZipURL.DataType = DbType.AnsiString;
                colvarZipURL.MaxLength = 2000;
                colvarZipURL.AutoIncrement = false;
                colvarZipURL.IsNullable = false;
                colvarZipURL.IsPrimaryKey = false;
                colvarZipURL.IsForeignKey = false;
                colvarZipURL.IsReadOnly = false;
                
                schema.Columns.Add(colvarZipURL);
                
                TableSchema.TableColumn colvarPlaces = new TableSchema.TableColumn(schema);
                colvarPlaces.ColumnName = "Places";
                colvarPlaces.DataType = DbType.AnsiString;
                colvarPlaces.MaxLength = 5000;
                colvarPlaces.AutoIncrement = false;
                colvarPlaces.IsNullable = true;
                colvarPlaces.IsPrimaryKey = false;
                colvarPlaces.IsForeignKey = false;
                colvarPlaces.IsReadOnly = false;
                
                schema.Columns.Add(colvarPlaces);
                
                TableSchema.TableColumn colvarLatitudeNorth = new TableSchema.TableColumn(schema);
                colvarLatitudeNorth.ColumnName = "LatitudeNorth";
                colvarLatitudeNorth.DataType = DbType.Double;
                colvarLatitudeNorth.MaxLength = 0;
                colvarLatitudeNorth.AutoIncrement = false;
                colvarLatitudeNorth.IsNullable = true;
                colvarLatitudeNorth.IsPrimaryKey = false;
                colvarLatitudeNorth.IsForeignKey = false;
                colvarLatitudeNorth.IsReadOnly = false;
                
                schema.Columns.Add(colvarLatitudeNorth);
                
                TableSchema.TableColumn colvarLatitudeSouth = new TableSchema.TableColumn(schema);
                colvarLatitudeSouth.ColumnName = "LatitudeSouth";
                colvarLatitudeSouth.DataType = DbType.Double;
                colvarLatitudeSouth.MaxLength = 0;
                colvarLatitudeSouth.AutoIncrement = false;
                colvarLatitudeSouth.IsNullable = true;
                colvarLatitudeSouth.IsPrimaryKey = false;
                colvarLatitudeSouth.IsForeignKey = false;
                colvarLatitudeSouth.IsReadOnly = false;
                
                schema.Columns.Add(colvarLatitudeSouth);
                
                TableSchema.TableColumn colvarLongitudeWest = new TableSchema.TableColumn(schema);
                colvarLongitudeWest.ColumnName = "LongitudeWest";
                colvarLongitudeWest.DataType = DbType.Double;
                colvarLongitudeWest.MaxLength = 0;
                colvarLongitudeWest.AutoIncrement = false;
                colvarLongitudeWest.IsNullable = true;
                colvarLongitudeWest.IsPrimaryKey = false;
                colvarLongitudeWest.IsForeignKey = false;
                colvarLongitudeWest.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitudeWest);
                
                TableSchema.TableColumn colvarLongitudeEast = new TableSchema.TableColumn(schema);
                colvarLongitudeEast.ColumnName = "LongitudeEast";
                colvarLongitudeEast.DataType = DbType.Double;
                colvarLongitudeEast.MaxLength = 0;
                colvarLongitudeEast.AutoIncrement = false;
                colvarLongitudeEast.IsNullable = true;
                colvarLongitudeEast.IsPrimaryKey = false;
                colvarLongitudeEast.IsForeignKey = false;
                colvarLongitudeEast.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitudeEast);
                
                TableSchema.TableColumn colvarElevationMinimum = new TableSchema.TableColumn(schema);
                colvarElevationMinimum.ColumnName = "ElevationMinimum";
                colvarElevationMinimum.DataType = DbType.Double;
                colvarElevationMinimum.MaxLength = 0;
                colvarElevationMinimum.AutoIncrement = false;
                colvarElevationMinimum.IsNullable = true;
                colvarElevationMinimum.IsPrimaryKey = false;
                colvarElevationMinimum.IsForeignKey = false;
                colvarElevationMinimum.IsReadOnly = false;
                
                schema.Columns.Add(colvarElevationMinimum);
                
                TableSchema.TableColumn colvarElevationMaximum = new TableSchema.TableColumn(schema);
                colvarElevationMaximum.ColumnName = "ElevationMaximum";
                colvarElevationMaximum.DataType = DbType.Double;
                colvarElevationMaximum.MaxLength = 0;
                colvarElevationMaximum.AutoIncrement = false;
                colvarElevationMaximum.IsNullable = true;
                colvarElevationMaximum.IsPrimaryKey = false;
                colvarElevationMaximum.IsForeignKey = false;
                colvarElevationMaximum.IsReadOnly = false;
                
                schema.Columns.Add(colvarElevationMaximum);
                
                TableSchema.TableColumn colvarStartDate = new TableSchema.TableColumn(schema);
                colvarStartDate.ColumnName = "StartDate";
                colvarStartDate.DataType = DbType.DateTime;
                colvarStartDate.MaxLength = 0;
                colvarStartDate.AutoIncrement = false;
                colvarStartDate.IsNullable = true;
                colvarStartDate.IsPrimaryKey = false;
                colvarStartDate.IsForeignKey = false;
                colvarStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStartDate);
                
                TableSchema.TableColumn colvarEndDate = new TableSchema.TableColumn(schema);
                colvarEndDate.ColumnName = "EndDate";
                colvarEndDate.DataType = DbType.DateTime;
                colvarEndDate.MaxLength = 0;
                colvarEndDate.AutoIncrement = false;
                colvarEndDate.IsNullable = true;
                colvarEndDate.IsPrimaryKey = false;
                colvarEndDate.IsForeignKey = false;
                colvarEndDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndDate);
                
                TableSchema.TableColumn colvarOpenDataPlatformID = new TableSchema.TableColumn(schema);
                colvarOpenDataPlatformID.ColumnName = "OpenDataPlatformID";
                colvarOpenDataPlatformID.DataType = DbType.Guid;
                colvarOpenDataPlatformID.MaxLength = 0;
                colvarOpenDataPlatformID.AutoIncrement = false;
                colvarOpenDataPlatformID.IsNullable = false;
                colvarOpenDataPlatformID.IsPrimaryKey = false;
                colvarOpenDataPlatformID.IsForeignKey = false;
                colvarOpenDataPlatformID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOpenDataPlatformID);
                
                TableSchema.TableColumn colvarDoi = new TableSchema.TableColumn(schema);
                colvarDoi.ColumnName = "DOI";
                colvarDoi.DataType = DbType.AnsiString;
                colvarDoi.MaxLength = 36;
                colvarDoi.AutoIncrement = false;
                colvarDoi.IsNullable = true;
                colvarDoi.IsPrimaryKey = false;
                colvarDoi.IsForeignKey = false;
                colvarDoi.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoi);
                
                TableSchema.TableColumn colvarDOIUrl = new TableSchema.TableColumn(schema);
                colvarDOIUrl.ColumnName = "DOIUrl";
                colvarDOIUrl.DataType = DbType.AnsiString;
                colvarDOIUrl.MaxLength = 52;
                colvarDOIUrl.AutoIncrement = false;
                colvarDOIUrl.IsNullable = true;
                colvarDOIUrl.IsPrimaryKey = false;
                colvarDOIUrl.IsForeignKey = false;
                colvarDOIUrl.IsReadOnly = false;
                
                schema.Columns.Add(colvarDOIUrl);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ObservationsDB"].AddSchema("vUserDownloads",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VUserDownload()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VUserDownload(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VUserDownload(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VUserDownload(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public Guid Id 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("UserId");
		    }
            set 
		    {
			    SetColumnValue("UserId", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("Description")]
        [Bindable(true)]
        public string Description 
	    {
		    get
		    {
			    return GetColumnValue<string>("Description");
		    }
            set 
		    {
			    SetColumnValue("Description", value);
            }
        }
	      
        [XmlAttribute("AddedAt")]
        [Bindable(true)]
        public DateTime? AddedAt 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("AddedAt");
		    }
            set 
		    {
			    SetColumnValue("AddedAt", value);
            }
        }
	      
        [XmlAttribute("AddedBy")]
        [Bindable(true)]
        public string AddedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("AddedBy");
		    }
            set 
		    {
			    SetColumnValue("AddedBy", value);
            }
        }
	      
        [XmlAttribute("UpdatedAt")]
        [Bindable(true)]
        public DateTime? UpdatedAt 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("UpdatedAt");
		    }
            set 
		    {
			    SetColumnValue("UpdatedAt", value);
            }
        }
	      
        [XmlAttribute("UpdatedBy")]
        [Bindable(true)]
        public string UpdatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("UpdatedBy");
		    }
            set 
		    {
			    SetColumnValue("UpdatedBy", value);
            }
        }
	      
        [XmlAttribute("RowVersion")]
        [Bindable(true)]
        public byte[] RowVersion 
	    {
		    get
		    {
			    return GetColumnValue<byte[]>("RowVersion");
		    }
            set 
		    {
			    SetColumnValue("RowVersion", value);
            }
        }
	      
        [XmlAttribute("MetadataURL")]
        [Bindable(true)]
        public string MetadataURL 
	    {
		    get
		    {
			    return GetColumnValue<string>("MetadataURL");
		    }
            set 
		    {
			    SetColumnValue("MetadataURL", value);
            }
        }
	      
        [XmlAttribute("DownloadURL")]
        [Bindable(true)]
        public string DownloadURL 
	    {
		    get
		    {
			    return GetColumnValue<string>("DownloadURL");
		    }
            set 
		    {
			    SetColumnValue("DownloadURL", value);
            }
        }
	      
        [XmlAttribute("Citation")]
        [Bindable(true)]
        public string Citation 
	    {
		    get
		    {
			    return GetColumnValue<string>("Citation");
		    }
            set 
		    {
			    SetColumnValue("Citation", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Keywords")]
        [Bindable(true)]
        public string Keywords 
	    {
		    get
		    {
			    return GetColumnValue<string>("Keywords");
		    }
            set 
		    {
			    SetColumnValue("Keywords", value);
            }
        }
	      
        [XmlAttribute("DateX")]
        [Bindable(true)]
        public DateTime DateX 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Date");
		    }
            set 
		    {
			    SetColumnValue("Date", value);
            }
        }
	      
        [XmlAttribute("Input")]
        [Bindable(true)]
        public string Input 
	    {
		    get
		    {
			    return GetColumnValue<string>("Input");
		    }
            set 
		    {
			    SetColumnValue("Input", value);
            }
        }
	      
        [XmlAttribute("RequeryURL")]
        [Bindable(true)]
        public string RequeryURL 
	    {
		    get
		    {
			    return GetColumnValue<string>("RequeryURL");
		    }
            set 
		    {
			    SetColumnValue("RequeryURL", value);
            }
        }
	      
        [XmlAttribute("DigitalObjectIdentifierID")]
        [Bindable(true)]
        public int DigitalObjectIdentifierID 
	    {
		    get
		    {
			    return GetColumnValue<int>("DigitalObjectIdentifierID");
		    }
            set 
		    {
			    SetColumnValue("DigitalObjectIdentifierID", value);
            }
        }
	      
        [XmlAttribute("MetadataJson")]
        [Bindable(true)]
        public string MetadataJson 
	    {
		    get
		    {
			    return GetColumnValue<string>("MetadataJson");
		    }
            set 
		    {
			    SetColumnValue("MetadataJson", value);
            }
        }
	      
        [XmlAttribute("ZipFullName")]
        [Bindable(true)]
        public string ZipFullName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ZipFullName");
		    }
            set 
		    {
			    SetColumnValue("ZipFullName", value);
            }
        }
	      
        [XmlAttribute("ZipCheckSum")]
        [Bindable(true)]
        public string ZipCheckSum 
	    {
		    get
		    {
			    return GetColumnValue<string>("ZipCheckSum");
		    }
            set 
		    {
			    SetColumnValue("ZipCheckSum", value);
            }
        }
	      
        [XmlAttribute("ZipURL")]
        [Bindable(true)]
        public string ZipURL 
	    {
		    get
		    {
			    return GetColumnValue<string>("ZipURL");
		    }
            set 
		    {
			    SetColumnValue("ZipURL", value);
            }
        }
	      
        [XmlAttribute("Places")]
        [Bindable(true)]
        public string Places 
	    {
		    get
		    {
			    return GetColumnValue<string>("Places");
		    }
            set 
		    {
			    SetColumnValue("Places", value);
            }
        }
	      
        [XmlAttribute("LatitudeNorth")]
        [Bindable(true)]
        public double? LatitudeNorth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LatitudeNorth");
		    }
            set 
		    {
			    SetColumnValue("LatitudeNorth", value);
            }
        }
	      
        [XmlAttribute("LatitudeSouth")]
        [Bindable(true)]
        public double? LatitudeSouth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LatitudeSouth");
		    }
            set 
		    {
			    SetColumnValue("LatitudeSouth", value);
            }
        }
	      
        [XmlAttribute("LongitudeWest")]
        [Bindable(true)]
        public double? LongitudeWest 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LongitudeWest");
		    }
            set 
		    {
			    SetColumnValue("LongitudeWest", value);
            }
        }
	      
        [XmlAttribute("LongitudeEast")]
        [Bindable(true)]
        public double? LongitudeEast 
	    {
		    get
		    {
			    return GetColumnValue<double?>("LongitudeEast");
		    }
            set 
		    {
			    SetColumnValue("LongitudeEast", value);
            }
        }
	      
        [XmlAttribute("ElevationMinimum")]
        [Bindable(true)]
        public double? ElevationMinimum 
	    {
		    get
		    {
			    return GetColumnValue<double?>("ElevationMinimum");
		    }
            set 
		    {
			    SetColumnValue("ElevationMinimum", value);
            }
        }
	      
        [XmlAttribute("ElevationMaximum")]
        [Bindable(true)]
        public double? ElevationMaximum 
	    {
		    get
		    {
			    return GetColumnValue<double?>("ElevationMaximum");
		    }
            set 
		    {
			    SetColumnValue("ElevationMaximum", value);
            }
        }
	      
        [XmlAttribute("StartDate")]
        [Bindable(true)]
        public DateTime? StartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StartDate");
		    }
            set 
		    {
			    SetColumnValue("StartDate", value);
            }
        }
	      
        [XmlAttribute("EndDate")]
        [Bindable(true)]
        public DateTime? EndDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EndDate");
		    }
            set 
		    {
			    SetColumnValue("EndDate", value);
            }
        }
	      
        [XmlAttribute("OpenDataPlatformID")]
        [Bindable(true)]
        public Guid OpenDataPlatformID 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("OpenDataPlatformID");
		    }
            set 
		    {
			    SetColumnValue("OpenDataPlatformID", value);
            }
        }
	      
        [XmlAttribute("Doi")]
        [Bindable(true)]
        public string Doi 
	    {
		    get
		    {
			    return GetColumnValue<string>("DOI");
		    }
            set 
		    {
			    SetColumnValue("DOI", value);
            }
        }
	      
        [XmlAttribute("DOIUrl")]
        [Bindable(true)]
        public string DOIUrl 
	    {
		    get
		    {
			    return GetColumnValue<string>("DOIUrl");
		    }
            set 
		    {
			    SetColumnValue("DOIUrl", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"ID";
            
            public static string UserId = @"UserId";
            
            public static string Name = @"Name";
            
            public static string Description = @"Description";
            
            public static string AddedAt = @"AddedAt";
            
            public static string AddedBy = @"AddedBy";
            
            public static string UpdatedAt = @"UpdatedAt";
            
            public static string UpdatedBy = @"UpdatedBy";
            
            public static string RowVersion = @"RowVersion";
            
            public static string MetadataURL = @"MetadataURL";
            
            public static string DownloadURL = @"DownloadURL";
            
            public static string Citation = @"Citation";
            
            public static string Title = @"Title";
            
            public static string Keywords = @"Keywords";
            
            public static string DateX = @"Date";
            
            public static string Input = @"Input";
            
            public static string RequeryURL = @"RequeryURL";
            
            public static string DigitalObjectIdentifierID = @"DigitalObjectIdentifierID";
            
            public static string MetadataJson = @"MetadataJson";
            
            public static string ZipFullName = @"ZipFullName";
            
            public static string ZipCheckSum = @"ZipCheckSum";
            
            public static string ZipURL = @"ZipURL";
            
            public static string Places = @"Places";
            
            public static string LatitudeNorth = @"LatitudeNorth";
            
            public static string LatitudeSouth = @"LatitudeSouth";
            
            public static string LongitudeWest = @"LongitudeWest";
            
            public static string LongitudeEast = @"LongitudeEast";
            
            public static string ElevationMinimum = @"ElevationMinimum";
            
            public static string ElevationMaximum = @"ElevationMaximum";
            
            public static string StartDate = @"StartDate";
            
            public static string EndDate = @"EndDate";
            
            public static string OpenDataPlatformID = @"OpenDataPlatformID";
            
            public static string Doi = @"DOI";
            
            public static string DOIUrl = @"DOIUrl";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
