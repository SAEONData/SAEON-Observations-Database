using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace NorthwindAccess{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the Customers and Suppliers by City Procedure
        /// </summary>
        public static StoredProcedure CustomersAndSuppliersByCity()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Customers and Suppliers by City", DataService.GetInstance("NorthwindAccess"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CustOrderHist Procedure
        /// </summary>
        public static StoredProcedure CustOrderHist(string CustomerID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CustOrderHist", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[CustomerID]", CustomerID, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CustOrdersDetail Procedure
        /// </summary>
        public static StoredProcedure CustOrdersDetail(int? OrderID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CustOrdersDetail", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[OrderID]", OrderID, DbType.Int32, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CustOrdersOrders Procedure
        /// </summary>
        public static StoredProcedure CustOrdersOrders(string CustomerID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CustOrdersOrders", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[CustomerID]", CustomerID, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Employee Sales by Country Procedure
        /// </summary>
        public static StoredProcedure EmployeeSalesByCountry(DateTime? BeginningDate, DateTime? EndingDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Employee Sales by Country", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[Beginning Date]", BeginningDate, DbType.Date, null, null);
        	
            sp.Command.AddParameter("[Ending Date]", EndingDate, DbType.Date, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Invoices Filter Procedure
        /// </summary>
        public static StoredProcedure InvoicesFilter(string FormsOrdersOrderID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Invoices Filter", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[PARM__Forms!Orders!OrderID]", FormsOrdersOrderID, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Quarterly Orders by Product Procedure
        /// </summary>
        public static StoredProcedure QuarterlyOrdersByProduct()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Quarterly Orders by Product", DataService.GetInstance("NorthwindAccess"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sales by Year Procedure
        /// </summary>
        public static StoredProcedure SalesByYear(DateTime? FormsSalesbyYearDialogBeginningDate, DateTime? FormsSalesbyYearDialogEndingDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sales by Year", DataService.GetInstance("NorthwindAccess"), "");
        	
            sp.Command.AddParameter("[Forms]![Sales by Year Dialog]![BeginningDate]", FormsSalesbyYearDialogBeginningDate, DbType.Date, null, null);
        	
            sp.Command.AddParameter("[Forms]![Sales by Year Dialog]![EndingDate]", FormsSalesbyYearDialogEndingDate, DbType.Date, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sales Totals by Amount Procedure
        /// </summary>
        public static StoredProcedure SalesTotalsByAmount()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sales Totals by Amount", DataService.GetInstance("NorthwindAccess"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Summary of Sales by Quarter Procedure
        /// </summary>
        public static StoredProcedure SummaryOfSalesByQuarter()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Summary of Sales by Quarter", DataService.GetInstance("NorthwindAccess"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Summary of Sales by Year Procedure
        /// </summary>
        public static StoredProcedure SummaryOfSalesByYear()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Summary of Sales by Year", DataService.GetInstance("NorthwindAccess"), "");
        	
            return sp;
        }
        
    }
    
}
