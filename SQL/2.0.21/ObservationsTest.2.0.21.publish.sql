/*
Deployment script for ObservationsTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationsTest"
:setvar DefaultFilePrefix "ObservationsTest"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END



GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_ID]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_IgnoreFirst]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_IgnoreFirst];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_IgnoreLast]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_IgnoreLast];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ID]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ID];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ImportDate]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ImportDate];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_AddedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_UpdatedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_UpdatedAt];


GO
PRINT N'Dropping [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_DataSchema_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [FK_DataSchema_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_DataSchema_DataSourceType]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [FK_DataSchema_DataSourceType];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_DataSource];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_Status];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_ImportBatch];


GO
PRINT N'Starting rebuilding table [dbo].[DataSchema]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSchema] (
    [ID]               UNIQUEIDENTIFIER CONSTRAINT [DF_DataSchema_ID] DEFAULT (newid()) NOT NULL,
    [Code]             VARCHAR (50)     NOT NULL,
    [Name]             VARCHAR (100)    NOT NULL,
    [Description]      VARCHAR (5000)   NULL,
    [DataSourceTypeID] UNIQUEIDENTIFIER NOT NULL,
    [IgnoreFirst]      INT              CONSTRAINT [DF_DataSchema_IgnoreFirst] DEFAULT ((0)) NOT NULL,
    [HasHeaderRow]     BIT              NULL,
    [IgnoreLast]       INT              CONSTRAINT [DF_DataSchema_IgnoreLast] DEFAULT ((0)) NOT NULL,
    [Condition]        VARCHAR (500)    NULL,
    [DataSchema]       TEXT             NULL,
    [UserId]           UNIQUEIDENTIFIER NOT NULL,
    [Delimiter]        VARCHAR (3)      NULL,
    [SplitSelector]    VARCHAR (50)     NULL,
    [SplitIndex]       INT              NULL,
    [AddedAt]          DATETIME         CONSTRAINT [DF_DataSchema_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]        DATETIME         CONSTRAINT [DF_DataSchema_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSchema1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSchema_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSchema_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSchema1]
    ON [dbo].[tmp_ms_xx_DataSchema]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSchema])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSchema] ([AddedAt], [ID], [Code], [Name], [Description], [DataSourceTypeID], [IgnoreFirst], [IgnoreLast], [Condition], [DataSchema], [UserId], [Delimiter], [SplitSelector], [SplitIndex], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [DataSourceTypeID],
                 [IgnoreFirst],
                 [IgnoreLast],
                 [Condition],
                 [DataSchema],
                 [UserId],
                 [Delimiter],
                 [SplitSelector],
                 [SplitIndex],
                 [UpdatedAt]
        FROM     [dbo].[DataSchema]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSchema];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSchema]', N'DataSchema';

EXECUTE sp_rename N'[dbo].[DataSchema].[tmp_ms_xx_index_CX_DataSchema1]', N'CX_DataSchema', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSchema1]', N'PK_DataSchema', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSchema_Code1]', N'UX_DataSchema_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSchema_Name1]', N'UX_DataSchema_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSchema].[IX_DataSchema_DataSourceTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSchema_DataSourceTypeID]
    ON [dbo].[DataSchema]([DataSourceTypeID] ASC);


GO
PRINT N'Creating [dbo].[DataSchema].[IX_DataSchema_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSchema_UserId]
    ON [dbo].[DataSchema]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportBatch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportBatch] (
    [ID]             UNIQUEIDENTIFIER           CONSTRAINT [DF_ImportBatch_ID] DEFAULT newid() ROWGUIDCOL NOT NULL,
    [Code]           INT                        IDENTITY (1, 1) NOT NULL,
    [DataSourceID]   UNIQUEIDENTIFIER           NOT NULL,
    [ImportDate]     DATETIME                   CONSTRAINT [DF_ImportBatch_ImportDate] DEFAULT getdate() NOT NULL,
    [Status]         INT                        NOT NULL,
    [UserId]         UNIQUEIDENTIFIER           NOT NULL,
    [FileName]       VARCHAR (250)              NULL,
    [LogFileName]    VARCHAR (250)              NULL,
    [Comment]        VARCHAR (8000)             NULL,
    [StatusID]       UNIQUEIDENTIFIER           NULL,
    [StatusReasonID] UNIQUEIDENTIFIER           NULL,
    [Errors]         VARCHAR (1000)             NULL,
    [SourceFile]     VARBINARY (MAX) FILESTREAM NULL,
    [Pass1File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass2File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass3File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass4File]      VARBINARY (MAX) FILESTREAM NULL,
    [AddedAt]        DATETIME                   CONSTRAINT [DF_ImportBatch_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]      DATETIME                   CONSTRAINT [DF_ImportBatch_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportBatch1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [ImportDate] ASC, [LogFileName] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_ImportBatch1]
    ON [dbo].[tmp_ms_xx_ImportBatch]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportBatch])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportBatch] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportBatch] ([AddedAt], [ID], [Code], [DataSourceID], [ImportDate], [Status], [UserId], [FileName], [LogFileName], [Comment], [StatusID], [StatusReasonID], [UpdatedAt], [SourceFile], [Pass1File], [Pass2File], [Pass3File], [Pass4File])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [DataSourceID],
                 [ImportDate],
                 [Status],
                 [UserId],
                 [FileName],
                 [LogFileName],
                 [Comment],
                 [StatusID],
                 [StatusReasonID],
                 [UpdatedAt],
                 [SourceFile],
                 [Pass1File],
                 [Pass2File],
                 [Pass3File],
                 [Pass4File]
        FROM     [dbo].[ImportBatch]
        ORDER BY [AddedAt] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportBatch] OFF;
    END

DROP TABLE [dbo].[ImportBatch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportBatch]', N'ImportBatch';

EXECUTE sp_rename N'[dbo].[ImportBatch].[tmp_ms_xx_index_CX_ImportBatch1]', N'CX_ImportBatch', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportBatch1]', N'PK_ImportBatch', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch_Code1]', N'UX_ImportBatch_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch1]', N'UX_ImportBatch', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_DataSourceID]
    ON [dbo].[ImportBatch]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_UserId]
    ON [dbo].[ImportBatch]([UserId] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_ImportDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_ImportDate]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [ImportDate] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_LogFileName]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_LogFileName]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [LogFileName] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusID]
    ON [dbo].[ImportBatch]([StatusID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusReasonID]
    ON [dbo].[ImportBatch]([StatusReasonID] ASC);


GO
PRINT N'Creating [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSchema_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSchema] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSchema_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataSchema_DataSourceType]...';


GO
ALTER TABLE [dbo].[DataSchema] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSchema_DataSourceType] FOREIGN KEY ([DataSourceTypeID]) REFERENCES [dbo].[DataSourceType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[TR_DataSchema_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSchema_Insert] ON [dbo].[DataSchema]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSchema src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSchema_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSchema_Update] ON [dbo].[DataSchema]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSchema src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Insert] ON [dbo].[ImportBatch]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        ImportBatch src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Update]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Update] ON [dbo].[ImportBatch]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        ImportBatch src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Refreshing [dbo].[vDataSchema]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSchema]';


GO
PRINT N'Refreshing [dbo].[vDataSource]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSource]';


GO
PRINT N'Refreshing [dbo].[vObservation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservation]';


GO
PRINT N'Refreshing [dbo].[vSensor]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSensor]';


GO
PRINT N'Altering [dbo].[vObservationRoles]...';


GO
--> Changed 2.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.3 20160503 TimPN
ALTER VIEW [dbo].[vObservationRoles]
AS
--> Changed 2.0.16 20161107 TimPN
----> Changed 2.0.3 20160421 TimPN
----SELECT     vo.ID, vo.SensorID, vo.PhenonmenonOfferingID, vo.PhenonmenonUOMID, vo.UserId, vo.RawValue, vo.DataValue, vo.ImportBatchID, vo.ValueDate, 
--SELECT     vo.ID, vo.SensorID, vo.PhenomenonOfferingID, vo.PhenomenonUOMID, vo.UserId, vo.RawValue, vo.DataValue, vo.ImportBatchID, vo.ValueDate, 
----> Changed 2.0.3 20160421 TimPN
--                      vo.spCode, vo.spDesc, vo.spName, vo.spURL, vo.DataSchemaID, vo.DataSourceID, vo.PhenomenonID, vo.StationID, vo.phName, vo.stName, vo.dsName, 
--                      vo.dschemaName, vo.offName, vo.offID, vo.psName, vo.psID, vo.orgName, vo.orgID, vo.uomUnit, vo.uomSymbol, vo.UserName,
--                      dr.DataSourceID AS Expr2, dr.DateStart, dr.DateEnd,
--                      ur.UserId AS Expr5, vo.Comment
--FROM         dbo.vObservation AS vo 
--INNER JOIN 
--(
-- SELECT dr.DataSourceID,
--        ur.UserId,
--        MIN(dr.DateStart) DateStart,
--        MAX(dr.DateEnd) DateEnd
-- FROM DataSourceRole dr
-- INNER JOIN    dbo.aspnet_Roles AS ar ON dr.RoleId = ar.RoleId INNER JOIN
--               dbo.aspnet_UsersInRoles AS ur ON ar.RoleId = ur.RoleId
-- GROUP By dr.DataSourceID,ur.UserId
--) dr
--ON vo.DataSourceID = dr.DataSourceID 
--AND vo.ValueDate >= dr.DateStart AND vo.ValueDate <= dr.DateEnd
--INNER JOIN aspnet_Users ur
-- ON dr.UserId = ur.UserId
	Select
		vObservation.*, DataSourceRoles.RoleUserId
	from
		vObservation
		inner join
        (
			Select
				dsr.DataSourceID, aspnet_UsersInRoles.UserId RoleUserId, Min(dsr.DateStart) DateStart, Max(dsr.DateEnd) DateEnd
			from
				DataSourceRole dsr
			inner join aspnet_UsersInRoles
				on (dsr.RoleId = aspnet_UsersInRoles.RoleId)
			group by
				dsr.DataSourceID, aspnet_UsersInRoles.UserId
		) DataSourceRoles
		on (vObservation.DataSourceID = DataSourceRoles.DataSourceID) and
		   (vObservation.ValueDate >= DataSourceRoles.DateStart) and 
		   (vObservation.ValueDate <= DataSourceRoles.DateEnd)
--< Changed 2.0.16 20161107 TimPN
GO
PRINT N'Refreshing [dbo].[vImportBatch]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vImportBatch]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_DataSchema];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSchema];

ALTER TABLE [dbo].[DataSchema] WITH CHECK CHECK CONSTRAINT [FK_DataSchema_aspnet_Users];

ALTER TABLE [dbo].[DataSchema] WITH CHECK CHECK CONSTRAINT [FK_DataSchema_DataSourceType];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_DataSchema];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_ImportBatch];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_aspnet_Users];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_DataSource];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_Status];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_StatusReason];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_ImportBatch];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_ImportBatch];


GO
PRINT N'Update complete.';


GO
