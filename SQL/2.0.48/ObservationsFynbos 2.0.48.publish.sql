/*
Deployment script for ObservationsFynbos

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationsFynbos"
:setvar DefaultFilePrefix "ObservationsFynbos"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL14.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL14.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The column [dbo].[UserDownloads].[DownloadURI] is being dropped, data loss could occur.

The column [dbo].[UserDownloads].[Citation] on table [dbo].[UserDownloads] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[UserDownloads].[DOI] on table [dbo].[UserDownloads] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[UserDownloads].[DownloadURL] on table [dbo].[UserDownloads] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[UserDownloads].[MetadataURL] on table [dbo].[UserDownloads] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[UserDownloads].[QueryURL] on table [dbo].[UserDownloads] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

--IF EXISTS (select top 1 1 from [dbo].[UserDownloads])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[DF_UserDownloads_ID]...';


GO
ALTER TABLE [dbo].[UserDownloads] DROP CONSTRAINT [DF_UserDownloads_ID];


GO
PRINT N'Dropping [dbo].[DF_UserDownloads_AddedAt]...';


GO
ALTER TABLE [dbo].[UserDownloads] DROP CONSTRAINT [DF_UserDownloads_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_UserDownloads_UpdatedAt]...';


GO
ALTER TABLE [dbo].[UserDownloads] DROP CONSTRAINT [DF_UserDownloads_UpdatedAt];


GO
PRINT N'Starting rebuilding table [dbo].[UserDownloads]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserDownloads] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_UserDownloads_ID] DEFAULT (newid()) NOT NULL,
    [UserId]      NVARCHAR (128)   NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [QueryInput]  VARCHAR (5000)   NOT NULL,
    [QueryURL]    VARCHAR (5000)   NOT NULL,
    [DOI]         VARCHAR (2000)   NOT NULL,
    [MetadataURL] VARCHAR (2000)   NOT NULL,
    [DownloadURL] VARCHAR (2000)   NOT NULL,
    [Citation]    VARCHAR (1000)   NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_UserDownloads_AddedAt] DEFAULT (getdate()) NULL,
    [AddedBy]     NVARCHAR (128)   NOT NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_UserDownloads_UpdatedAt] DEFAULT (getdate()) NULL,
    [UpdatedBy]   NVARCHAR (128)   NOT NULL,
    [RowVersion]  ROWVERSION       NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserDownloads1] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_UserDownloads_UserId_Name1] UNIQUE NONCLUSTERED ([UserId] ASC, [Name] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserDownloads])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_UserDownloads] ([ID], [UserId], [Name], [Description], [QueryInput], [AddedAt], [AddedBy], [UpdatedAt], [UpdatedBy])
        SELECT   [ID],
                 [UserId],
                 [Name],
                 [Description],
                 [QueryInput],
                 [AddedAt],
                 [AddedBy],
                 [UpdatedAt],
                 [UpdatedBy]
        FROM     [dbo].[UserDownloads]
        ORDER BY [ID] ASC;
    END

DROP TABLE [dbo].[UserDownloads];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserDownloads]', N'UserDownloads';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserDownloads1]', N'PK_UserDownloads', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_UserDownloads_UserId_Name1]', N'UX_UserDownloads_UserId_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[ImportBatchSummary].[IX_ImportBatchSummary_Count]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatchSummary_Count]
    ON [dbo].[ImportBatchSummary]([Count] ASC);


GO
PRINT N'Creating [dbo].[ImportBatchSummary].[IX_ImportBatchSummary_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatchSummary_EndDate]
    ON [dbo].[ImportBatchSummary]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[ImportBatchSummary].[IX_ImportBatchSummary_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatchSummary_StartDate]
    ON [dbo].[ImportBatchSummary]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[TR_UserDownloads_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_UserDownloads_Insert] ON [dbo].[UserDownloads]
FOR INSERT
AS
BEGIN
  SET NoCount ON
  Update
      src
  set
      AddedAt = GetDate(),
      UpdatedAt = NULL
  from
    UserDownloads src
    inner join inserted ins
      on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_UserDownloads_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_UserDownloads_Update] ON [dbo].[UserDownloads]
FOR UPDATE
AS
BEGIN
  SET NoCount ON
  Update
      src
  set
    AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate()),
    UpdatedAt = GetDate()
  from
    UserDownloads src
    inner join inserted ins
      on (ins.ID = src.ID)
    inner join deleted del
      on (del.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Update complete.';


GO
