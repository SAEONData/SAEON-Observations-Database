/*
Deployment script for ObservationsTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationsTest"
:setvar DefaultFilePrefix "ObservationsTest"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF_DataLog_ID]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [DF_DataLog_ID];


GO
PRINT N'Dropping [dbo].[DF_DataLog_ImportDate]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [DF_DataLog_ImportDate];


GO
PRINT N'Dropping [dbo].[DF_DataLog_AddedAt]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [DF_DataLog_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataLog_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [DF_DataLog_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_ID]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_IgnoreFirst]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_IgnoreFirst];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_IgnoreLast]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_IgnoreLast];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSchema_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [DF_DataSchema_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSource_ID]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [DF_DataSource_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSource_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [DF_DataSource_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSource_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [DF_DataSource_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceRole_ID]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [DF_DataSourceRole_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSourceRole_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [DF_DataSourceRole_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceRole_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [DF_DataSourceRole_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceTransformation_ID]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [DF_DataSourceTransformation_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSourceTransformation_Rank]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [DF_DataSourceTransformation_Rank];


GO
PRINT N'Dropping [dbo].[DF_DataSourceTransformation_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [DF_DataSourceTransformation_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceTransformation_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [DF_DataSourceTransformation_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceType_ID]...';


GO
ALTER TABLE [dbo].[DataSourceType] DROP CONSTRAINT [DF_DataSourceType_ID];


GO
PRINT N'Dropping [dbo].[DF_DataSourceType_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSourceType] DROP CONSTRAINT [DF_DataSourceType_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSourceType_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSourceType] DROP CONSTRAINT [DF_DataSourceType_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ID]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ID];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ImportDate]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ImportDate];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_AddedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_UpdatedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_AddedAt]...';


GO
ALTER TABLE [dbo].[Instrument] DROP CONSTRAINT [DF_Instrument_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_ID]...';


GO
ALTER TABLE [dbo].[Instrument] DROP CONSTRAINT [DF_Instrument_ID];


GO
PRINT N'Dropping [dbo].[DF_Instrument_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Instrument] DROP CONSTRAINT [DF_Instrument_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_DataSource_ID]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [DF_Instrument_DataSource_ID];


GO
PRINT N'Dropping [dbo].[DF_Instrument_DataSource_AddedAt]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [DF_Instrument_DataSource_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_DataSource_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [DF_Instrument_DataSource_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_Sensor_ID]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [DF_Instrument_Sensor_ID];


GO
PRINT N'Dropping [dbo].[DF_Instrument_Sensor_AddedAt]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [DF_Instrument_Sensor_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Instrument_Sensor_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [DF_Instrument_Sensor_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Observation_ID]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [DF_Observation_ID];


GO
PRINT N'Dropping [dbo].[DF_Observation_AddedDate]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [DF_Observation_AddedDate];


GO
PRINT N'Dropping [dbo].[DF_Observation_AddedAt]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [DF_Observation_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Observation_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [DF_Observation_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Offering_ID]...';


GO
ALTER TABLE [dbo].[Offering] DROP CONSTRAINT [DF_Offering_ID];


GO
PRINT N'Dropping [dbo].[DF_Offering_AddedAt]...';


GO
ALTER TABLE [dbo].[Offering] DROP CONSTRAINT [DF_Offering_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Offering_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Offering] DROP CONSTRAINT [DF_Offering_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Site_ID]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [DF_Organisation_Site_ID];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Site_AddedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [DF_Organisation_Site_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Site_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [DF_Organisation_Site_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Station_ID]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [DF_Organisation_Station_ID];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Station_AddedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [DF_Organisation_Station_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Station_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [DF_Organisation_Station_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_OrganisationRole_ID]...';


GO
ALTER TABLE [dbo].[OrganisationRole] DROP CONSTRAINT [DF_OrganisationRole_ID];


GO
PRINT N'Dropping [dbo].[DF_OrganisationRole_AddedAt]...';


GO
ALTER TABLE [dbo].[OrganisationRole] DROP CONSTRAINT [DF_OrganisationRole_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_OrganisationRole_UpdatedAt]...';


GO
ALTER TABLE [dbo].[OrganisationRole] DROP CONSTRAINT [DF_OrganisationRole_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Phenomenon_ID]...';


GO
ALTER TABLE [dbo].[Phenomenon] DROP CONSTRAINT [DF_Phenomenon_ID];


GO
PRINT N'Dropping [dbo].[DF_Phenomenon_AddedAt]...';


GO
ALTER TABLE [dbo].[Phenomenon] DROP CONSTRAINT [DF_Phenomenon_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Phenomenon_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Phenomenon] DROP CONSTRAINT [DF_Phenomenon_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonOffering_ID]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [DF_PhenomenonOffering_ID];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonOffering_AddedAt]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [DF_PhenomenonOffering_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonOffering_UpdatedAt]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [DF_PhenomenonOffering_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonUOM_ID]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [DF_PhenomenonUOM_ID];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonUOM_IsDefault]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [DF_PhenomenonUOM_IsDefault];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonUOM_AddedAt]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [DF_PhenomenonUOM_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_PhenomenonUOM_UpdatedAt]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [DF_PhenomenonUOM_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Programme_ID]...';


GO
ALTER TABLE [dbo].[Programme] DROP CONSTRAINT [DF_Programme_ID];


GO
PRINT N'Dropping [dbo].[DF_Programme_AddedAt]...';


GO
ALTER TABLE [dbo].[Programme] DROP CONSTRAINT [DF_Programme_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Programme_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Programme] DROP CONSTRAINT [DF_Programme_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Project_ID]...';


GO
ALTER TABLE [dbo].[Project] DROP CONSTRAINT [DF_Project_ID];


GO
PRINT N'Dropping [dbo].[DF_Project_AddedAt]...';


GO
ALTER TABLE [dbo].[Project] DROP CONSTRAINT [DF_Project_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Project_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Project] DROP CONSTRAINT [DF_Project_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Project_Station_ID]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [DF_Project_Station_ID];


GO
PRINT N'Dropping [dbo].[DF_Project_Station_AddedAt]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [DF_Project_Station_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Project_Station__UpdatedAt]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [DF_Project_Station__UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_ID]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_ID];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_AddedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_UpdatedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumnType_ID]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] DROP CONSTRAINT [DF_SchemaColumnType_ID];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumnType_AddedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] DROP CONSTRAINT [DF_SchemaColumnType_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumnType_UpdatedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] DROP CONSTRAINT [DF_SchemaColumnType_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Sensor_ID]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [DF_Sensor_ID];


GO
PRINT N'Dropping [dbo].[DF_Sensor_AddedAt]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [DF_Sensor_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Sensor_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [DF_Sensor_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Site_AddedAt]...';


GO
ALTER TABLE [dbo].[Site] DROP CONSTRAINT [DF_Site_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Site_ID]...';


GO
ALTER TABLE [dbo].[Site] DROP CONSTRAINT [DF_Site_ID];


GO
PRINT N'Dropping [dbo].[DF_Site_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Site] DROP CONSTRAINT [DF_Site_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Station_ID]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [DF_Station_ID];


GO
PRINT N'Dropping [dbo].[DF_Station_AddedAt]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [DF_Station_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Station_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [DF_Station_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Station_Instrument_ID]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [DF_Station_Instrument_ID];


GO
PRINT N'Dropping [dbo].[DF_Station_Instrument_AddedAt]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [DF_Station_Instrument_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Station_Instrument_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [DF_Station_Instrument_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Status_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Status] DROP CONSTRAINT [DF_Status_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Status_ID]...';


GO
ALTER TABLE [dbo].[Status] DROP CONSTRAINT [DF_Status_ID];


GO
PRINT N'Dropping [dbo].[DF_Status_AddedAt]...';


GO
ALTER TABLE [dbo].[Status] DROP CONSTRAINT [DF_Status_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_StatusReason_ID]...';


GO
ALTER TABLE [dbo].[StatusReason] DROP CONSTRAINT [DF_StatusReason_ID];


GO
PRINT N'Dropping [dbo].[DF_StatusReason_AddedAt]...';


GO
ALTER TABLE [dbo].[StatusReason] DROP CONSTRAINT [DF_StatusReason_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_StatusReason_UpdatedAt]...';


GO
ALTER TABLE [dbo].[StatusReason] DROP CONSTRAINT [DF_StatusReason_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_TransformationType_ID]...';


GO
ALTER TABLE [dbo].[TransformationType] DROP CONSTRAINT [DF_TransformationType_ID];


GO
PRINT N'Dropping [dbo].[DF_TransformationType_AddedAt]...';


GO
ALTER TABLE [dbo].[TransformationType] DROP CONSTRAINT [DF_TransformationType_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_TransformationType_UpdatedAt]...';


GO
ALTER TABLE [dbo].[TransformationType] DROP CONSTRAINT [DF_TransformationType_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_UnitOfMeasure_ID]...';


GO
ALTER TABLE [dbo].[UnitOfMeasure] DROP CONSTRAINT [DF_UnitOfMeasure_ID];


GO
PRINT N'Dropping [dbo].[DF_UnitOfMeasure_AddedAt]...';


GO
ALTER TABLE [dbo].[UnitOfMeasure] DROP CONSTRAINT [DF_UnitOfMeasure_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_UnitOfMeasure_UpdatedAt]...';


GO
ALTER TABLE [dbo].[UnitOfMeasure] DROP CONSTRAINT [DF_UnitOfMeasure_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_AddedAt]...';


GO
ALTER TABLE [dbo].[Organisation] DROP CONSTRAINT [DF_Organisation_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Organisation] DROP CONSTRAINT [DF_Organisation_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_ID]...';


GO
ALTER TABLE [dbo].[Organisation] DROP CONSTRAINT [DF_Organisation_ID];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Instrument_ID]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [DF_Organisation_Instrument_ID];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Instrument_AddedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [DF_Organisation_Instrument_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_Organisation_Instrument_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [DF_Organisation_Instrument_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_AuditLog_AddedAt]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [DF_AuditLog_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_AuditLog_ID]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [DF_AuditLog_ID];


GO
PRINT N'Dropping [dbo].[DF_AuditLog_UpdatedAt]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [DF_AuditLog_UpdatedAt];


GO
PRINT N'Dropping [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_DataLog_Sensor]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_Sensor];


GO
PRINT N'Dropping [dbo].[FK_DataLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_DataLog_DataSourceTransformation]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_DataSourceTransformation];


GO
PRINT N'Dropping [dbo].[FK_DataLog_Status]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_Status];


GO
PRINT N'Dropping [dbo].[FK_DataLog_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_DataLog_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_DataLog_StatusReason]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_DataSchema_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [FK_DataSchema_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_DataSchema_DataSourceType]...';


GO
ALTER TABLE [dbo].[DataSchema] DROP CONSTRAINT [FK_DataSchema_DataSourceType];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Instrument_DataSource_DataSource]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [FK_Instrument_DataSource_DataSource];


GO
PRINT N'Dropping [dbo].[FK_Sensor_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSourceRole_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [FK_DataSourceRole_DataSource];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSourceRole_aspnet_Roles]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [FK_DataSourceRole_aspnet_Roles];


GO
PRINT N'Dropping [dbo].[FK_DataSourceRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [FK_DataSourceRole_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_Sensor]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_Sensor];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_Phenomenon]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_TransformationType]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_TransformationType];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_NewPhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_NewPhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_DataSourceType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceType] DROP CONSTRAINT [FK_DataSourceType_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_Status];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument] DROP CONSTRAINT [FK_Instrument_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Instrument_DataSource_Instrument]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [FK_Instrument_DataSource_Instrument];


GO
PRINT N'Dropping [dbo].[FK_Instrument_Sensor_Instrument]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [FK_Instrument_Sensor_Instrument];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Instrument_Instrument]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [FK_Organisation_Instrument_Instrument];


GO
PRINT N'Dropping [dbo].[FK_Station_Instrument_Instrument]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [FK_Station_Instrument_Instrument];


GO
PRINT N'Dropping [dbo].[FK_Instrument_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] DROP CONSTRAINT [FK_Instrument_DataSource_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Instrument_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [FK_Instrument_Sensor_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Instrument_Sensor_Sensor]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [FK_Instrument_Sensor_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Observation_Sensor]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Observation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Observation_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_Observation_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_Observation_Status]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_Status];


GO
PRINT N'Dropping [dbo].[FK_Observation_StatusReason]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_Offering_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Offering] DROP CONSTRAINT [FK_Offering_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonOffering_Offering]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [FK_PhenomenonOffering_Offering];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Site_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [FK_Organisation_Site_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Site_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [FK_Organisation_Site_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Site_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [FK_Organisation_Site_Organisation];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Site_Site]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [FK_Organisation_Site_Site];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [FK_Organisation_Station_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Station_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [FK_Organisation_Station_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Station_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [FK_Organisation_Station_Organisation];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Station_Station]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [FK_Organisation_Station_Station];


GO
PRINT N'Dropping [dbo].[FK_OrganisationRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[OrganisationRole] DROP CONSTRAINT [FK_OrganisationRole_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Instrument_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [FK_Organisation_Instrument_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_Sensor_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_Phenomenon_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Phenomenon] DROP CONSTRAINT [FK_Phenomenon_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_Phenomenon]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonOffering_Phenomenon]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [FK_PhenomenonOffering_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonUOM_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [FK_PhenomenonUOM_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_Progress_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonOffering_aspnet_Users]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] DROP CONSTRAINT [FK_PhenomenonOffering_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonUOM_aspnet_Users]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [FK_PhenomenonUOM_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_PhenomenonUOM_UnitOfMeasure]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] DROP CONSTRAINT [FK_PhenomenonUOM_UnitOfMeasure];


GO
PRINT N'Dropping [dbo].[FK_Programme_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Programme] DROP CONSTRAINT [FK_Programme_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Project_Programme]...';


GO
ALTER TABLE [dbo].[Project] DROP CONSTRAINT [FK_Project_Programme];


GO
PRINT N'Dropping [dbo].[FK_Project_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Project] DROP CONSTRAINT [FK_Project_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Project_Station_ProjectID]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [FK_Project_Station_ProjectID];


GO
PRINT N'Dropping [dbo].[FK_Project_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [FK_Project_Station_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Project_Station_StationID]...';


GO
ALTER TABLE [dbo].[Project_Station] DROP CONSTRAINT [FK_Project_Station_StationID];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_SchemaColumnType]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_SchemaColumnType];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumnType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] DROP CONSTRAINT [FK_SchemaColumnType_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Station_Site]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [FK_Station_Site];


GO
PRINT N'Dropping [dbo].[FK_Site_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Site] DROP CONSTRAINT [FK_Site_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [FK_Station_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Station_ProjectSite]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [FK_Station_ProjectSite];


GO
PRINT N'Dropping [dbo].[FK_Station_Instrument_Station]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [FK_Station_Instrument_Station];


GO
PRINT N'Dropping [dbo].[FK_Station_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Station_Instrument] DROP CONSTRAINT [FK_Station_Instrument_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Status_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Status] DROP CONSTRAINT [FK_Status_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_StatusReason_aspnet_Users]...';


GO
ALTER TABLE [dbo].[StatusReason] DROP CONSTRAINT [FK_StatusReason_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_TransformationType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[TransformationType] DROP CONSTRAINT [FK_TransformationType_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_UnitOfMeasure_aspnet_Users]...';


GO
ALTER TABLE [dbo].[UnitOfMeasure] DROP CONSTRAINT [FK_UnitOfMeasure_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ProjectSite_Organisation]...';


GO
ALTER TABLE [dbo].[ProjectSite] DROP CONSTRAINT [FK_ProjectSite_Organisation];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Instrument_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [FK_Organisation_Instrument_Organisation];


GO
PRINT N'Dropping [dbo].[FK_Organisation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation] DROP CONSTRAINT [FK_Organisation_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [FK_Organisation_Instrument_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_AuditLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [FK_AuditLog_aspnet_Users];


GO
PRINT N'Starting rebuilding table [dbo].[DataLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataLog] (
    [ID]                         UNIQUEIDENTIFIER CONSTRAINT [DF_DataLog_ID] DEFAULT newid() NOT NULL,
    [SensorID]                   UNIQUEIDENTIFIER NULL,
    [ImportDate]                 DATETIME         CONSTRAINT [DF_DataLog_ImportDate] DEFAULT (getdate()) NOT NULL,
    [ValueDate]                  DATETIME         NULL,
    [ValueTime]                  DATETIME         NULL,
    [ValueText]                  VARCHAR (50)     NOT NULL,
    [TransformValueText]         VARCHAR (50)     NULL,
    [RawValue]                   FLOAT (53)       NULL,
    [DataValue]                  FLOAT (53)       NULL,
    [Comment]                    VARCHAR (250)    NULL,
    [InvalidDateValue]           VARCHAR (50)     NULL,
    [InvalidTimeValue]           VARCHAR (50)     NULL,
    [InvalidOffering]            VARCHAR (50)     NULL,
    [InvalidUOM]                 VARCHAR (50)     NULL,
    [DataSourceTransformationID] UNIQUEIDENTIFIER NULL,
    [StatusID]                   UNIQUEIDENTIFIER NOT NULL,
    [StatusReasonID]             UNIQUEIDENTIFIER NULL,
    [ImportStatus]               VARCHAR (500)    NOT NULL,
    [UserId]                     UNIQUEIDENTIFIER NULL,
    [PhenomenonOfferingID]       UNIQUEIDENTIFIER NULL,
    [PhenomenonUOMID]            UNIQUEIDENTIFIER NULL,
    [ImportBatchID]              UNIQUEIDENTIFIER NOT NULL,
    [RawRecordData]              VARCHAR (500)    NULL,
    [RawFieldValue]              VARCHAR (50)     NOT NULL,
    [CorrelationID]              UNIQUEIDENTIFIER NULL,
    [AddedAt]                    DATETIME         CONSTRAINT [DF_DataLog_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]                  DATETIME         CONSTRAINT [DF_DataLog_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataLog1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataLog1] UNIQUE NONCLUSTERED ([ImportBatchID] ASC, [SensorID] ASC, [ImportDate] ASC, [ValueDate] ASC, [ValueTime] ASC, [PhenomenonOfferingID] ASC, [PhenomenonUOMID] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataLog1]
    ON [dbo].[tmp_ms_xx_DataLog]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataLog])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataLog] ([AddedAt], [ID], [SensorID], [ImportDate], [ValueDate], [ValueTime], [ValueText], [TransformValueText], [RawValue], [DataValue], [Comment], [InvalidDateValue], [InvalidTimeValue], [InvalidOffering], [InvalidUOM], [DataSourceTransformationID], [StatusID], [StatusReasonID], [ImportStatus], [UserId], [PhenomenonOfferingID], [PhenomenonUOMID], [ImportBatchID], [RawRecordData], [RawFieldValue], [CorrelationID], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [SensorID],
                 [ImportDate],
                 [ValueDate],
                 [ValueTime],
                 [ValueText],
                 [TransformValueText],
                 [RawValue],
                 [DataValue],
                 [Comment],
                 [InvalidDateValue],
                 [InvalidTimeValue],
                 [InvalidOffering],
                 [InvalidUOM],
                 [DataSourceTransformationID],
                 [StatusID],
                 [StatusReasonID],
                 [ImportStatus],
                 [UserId],
                 [PhenomenonOfferingID],
                 [PhenomenonUOMID],
                 [ImportBatchID],
                 [RawRecordData],
                 [RawFieldValue],
                 [CorrelationID],
                 [UpdatedAt]
        FROM     [dbo].[DataLog]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataLog]', N'DataLog';

EXECUTE sp_rename N'[dbo].[DataLog].[tmp_ms_xx_index_CX_DataLog1]', N'CX_DataLog', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataLog1]', N'PK_DataLog', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataLog1]', N'UX_DataLog', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_ImportBatchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_ImportBatchID]
    ON [dbo].[DataLog]([ImportBatchID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_SensorID]
    ON [dbo].[DataLog]([SensorID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_DataSourceTransformationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_DataSourceTransformationID]
    ON [dbo].[DataLog]([DataSourceTransformationID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_PhenomenonOfferingID]
    ON [dbo].[DataLog]([PhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_PhenomenonUOMID]
    ON [dbo].[DataLog]([PhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_StatusID]
    ON [dbo].[DataLog]([StatusID] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_UserId]
    ON [dbo].[DataLog]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_StatusReasonID]
    ON [dbo].[DataLog]([StatusReasonID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSchema]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSchema] (
    [ID]               UNIQUEIDENTIFIER CONSTRAINT [DF_DataSchema_ID] DEFAULT (newid()) NOT NULL,
    [Code]             VARCHAR (50)     NOT NULL,
    [Name]             VARCHAR (100)    NOT NULL,
    [Description]      VARCHAR (5000)   NULL,
    [DataSourceTypeID] UNIQUEIDENTIFIER NOT NULL,
    [IgnoreFirst]      INT              CONSTRAINT [DF_DataSchema_IgnoreFirst] DEFAULT ((0)) NOT NULL,
    [HasHeaderRow]     BIT              NULL,
    [IgnoreLast]       INT              CONSTRAINT [DF_DataSchema_IgnoreLast] DEFAULT ((0)) NOT NULL,
    [Condition]        VARCHAR (500)    NULL,
    [DataSchema]       TEXT             NULL,
    [UserId]           UNIQUEIDENTIFIER NOT NULL,
    [Delimiter]        VARCHAR (3)      NULL,
    [SplitSelector]    VARCHAR (50)     NULL,
    [SplitIndex]       INT              NULL,
    [AddedAt]          DATETIME         CONSTRAINT [DF_DataSchema_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]        DATETIME         CONSTRAINT [DF_DataSchema_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSchema1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSchema_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSchema_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSchema1]
    ON [dbo].[tmp_ms_xx_DataSchema]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSchema])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSchema] ([AddedAt], [ID], [Code], [Name], [Description], [DataSourceTypeID], [IgnoreFirst], [HasHeaderRow], [IgnoreLast], [Condition], [DataSchema], [UserId], [Delimiter], [SplitSelector], [SplitIndex], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [DataSourceTypeID],
                 [IgnoreFirst],
                 [HasHeaderRow],
                 [IgnoreLast],
                 [Condition],
                 [DataSchema],
                 [UserId],
                 [Delimiter],
                 [SplitSelector],
                 [SplitIndex],
                 [UpdatedAt]
        FROM     [dbo].[DataSchema]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSchema];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSchema]', N'DataSchema';

EXECUTE sp_rename N'[dbo].[DataSchema].[tmp_ms_xx_index_CX_DataSchema1]', N'CX_DataSchema', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSchema1]', N'PK_DataSchema', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSchema_Code1]', N'UX_DataSchema_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSchema_Name1]', N'UX_DataSchema_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSchema].[IX_DataSchema_DataSourceTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSchema_DataSourceTypeID]
    ON [dbo].[DataSchema]([DataSourceTypeID] ASC);


GO
PRINT N'Creating [dbo].[DataSchema].[IX_DataSchema_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSchema_UserId]
    ON [dbo].[DataSchema]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSource]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSource] (
    [ID]               UNIQUEIDENTIFIER CONSTRAINT [DF_DataSource_ID] DEFAULT (newid()) NOT NULL,
    [Code]             VARCHAR (50)     NOT NULL,
    [Name]             VARCHAR (150)    NOT NULL,
    [Description]      VARCHAR (5000)   NULL,
    [Url]              VARCHAR (250)    NOT NULL,
    [DefaultNullValue] FLOAT (53)       NULL,
    [ErrorEstimate]    FLOAT (53)       NULL,
    [UpdateFreq]       INT              NOT NULL,
    [StartDate]        DATE             NULL,
    [EndDate]          DATE             NULL,
    [LastUpdate]       DATETIME         NOT NULL,
    [DataSchemaID]     UNIQUEIDENTIFIER NULL,
    [UserId]           UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]          DATETIME         CONSTRAINT [DF_DataSource_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]        DATETIME         CONSTRAINT [DF_DataSource_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSource1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSource_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSource_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSource1]
    ON [dbo].[tmp_ms_xx_DataSource]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSource])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSource] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [DefaultNullValue], [ErrorEstimate], [UpdateFreq], [StartDate], [EndDate], [LastUpdate], [DataSchemaID], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [DefaultNullValue],
                 [ErrorEstimate],
                 [UpdateFreq],
                 [StartDate],
                 [EndDate],
                 [LastUpdate],
                 [DataSchemaID],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[DataSource]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSource];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSource]', N'DataSource';

EXECUTE sp_rename N'[dbo].[DataSource].[tmp_ms_xx_index_CX_DataSource1]', N'CX_DataSource', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSource1]', N'PK_DataSource', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSource_Code1]', N'UX_DataSource_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSource_Name1]', N'UX_DataSource_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_DataSchemaID]
    ON [dbo].[DataSource]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_UserId]
    ON [dbo].[DataSource]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_StartDate]
    ON [dbo].[DataSource]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_EndDate]
    ON [dbo].[DataSource]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSourceRole]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSourceRole] (
    [ID]             UNIQUEIDENTIFIER CONSTRAINT [DF_DataSourceRole_ID] DEFAULT (newid()) NOT NULL,
    [DataSourceID]   UNIQUEIDENTIFIER NOT NULL,
    [RoleId]         UNIQUEIDENTIFIER NOT NULL,
    [DateStart]      DATETIME         NULL,
    [DateEnd]        DATETIME         NULL,
    [RoleName]       VARCHAR (256)    NULL,
    [IsRoleReadOnly] BIT              NULL,
    [UserId]         UNIQUEIDENTIFIER NULL,
    [AddedAt]        DATETIME         CONSTRAINT [DF_DataSourceRole_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]      DATETIME         CONSTRAINT [DF_DataSourceRole_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSourceRole1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSourceRole1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [RoleId] ASC, [DateStart] ASC, [DateEnd] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSourceRole1]
    ON [dbo].[tmp_ms_xx_DataSourceRole]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSourceRole])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSourceRole] ([AddedAt], [ID], [DataSourceID], [RoleId], [DateStart], [DateEnd], [RoleName], [IsRoleReadOnly], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [DataSourceID],
                 [RoleId],
                 [DateStart],
                 [DateEnd],
                 [RoleName],
                 [IsRoleReadOnly],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[DataSourceRole]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSourceRole];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSourceRole]', N'DataSourceRole';

EXECUTE sp_rename N'[dbo].[DataSourceRole].[tmp_ms_xx_index_CX_DataSourceRole1]', N'CX_DataSourceRole', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSourceRole1]', N'PK_DataSourceRole', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSourceRole1]', N'UX_DataSourceRole', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSourceRole].[IX_DataSourceRole_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceRole_DataSourceID]
    ON [dbo].[DataSourceRole]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceRole].[IX_DataSourceRole_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceRole_RoleId]
    ON [dbo].[DataSourceRole]([RoleId] ASC);


GO
PRINT N'Creating [dbo].[DataSourceRole].[IX_DataSourceRole_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceRole_UserId]
    ON [dbo].[DataSourceRole]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataSourceRole].[IX_DataSourceRole_DateStart]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceRole_DateStart]
    ON [dbo].[DataSourceRole]([DateStart] ASC);


GO
PRINT N'Creating [dbo].[DataSourceRole].[IX_DataSourceRole_DateEnd]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceRole_DateEnd]
    ON [dbo].[DataSourceRole]([DateEnd] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSourceTransformation]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSourceTransformation] (
    [ID]                      UNIQUEIDENTIFIER CONSTRAINT [DF_DataSourceTransformation_ID] DEFAULT (newid()) NOT NULL,
    [TransformationTypeID]    UNIQUEIDENTIFIER NOT NULL,
    [PhenomenonID]            UNIQUEIDENTIFIER NOT NULL,
    [PhenomenonOfferingID]    UNIQUEIDENTIFIER NULL,
    [PhenomenonUOMID]         UNIQUEIDENTIFIER NULL,
    [StartDate]               DATE             NULL,
    [EndDate]                 DATE             NULL,
    [DataSourceID]            UNIQUEIDENTIFIER NOT NULL,
    [Definition]              TEXT             NOT NULL,
    [NewPhenomenonOfferingID] UNIQUEIDENTIFIER NULL,
    [NewPhenomenonUOMID]      UNIQUEIDENTIFIER NULL,
    [Rank]                    INT              CONSTRAINT [DF_DataSourceTransformation_Rank] DEFAULT ((0)) NULL,
    [SensorID]                UNIQUEIDENTIFIER NULL,
    [UserId]                  UNIQUEIDENTIFIER NULL,
    [AddedAt]                 DATETIME         CONSTRAINT [DF_DataSourceTransformation_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]               DATETIME         CONSTRAINT [DF_DataSourceTransformation_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSourceTransformation1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSourceTransformation1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [SensorID] ASC, [Rank] ASC, [TransformationTypeID] ASC, [PhenomenonID] ASC, [PhenomenonOfferingID] ASC, [PhenomenonUOMID] ASC, [NewPhenomenonOfferingID] ASC, [NewPhenomenonUOMID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSourceTransformation1]
    ON [dbo].[tmp_ms_xx_DataSourceTransformation]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSourceTransformation])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSourceTransformation] ([AddedAt], [ID], [TransformationTypeID], [PhenomenonID], [PhenomenonOfferingID], [PhenomenonUOMID], [StartDate], [EndDate], [DataSourceID], [Definition], [NewPhenomenonOfferingID], [NewPhenomenonUOMID], [Rank], [SensorID], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [TransformationTypeID],
                 [PhenomenonID],
                 [PhenomenonOfferingID],
                 [PhenomenonUOMID],
                 [StartDate],
                 [EndDate],
                 [DataSourceID],
                 [Definition],
                 [NewPhenomenonOfferingID],
                 [NewPhenomenonUOMID],
                 [Rank],
                 [SensorID],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[DataSourceTransformation]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSourceTransformation];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSourceTransformation]', N'DataSourceTransformation';

EXECUTE sp_rename N'[dbo].[DataSourceTransformation].[tmp_ms_xx_index_CX_DataSourceTransformation1]', N'CX_DataSourceTransformation', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSourceTransformation1]', N'PK_DataSourceTransformation', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSourceTransformation1]', N'UX_DataSourceTransformation', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_DataSourceID]
    ON [dbo].[DataSourceTransformation]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_TransformationTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_TransformationTypeID]
    ON [dbo].[DataSourceTransformation]([TransformationTypeID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_PhenomenonID]
    ON [dbo].[DataSourceTransformation]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_PhenomenonOfferingID]
    ON [dbo].[DataSourceTransformation]([PhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_PhenomenonUOMID]
    ON [dbo].[DataSourceTransformation]([PhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_NewPhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_NewPhenomenonOfferingID]
    ON [dbo].[DataSourceTransformation]([NewPhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_NewPhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_NewPhenomenonUOMID]
    ON [dbo].[DataSourceTransformation]([NewPhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_UserId]
    ON [dbo].[DataSourceTransformation]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_SensorID]
    ON [dbo].[DataSourceTransformation]([SensorID] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_Rank]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_Rank]
    ON [dbo].[DataSourceTransformation]([DataSourceID] ASC, [Rank] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_StartDate]
    ON [dbo].[DataSourceTransformation]([DataSourceID] ASC, [StartDate] ASC);


GO
PRINT N'Creating [dbo].[DataSourceTransformation].[IX_DataSourceTransformation_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceTransformation_EndDate]
    ON [dbo].[DataSourceTransformation]([DataSourceID] ASC, [EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSourceType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSourceType] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_DataSourceType_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_DataSourceType_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_DataSourceType_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSourceType1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSourceType_Code1] UNIQUE NONCLUSTERED ([Code] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_DataSourceType1]
    ON [dbo].[tmp_ms_xx_DataSourceType]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSourceType])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSourceType] ([AddedAt], [ID], [Code], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[DataSourceType]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[DataSourceType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSourceType]', N'DataSourceType';

EXECUTE sp_rename N'[dbo].[DataSourceType].[tmp_ms_xx_index_CX_DataSourceType1]', N'CX_DataSourceType', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSourceType1]', N'PK_DataSourceType', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSourceType_Code1]', N'UX_DataSourceType_Code', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSourceType].[IX_DataSourceType_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSourceType_UserId]
    ON [dbo].[DataSourceType]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportBatch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportBatch] (
    [ID]             UNIQUEIDENTIFIER           CONSTRAINT [DF_ImportBatch_ID] DEFAULT newid() ROWGUIDCOL NOT NULL,
    [Code]           INT                        IDENTITY (1, 1) NOT NULL,
    [DataSourceID]   UNIQUEIDENTIFIER           NOT NULL,
    [ImportDate]     DATETIME                   CONSTRAINT [DF_ImportBatch_ImportDate] DEFAULT getdate() NOT NULL,
    [Status]         INT                        NOT NULL,
    [UserId]         UNIQUEIDENTIFIER           NOT NULL,
    [FileName]       VARCHAR (250)              NULL,
    [LogFileName]    VARCHAR (250)              NULL,
    [Comment]        VARCHAR (8000)             NULL,
    [StatusID]       UNIQUEIDENTIFIER           NULL,
    [StatusReasonID] UNIQUEIDENTIFIER           NULL,
    [Errors]         VARCHAR (1000)             NULL,
    [SourceFile]     VARBINARY (MAX) FILESTREAM NULL,
    [Pass1File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass2File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass3File]      VARBINARY (MAX) FILESTREAM NULL,
    [Pass4File]      VARBINARY (MAX) FILESTREAM NULL,
    [AddedAt]        DATETIME                   CONSTRAINT [DF_ImportBatch_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]      DATETIME                   CONSTRAINT [DF_ImportBatch_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportBatch1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [ImportDate] ASC, [LogFileName] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_ImportBatch1]
    ON [dbo].[tmp_ms_xx_ImportBatch]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportBatch])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportBatch] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportBatch] ([AddedAt], [ID], [Code], [DataSourceID], [ImportDate], [Status], [UserId], [FileName], [LogFileName], [Comment], [StatusID], [StatusReasonID], [Errors], [SourceFile], [Pass1File], [Pass2File], [Pass3File], [Pass4File], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [DataSourceID],
                 [ImportDate],
                 [Status],
                 [UserId],
                 [FileName],
                 [LogFileName],
                 [Comment],
                 [StatusID],
                 [StatusReasonID],
                 [Errors],
                 [SourceFile],
                 [Pass1File],
                 [Pass2File],
                 [Pass3File],
                 [Pass4File],
                 [UpdatedAt]
        FROM     [dbo].[ImportBatch]
        ORDER BY [AddedAt] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportBatch] OFF;
    END

DROP TABLE [dbo].[ImportBatch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportBatch]', N'ImportBatch';

EXECUTE sp_rename N'[dbo].[ImportBatch].[tmp_ms_xx_index_CX_ImportBatch1]', N'CX_ImportBatch', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportBatch1]', N'PK_ImportBatch', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch_Code1]', N'UX_ImportBatch_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch1]', N'UX_ImportBatch', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_DataSourceID]
    ON [dbo].[ImportBatch]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_UserId]
    ON [dbo].[ImportBatch]([UserId] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_ImportDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_ImportDate]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [ImportDate] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_LogFileName]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_LogFileName]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [LogFileName] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusID]
    ON [dbo].[ImportBatch]([StatusID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusReasonID]
    ON [dbo].[ImportBatch]([StatusReasonID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Instrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Instrument] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Instrument_ID] DEFAULT newid() NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [StartDate]   DATE             NULL,
    [EndDate]     DATE             NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Instrument_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Instrument_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Instrument1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Instrument_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Instrument_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Instrument1]
    ON [dbo].[tmp_ms_xx_Instrument]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Instrument])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Instrument] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Instrument]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Instrument];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Instrument]', N'Instrument';

EXECUTE sp_rename N'[dbo].[Instrument].[tmp_ms_xx_index_CX_Instrument1]', N'CX_Instrument', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Instrument1]', N'PK_Instrument', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Instrument_Code1]', N'UX_Instrument_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Instrument_Name1]', N'UX_Instrument_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Instrument].[IX_Instrument_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_StartDate]
    ON [dbo].[Instrument]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument].[IX_Instrument_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_EndDate]
    ON [dbo].[Instrument]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument].[IX_Instrument_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_UserId]
    ON [dbo].[Instrument]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Instrument_DataSource]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Instrument_DataSource] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Instrument_DataSource_ID] DEFAULT newid() NOT NULL,
    [InstrumentID] UNIQUEIDENTIFIER NOT NULL,
    [DataSourceID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]    DATE             NULL,
    [EndDate]      DATE             NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_Instrument_DataSource_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_Instrument_DataSource_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Instrument_DataSource1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Instrument_DataSource1] UNIQUE NONCLUSTERED ([InstrumentID] ASC, [DataSourceID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Instrument_DataSource1]
    ON [dbo].[tmp_ms_xx_Instrument_DataSource]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Instrument_DataSource])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Instrument_DataSource] ([AddedAt], [ID], [InstrumentID], [DataSourceID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [InstrumentID],
                 [DataSourceID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Instrument_DataSource]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Instrument_DataSource];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Instrument_DataSource]', N'Instrument_DataSource';

EXECUTE sp_rename N'[dbo].[Instrument_DataSource].[tmp_ms_xx_index_CX_Instrument_DataSource1]', N'CX_Instrument_DataSource', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Instrument_DataSource1]', N'PK_Instrument_DataSource', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Instrument_DataSource1]', N'UX_Instrument_DataSource', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Instrument_DataSource].[IX_Instrument_DataSource_InstrumentID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_DataSource_InstrumentID]
    ON [dbo].[Instrument_DataSource]([InstrumentID] ASC);


GO
PRINT N'Creating [dbo].[Instrument_DataSource].[IX_Instrument_DataSource_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_DataSource_DataSourceID]
    ON [dbo].[Instrument_DataSource]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[Instrument_DataSource].[IX_Instrument_DataSource_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_DataSource_StartDate]
    ON [dbo].[Instrument_DataSource]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument_DataSource].[IX_Instrument_DataSource_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_DataSource_EndDate]
    ON [dbo].[Instrument_DataSource]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument_DataSource].[IX_Instrument_DataSource_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_DataSource_UserId]
    ON [dbo].[Instrument_DataSource]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Instrument_Sensor]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Instrument_Sensor] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Instrument_Sensor_ID] DEFAULT newid() NOT NULL,
    [InstrumentID] UNIQUEIDENTIFIER NOT NULL,
    [SensorID]     UNIQUEIDENTIFIER NOT NULL,
    [StartDate]    DATE             NULL,
    [EndDate]      DATE             NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_Instrument_Sensor_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_Instrument_Sensor_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Instrument_Sensor1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Instrument_Sensor1] UNIQUE NONCLUSTERED ([InstrumentID] ASC, [SensorID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Instrument_Sensor1]
    ON [dbo].[tmp_ms_xx_Instrument_Sensor]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Instrument_Sensor])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Instrument_Sensor] ([AddedAt], [ID], [InstrumentID], [SensorID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [InstrumentID],
                 [SensorID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Instrument_Sensor]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Instrument_Sensor];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Instrument_Sensor]', N'Instrument_Sensor';

EXECUTE sp_rename N'[dbo].[Instrument_Sensor].[tmp_ms_xx_index_CX_Instrument_Sensor1]', N'CX_Instrument_Sensor', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Instrument_Sensor1]', N'PK_Instrument_Sensor', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Instrument_Sensor1]', N'UX_Instrument_Sensor', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Instrument_Sensor].[IX_Instrument_Sensor_InstrumentID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_Sensor_InstrumentID]
    ON [dbo].[Instrument_Sensor]([InstrumentID] ASC);


GO
PRINT N'Creating [dbo].[Instrument_Sensor].[IX_Instrument_Sensor_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_Sensor_SensorID]
    ON [dbo].[Instrument_Sensor]([SensorID] ASC);


GO
PRINT N'Creating [dbo].[Instrument_Sensor].[IX_Instrument_Sensor_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_Sensor_StartDate]
    ON [dbo].[Instrument_Sensor]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument_Sensor].[IX_Instrument_Sensor_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_Sensor_EndDate]
    ON [dbo].[Instrument_Sensor]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Instrument_Sensor].[IX_Instrument_Sensor_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Instrument_Sensor_UserId]
    ON [dbo].[Instrument_Sensor]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Observation]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Observation] (
    [ID]                   UNIQUEIDENTIFIER     CONSTRAINT [DF_Observation_ID] DEFAULT newid() NOT NULL,
    [SensorID]             UNIQUEIDENTIFIER     NOT NULL,
    [ValueDate]            DATETIME             NOT NULL,
    [RawValue]             FLOAT (53)           NULL,
    [DataValue]            FLOAT (53)           NULL,
    [Comment]              VARCHAR (250) SPARSE NULL,
    [PhenomenonOfferingID] UNIQUEIDENTIFIER     NOT NULL,
    [PhenomenonUOMID]      UNIQUEIDENTIFIER     NOT NULL,
    [ImportBatchID]        UNIQUEIDENTIFIER     NOT NULL,
    [StatusID]             UNIQUEIDENTIFIER     NULL,
    [StatusReasonID]       UNIQUEIDENTIFIER     NULL,
    [CorrelationID]        UNIQUEIDENTIFIER     NULL,
    [UserId]               UNIQUEIDENTIFIER     NOT NULL,
    [AddedDate]            DATETIME             CONSTRAINT [DF_Observation_AddedDate] DEFAULT getdate() NOT NULL,
    [AddedAt]              DATETIME             CONSTRAINT [DF_Observation_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]            DATETIME             CONSTRAINT [DF_Observation_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Observation1] PRIMARY KEY NONCLUSTERED ([ID] ASC) ON [Observations],
    CONSTRAINT [tmp_ms_xx_constraint_UX_Observation1] UNIQUE NONCLUSTERED ([SensorID] ASC, [ImportBatchID] ASC, [ValueDate] ASC, [PhenomenonOfferingID] ASC, [PhenomenonUOMID] ASC) ON [Observations]
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_Observation1]
    ON [dbo].[tmp_ms_xx_Observation]([AddedAt] ASC)
    ON [Observations];

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Observation])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Observation] ([AddedAt], [ID], [SensorID], [ValueDate], [RawValue], [DataValue], [Comment], [PhenomenonOfferingID], [PhenomenonUOMID], [ImportBatchID], [StatusID], [StatusReasonID], [CorrelationID], [UserId], [AddedDate], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [SensorID],
                 [ValueDate],
                 [RawValue],
                 [DataValue],
                 [Comment],
                 [PhenomenonOfferingID],
                 [PhenomenonUOMID],
                 [ImportBatchID],
                 [StatusID],
                 [StatusReasonID],
                 [CorrelationID],
                 [UserId],
                 [AddedDate],
                 [UpdatedAt]
        FROM     [dbo].[Observation]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Observation];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Observation]', N'Observation';

EXECUTE sp_rename N'[dbo].[Observation].[tmp_ms_xx_index_CX_Observation1]', N'CX_Observation', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Observation1]', N'PK_Observation', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Observation1]', N'UX_Observation', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation]
    ON [dbo].[Observation]([SensorID] ASC, [ValueDate] ASC, [RawValue] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_ImportBatchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_ImportBatchID]
    ON [dbo].[Observation]([ImportBatchID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_SensorID]
    ON [dbo].[Observation]([SensorID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_PhenomenonOfferingID]
    ON [dbo].[Observation]([PhenomenonOfferingID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_PhenomenonUOMID]
    ON [dbo].[Observation]([PhenomenonUOMID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_UserId]
    ON [dbo].[Observation]([UserId] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_AddedDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_AddedDate]
    ON [dbo].[Observation]([SensorID] ASC, [AddedDate] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_ValueDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_ValueDate]
    ON [dbo].[Observation]([SensorID] ASC, [ValueDate] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_StatusID]
    ON [dbo].[Observation]([StatusID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_StatusReasonID]
    ON [dbo].[Observation]([StatusReasonID] ASC)
    ON [Observations];


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_CorrelationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_CorrelationID]
    ON [dbo].[Observation]([CorrelationID] ASC)
    ON [Observations];


GO
PRINT N'Starting rebuilding table [dbo].[Offering]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Offering] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Offering_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Offering_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Offering_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Offering1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Offering_Name1] UNIQUE NONCLUSTERED ([Name] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Offering_Code1] UNIQUE NONCLUSTERED ([Code] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Offering1]
    ON [dbo].[tmp_ms_xx_Offering]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Offering])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Offering] ([AddedAt], [ID], [Code], [Name], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Offering]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Offering];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Offering]', N'Offering';

EXECUTE sp_rename N'[dbo].[Offering].[tmp_ms_xx_index_CX_Offering1]', N'CX_Offering', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Offering1]', N'PK_Offering', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Offering_Name1]', N'UX_Offering_Name', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Offering_Code1]', N'UX_Offering_Code', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Offering].[IX_Offering_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Offering_UserId]
    ON [dbo].[Offering]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Organisation_Site]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Organisation_Site] (
    [ID]                 UNIQUEIDENTIFIER CONSTRAINT [DF_Organisation_Site_ID] DEFAULT newid() NOT NULL,
    [OrganisationID]     UNIQUEIDENTIFIER NOT NULL,
    [SiteID]             UNIQUEIDENTIFIER NOT NULL,
    [OrganisationRoleID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]          DATE             NULL,
    [EndDate]            DATE             NULL,
    [UserId]             UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]            DATETIME         CONSTRAINT [DF_Organisation_Site_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]          DATETIME         CONSTRAINT [DF_Organisation_Site_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Organisation_Site1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Organisation_Site1] UNIQUE NONCLUSTERED ([OrganisationID] ASC, [SiteID] ASC, [OrganisationRoleID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Organisation_Site1]
    ON [dbo].[tmp_ms_xx_Organisation_Site]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Organisation_Site])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Organisation_Site] ([AddedAt], [ID], [OrganisationID], [SiteID], [OrganisationRoleID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [OrganisationID],
                 [SiteID],
                 [OrganisationRoleID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Organisation_Site]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Organisation_Site];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Organisation_Site]', N'Organisation_Site';

EXECUTE sp_rename N'[dbo].[Organisation_Site].[tmp_ms_xx_index_CX_Organisation_Site1]', N'CX_Organisation_Site', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Organisation_Site1]', N'PK_Organisation_Site', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Organisation_Site1]', N'UX_Organisation_Site', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_OrganisationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_OrganisationID]
    ON [dbo].[Organisation_Site]([OrganisationID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_SiteID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_SiteID]
    ON [dbo].[Organisation_Site]([SiteID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_OrganisationRoleID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_OrganisationRoleID]
    ON [dbo].[Organisation_Site]([OrganisationRoleID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_StartDate]
    ON [dbo].[Organisation_Site]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_EndDate]
    ON [dbo].[Organisation_Site]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Site].[IX_Organisation_Site_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Site_UserId]
    ON [dbo].[Organisation_Site]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Organisation_Station]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Organisation_Station] (
    [ID]                 UNIQUEIDENTIFIER CONSTRAINT [DF_Organisation_Station_ID] DEFAULT newid() NOT NULL,
    [OrganisationID]     UNIQUEIDENTIFIER NOT NULL,
    [StationID]          UNIQUEIDENTIFIER NOT NULL,
    [OrganisationRoleID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]          DATE             NULL,
    [EndDate]            DATE             NULL,
    [UserId]             UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]            DATETIME         CONSTRAINT [DF_Organisation_Station_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]          DATETIME         CONSTRAINT [DF_Organisation_Station_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Organisation_Station1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Organisation_Station1] UNIQUE NONCLUSTERED ([OrganisationID] ASC, [StationID] ASC, [OrganisationRoleID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Organisation_Station1]
    ON [dbo].[tmp_ms_xx_Organisation_Station]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Organisation_Station])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Organisation_Station] ([AddedAt], [ID], [OrganisationID], [StationID], [OrganisationRoleID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [OrganisationID],
                 [StationID],
                 [OrganisationRoleID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Organisation_Station]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Organisation_Station];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Organisation_Station]', N'Organisation_Station';

EXECUTE sp_rename N'[dbo].[Organisation_Station].[tmp_ms_xx_index_CX_Organisation_Station1]', N'CX_Organisation_Station', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Organisation_Station1]', N'PK_Organisation_Station', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Organisation_Station1]', N'UX_Organisation_Station', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_OrganisationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_OrganisationID]
    ON [dbo].[Organisation_Station]([OrganisationID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_StationID]
    ON [dbo].[Organisation_Station]([StationID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_OrganisationRoleID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_OrganisationRoleID]
    ON [dbo].[Organisation_Station]([OrganisationRoleID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_StartDate]
    ON [dbo].[Organisation_Station]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_EndDate]
    ON [dbo].[Organisation_Station]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Station].[IX_Organisation_Station_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Station_UserId]
    ON [dbo].[Organisation_Station]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[OrganisationRole]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_OrganisationRole] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_OrganisationRole_ID] DEFAULT newid() NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_OrganisationRole_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_OrganisationRole_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_OrganisationRole1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_OrganisationRole_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_OrganisationRole_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_OrganisationRole1]
    ON [dbo].[tmp_ms_xx_OrganisationRole]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[OrganisationRole])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_OrganisationRole] ([AddedAt], [ID], [Code], [Name], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[OrganisationRole]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[OrganisationRole];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_OrganisationRole]', N'OrganisationRole';

EXECUTE sp_rename N'[dbo].[OrganisationRole].[tmp_ms_xx_index_CX_OrganisationRole1]', N'CX_OrganisationRole', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_OrganisationRole1]', N'PK_OrganisationRole', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_OrganisationRole_Code1]', N'UX_OrganisationRole_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_OrganisationRole_Name1]', N'UX_OrganisationRole_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[OrganisationRole].[IX_OrganisationRole_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrganisationRole_UserId]
    ON [dbo].[OrganisationRole]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Phenomenon]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Phenomenon] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Phenomenon_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Phenomenon_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Phenomenon_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Phenomenon1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Phenomenon_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Phenomenon_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Phenomenon1]
    ON [dbo].[tmp_ms_xx_Phenomenon]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Phenomenon])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Phenomenon] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Phenomenon]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Phenomenon];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Phenomenon]', N'Phenomenon';

EXECUTE sp_rename N'[dbo].[Phenomenon].[tmp_ms_xx_index_CX_Phenomenon1]', N'CX_Phenomenon', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Phenomenon1]', N'PK_Phenomenon', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Phenomenon_Code1]', N'UX_Phenomenon_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Phenomenon_Name1]', N'UX_Phenomenon_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Phenomenon].[IX_Phenomenon_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Phenomenon_UserId]
    ON [dbo].[Phenomenon]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PhenomenonOffering]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PhenomenonOffering] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_PhenomenonOffering_ID] DEFAULT (newid()) NOT NULL,
    [PhenomenonID] UNIQUEIDENTIFIER NOT NULL,
    [OfferingID]   UNIQUEIDENTIFIER NOT NULL,
    [UserId]       UNIQUEIDENTIFIER NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_PhenomenonOffering_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_PhenomenonOffering_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PhenomenonOffering1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_PhenomenonOffering1] UNIQUE NONCLUSTERED ([PhenomenonID] ASC, [OfferingID] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_PhenomenonOffering1]
    ON [dbo].[tmp_ms_xx_PhenomenonOffering]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PhenomenonOffering])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_PhenomenonOffering] ([AddedAt], [ID], [PhenomenonID], [OfferingID], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [PhenomenonID],
                 [OfferingID],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[PhenomenonOffering]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[PhenomenonOffering];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PhenomenonOffering]', N'PhenomenonOffering';

EXECUTE sp_rename N'[dbo].[PhenomenonOffering].[tmp_ms_xx_index_CX_PhenomenonOffering1]', N'CX_PhenomenonOffering', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PhenomenonOffering1]', N'PK_PhenomenonOffering', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_PhenomenonOffering1]', N'UX_PhenomenonOffering', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PhenomenonOffering].[IX_PhenomenonOffering_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonOffering_PhenomenonID]
    ON [dbo].[PhenomenonOffering]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[PhenomenonOffering].[IX_PhenomenonOffering_OfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonOffering_OfferingID]
    ON [dbo].[PhenomenonOffering]([OfferingID] ASC);


GO
PRINT N'Creating [dbo].[PhenomenonOffering].[IX_PhenomenonOffering_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonOffering_UserId]
    ON [dbo].[PhenomenonOffering]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PhenomenonUOM]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PhenomenonUOM] (
    [ID]              UNIQUEIDENTIFIER CONSTRAINT [DF_PhenomenonUOM_ID] DEFAULT (newid()) NOT NULL,
    [PhenomenonID]    UNIQUEIDENTIFIER NOT NULL,
    [UnitOfMeasureID] UNIQUEIDENTIFIER NOT NULL,
    [IsDefault]       BIT              CONSTRAINT [DF_PhenomenonUOM_IsDefault] DEFAULT ((0)) NOT NULL,
    [UserId]          UNIQUEIDENTIFIER NULL,
    [AddedAt]         DATETIME         CONSTRAINT [DF_PhenomenonUOM_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]       DATETIME         CONSTRAINT [DF_PhenomenonUOM_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PhenomenonUOM1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_PhenomenonUOM1] UNIQUE NONCLUSTERED ([PhenomenonID] ASC, [UnitOfMeasureID] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_PhenomenonUOM1]
    ON [dbo].[tmp_ms_xx_PhenomenonUOM]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PhenomenonUOM])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_PhenomenonUOM] ([AddedAt], [ID], [PhenomenonID], [UnitOfMeasureID], [IsDefault], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [PhenomenonID],
                 [UnitOfMeasureID],
                 [IsDefault],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[PhenomenonUOM]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[PhenomenonUOM];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PhenomenonUOM]', N'PhenomenonUOM';

EXECUTE sp_rename N'[dbo].[PhenomenonUOM].[tmp_ms_xx_index_CX_PhenomenonUOM1]', N'CX_PhenomenonUOM', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PhenomenonUOM1]', N'PK_PhenomenonUOM', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_PhenomenonUOM1]', N'UX_PhenomenonUOM', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PhenomenonUOM].[IX_PhenomenonUOM_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonUOM_PhenomenonID]
    ON [dbo].[PhenomenonUOM]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[PhenomenonUOM].[IX_PhenomenonUOM_UnitOfMeasureID]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonUOM_UnitOfMeasureID]
    ON [dbo].[PhenomenonUOM]([UnitOfMeasureID] ASC);


GO
PRINT N'Creating [dbo].[PhenomenonUOM].[IX_PhenomenonUOM_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PhenomenonUOM_UserId]
    ON [dbo].[PhenomenonUOM]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Programme]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Programme] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Programme_ID] DEFAULT newid() NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [StartDate]   DATE             NULL,
    [EndDate]     DATE             NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Programme_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Programme_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Programme1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Programme_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Programme_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Programme1]
    ON [dbo].[tmp_ms_xx_Programme]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Programme])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Programme] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Programme]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Programme];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Programme]', N'Programme';

EXECUTE sp_rename N'[dbo].[Programme].[tmp_ms_xx_index_CX_Programme1]', N'CX_Programme', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Programme1]', N'PK_Programme', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Programme_Code1]', N'UX_Programme_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Programme_Name1]', N'UX_Programme_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Programme].[IX_Programme_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Programme_UserId]
    ON [dbo].[Programme]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Programme].[IX_Programme_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Programme_StartDate]
    ON [dbo].[Programme]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Programme].[IX_Programme_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Programme_EndDate]
    ON [dbo].[Programme]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Project]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Project] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Project_ID] DEFAULT newid() NOT NULL,
    [ProgrammeID] UNIQUEIDENTIFIER NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [StartDate]   DATE             NULL,
    [EndDate]     DATE             NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Project_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Project_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Project1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Project_ProgramID_Code1] UNIQUE NONCLUSTERED ([ProgrammeID] ASC, [Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Project_ProgramID_Name1] UNIQUE NONCLUSTERED ([ProgrammeID] ASC, [Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Project1]
    ON [dbo].[tmp_ms_xx_Project]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Project])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Project] ([AddedAt], [ID], [ProgrammeID], [Code], [Name], [Description], [Url], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [ProgrammeID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Project]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Project];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Project]', N'Project';

EXECUTE sp_rename N'[dbo].[Project].[tmp_ms_xx_index_CX_Project1]', N'CX_Project', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Project1]', N'PK_Project', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Project_ProgramID_Code1]', N'UX_Project_ProgramID_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Project_ProgramID_Name1]', N'UX_Project_ProgramID_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Project].[IX_Project_ProgrammeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_ProgrammeID]
    ON [dbo].[Project]([ProgrammeID] ASC);


GO
PRINT N'Creating [dbo].[Project].[IX_Project_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_UserId]
    ON [dbo].[Project]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Project].[IX_Project_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_StartDate]
    ON [dbo].[Project]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Project].[IX_Project_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_EndDate]
    ON [dbo].[Project]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Project_Station]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Project_Station] (
    [ID]        UNIQUEIDENTIFIER CONSTRAINT [DF_Project_Station_ID] DEFAULT newid() NOT NULL,
    [ProjectID] UNIQUEIDENTIFIER NOT NULL,
    [StationID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate] DATE             NULL,
    [EndDate]   DATE             NULL,
    [UserId]    UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]   DATETIME         CONSTRAINT [DF_Project_Station_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt] DATETIME         CONSTRAINT [DF_Project_Station__UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Project_Station1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Project_Station1] UNIQUE NONCLUSTERED ([ProjectID] ASC, [StationID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Project_Station1]
    ON [dbo].[tmp_ms_xx_Project_Station]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Project_Station])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Project_Station] ([AddedAt], [ID], [ProjectID], [StationID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [ProjectID],
                 [StationID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Project_Station]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Project_Station];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Project_Station]', N'Project_Station';

EXECUTE sp_rename N'[dbo].[Project_Station].[tmp_ms_xx_index_CX_Project_Station1]', N'CX_Project_Station', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Project_Station1]', N'PK_Project_Station', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Project_Station1]', N'UX_Project_Station', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Project_Station].[IX_Project_Station_ProjectID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Station_ProjectID]
    ON [dbo].[Project_Station]([ProjectID] ASC);


GO
PRINT N'Creating [dbo].[Project_Station].[IX_Project_Station_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Station_StationID]
    ON [dbo].[Project_Station]([StationID] ASC);


GO
PRINT N'Creating [dbo].[Project_Station].[IX_Project_Station_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Station_UserId]
    ON [dbo].[Project_Station]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Project_Station].[IX_Project_Station_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Station_StartDate]
    ON [dbo].[Project_Station]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Project_Station].[IX_Project_Station_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Station_EndDate]
    ON [dbo].[Project_Station]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SchemaColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SchemaColumn] (
    [ID]                   UNIQUEIDENTIFIER CONSTRAINT [DF_SchemaColumn_ID] DEFAULT newid() NOT NULL,
    [DataSchemaID]         UNIQUEIDENTIFIER NOT NULL,
    [Number]               INT              NOT NULL,
    [Name]                 VARCHAR (100)    NOT NULL,
    [SchemaColumnTypeID]   UNIQUEIDENTIFIER NOT NULL,
    [Width]                INT              NULL,
    [Format]               VARCHAR (50)     NULL,
    [PhenomenonID]         UNIQUEIDENTIFIER NULL,
    [PhenomenonOfferingID] UNIQUEIDENTIFIER NULL,
    [PhenomenonUOMID]      UNIQUEIDENTIFIER NULL,
    [EmptyValue]           VARCHAR (50)     NULL,
    [FixedTime]            VARCHAR (10)     NULL,
    [UserId]               UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]              DATETIME         CONSTRAINT [DF_SchemaColumn_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]            DATETIME         CONSTRAINT [DF_SchemaColumn_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SchemaColumn1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Number1] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Number] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Name1] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_SchemaColumn1]
    ON [dbo].[tmp_ms_xx_SchemaColumn]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SchemaColumn])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_SchemaColumn] ([AddedAt], [ID], [DataSchemaID], [Number], [Name], [SchemaColumnTypeID], [Width], [Format], [PhenomenonID], [PhenomenonOfferingID], [PhenomenonUOMID], [EmptyValue], [FixedTime], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [DataSchemaID],
                 [Number],
                 [Name],
                 [SchemaColumnTypeID],
                 [Width],
                 [Format],
                 [PhenomenonID],
                 [PhenomenonOfferingID],
                 [PhenomenonUOMID],
                 [EmptyValue],
                 [FixedTime],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[SchemaColumn]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[SchemaColumn];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SchemaColumn]', N'SchemaColumn';

EXECUTE sp_rename N'[dbo].[SchemaColumn].[tmp_ms_xx_index_CX_SchemaColumn1]', N'CX_SchemaColumn', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SchemaColumn1]', N'PK_SchemaColumn', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Number1]', N'UX_SchemaColumn_DataSchemaID_Number', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Name1]', N'UX_SchemaColumn_DataSchemaID_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_DataSchemaID]
    ON [dbo].[SchemaColumn]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_SchemaColumnTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_SchemaColumnTypeID]
    ON [dbo].[SchemaColumn]([SchemaColumnTypeID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonID]
    ON [dbo].[SchemaColumn]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonOfferingID]
    ON [dbo].[SchemaColumn]([PhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonUOMID]
    ON [dbo].[SchemaColumn]([PhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_UserId]
    ON [dbo].[SchemaColumn]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SchemaColumnType]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SchemaColumnType] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_SchemaColumnType_ID] DEFAULT newid() NOT NULL,
    [Name]        VARCHAR (50)     NOT NULL,
    [Description] VARCHAR (250)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_SchemaColumnType_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_SchemaColumnType_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SchemaColumnType1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_SchemaColumnType1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_SchemaColumnType1]
    ON [dbo].[tmp_ms_xx_SchemaColumnType]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SchemaColumnType])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_SchemaColumnType] ([AddedAt], [ID], [Name], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Name],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[SchemaColumnType]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[SchemaColumnType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SchemaColumnType]', N'SchemaColumnType';

EXECUTE sp_rename N'[dbo].[SchemaColumnType].[tmp_ms_xx_index_CX_SchemaColumnType1]', N'CX_SchemaColumnType', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SchemaColumnType1]', N'PK_SchemaColumnType', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_SchemaColumnType1]', N'UX_SchemaColumnType', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SchemaColumnType].[IX_SchemaColumnType_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumnType_UserId]
    ON [dbo].[SchemaColumnType]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Sensor]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Sensor] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Sensor_ID] DEFAULT (newid()) NOT NULL,
    [Code]         VARCHAR (50)     NOT NULL,
    [Name]         VARCHAR (150)    NOT NULL,
    [Description]  VARCHAR (5000)   NULL,
    [Url]          VARCHAR (250)    NULL,
    [PhenomenonID] UNIQUEIDENTIFIER NOT NULL,
    [DataSourceID] UNIQUEIDENTIFIER NOT NULL,
    [DataSchemaID] UNIQUEIDENTIFIER NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_Sensor_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_Sensor_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Sensor1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Sensor_Code1] UNIQUE NONCLUSTERED ([Code] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Sensor1]
    ON [dbo].[tmp_ms_xx_Sensor]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Sensor])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Sensor] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [PhenomenonID], [DataSourceID], [DataSchemaID], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [PhenomenonID],
                 [DataSourceID],
                 [DataSchemaID],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Sensor]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Sensor];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sensor]', N'Sensor';

EXECUTE sp_rename N'[dbo].[Sensor].[tmp_ms_xx_index_CX_Sensor1]', N'CX_Sensor', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sensor1]', N'PK_Sensor', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Sensor_Code1]', N'UX_Sensor_Code', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_PhenomenonID]
    ON [dbo].[Sensor]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSourceID]
    ON [dbo].[Sensor]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSchemaID]
    ON [dbo].[Sensor]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_UserId]
    ON [dbo].[Sensor]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Site]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Site] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Site_ID] DEFAULT newid() NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [StartDate]   DATE             NULL,
    [EndDate]     DATE             NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Site_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Site_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Site1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Site_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Site_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Site1]
    ON [dbo].[tmp_ms_xx_Site]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Site])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Site] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Site]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Site];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Site]', N'Site';

EXECUTE sp_rename N'[dbo].[Site].[tmp_ms_xx_index_CX_Site1]', N'CX_Site', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Site1]', N'PK_Site', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Site_Code1]', N'UX_Site_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Site_Name1]', N'UX_Site_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Site].[IX_Site_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Site_UserId]
    ON [dbo].[Site]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Site].[IX_Site_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Site_StartDate]
    ON [dbo].[Site]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Site].[IX_Site_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Site_EndDate]
    ON [dbo].[Site]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Station]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Station] (
    [ID]            UNIQUEIDENTIFIER CONSTRAINT [DF_Station_ID] DEFAULT (newid()) NOT NULL,
    [Code]          VARCHAR (50)     NOT NULL,
    [Name]          VARCHAR (150)    NOT NULL,
    [Description]   VARCHAR (5000)   NULL,
    [Url]           VARCHAR (250)    NULL,
    [Latitude]      FLOAT (53)       NULL,
    [Longitude]     FLOAT (53)       NULL,
    [Elevation]     INT              NULL,
    [ProjectSiteID] UNIQUEIDENTIFIER NULL,
    [UserId]        UNIQUEIDENTIFIER NOT NULL,
    [SiteID]        UNIQUEIDENTIFIER NULL,
    [StartDate]     DATE             NULL,
    [EndDate]       DATE             NULL,
    [AddedAt]       DATETIME         CONSTRAINT [DF_Station_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]     DATETIME         CONSTRAINT [DF_Station_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PKStation1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Station_SiteID_Code1] UNIQUE NONCLUSTERED ([SiteID] ASC, [Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Station_SiteID_Name1] UNIQUE NONCLUSTERED ([SiteID] ASC, [Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Station1]
    ON [dbo].[tmp_ms_xx_Station]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Station])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Station] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [Latitude], [Longitude], [Elevation], [ProjectSiteID], [UserId], [SiteID], [StartDate], [EndDate], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [Latitude],
                 [Longitude],
                 [Elevation],
                 [ProjectSiteID],
                 [UserId],
                 [SiteID],
                 [StartDate],
                 [EndDate],
                 [UpdatedAt]
        FROM     [dbo].[Station]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Station];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Station]', N'Station';

EXECUTE sp_rename N'[dbo].[Station].[tmp_ms_xx_index_CX_Station1]', N'CX_Station', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PKStation1]', N'PKStation', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Station_SiteID_Code1]', N'UX_Station_SiteID_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Station_SiteID_Name1]', N'UX_Station_SiteID_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Station].[IX_Station_ProjectSiteID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_ProjectSiteID]
    ON [dbo].[Station]([ProjectSiteID] ASC);


GO
PRINT N'Creating [dbo].[Station].[IX_Station_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_UserId]
    ON [dbo].[Station]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Station].[IX_Station_SiteID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_SiteID]
    ON [dbo].[Station]([SiteID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Station_Instrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Station_Instrument] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Station_Instrument_ID] DEFAULT newid() NOT NULL,
    [StationID]    UNIQUEIDENTIFIER NOT NULL,
    [InstrumentID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]    DATE             NULL,
    [EndDate]      DATE             NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_Station_Instrument_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_Station_Instrument_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Station_Instrument1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Station_Instrument1] UNIQUE NONCLUSTERED ([StationID] ASC, [InstrumentID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Station_Instrument1]
    ON [dbo].[tmp_ms_xx_Station_Instrument]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Station_Instrument])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Station_Instrument] ([AddedAt], [ID], [StationID], [InstrumentID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [StationID],
                 [InstrumentID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Station_Instrument]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Station_Instrument];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Station_Instrument]', N'Station_Instrument';

EXECUTE sp_rename N'[dbo].[Station_Instrument].[tmp_ms_xx_index_CX_Station_Instrument1]', N'CX_Station_Instrument', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Station_Instrument1]', N'PK_Station_Instrument', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Station_Instrument1]', N'UX_Station_Instrument', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Station_Instrument].[IX_Station_Instrument_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_Instrument_StationID]
    ON [dbo].[Station_Instrument]([StationID] ASC);


GO
PRINT N'Creating [dbo].[Station_Instrument].[IX_Station_Instrument_InstrumentID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_Instrument_InstrumentID]
    ON [dbo].[Station_Instrument]([InstrumentID] ASC);


GO
PRINT N'Creating [dbo].[Station_Instrument].[IX_Station_Instrument_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_Instrument_StartDate]
    ON [dbo].[Station_Instrument]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Station_Instrument].[IX_Station_Instrument_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_Instrument_EndDate]
    ON [dbo].[Station_Instrument]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Station_Instrument].[IX_Station_Instrument_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_Instrument_UserId]
    ON [dbo].[Station_Instrument]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Status]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Status] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Status_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Status_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Status_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Status1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Status_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Status_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Status1]
    ON [dbo].[tmp_ms_xx_Status]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Status])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Status] ([AddedAt], [ID], [Code], [Name], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Status]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Status];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Status]', N'Status';

EXECUTE sp_rename N'[dbo].[Status].[tmp_ms_xx_index_CX_Status1]', N'CX_Status', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Status1]', N'PK_Status', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Status_Code1]', N'UX_Status_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Status_Name1]', N'UX_Status_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Status].[IX_Status_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Status_UserId]
    ON [dbo].[Status]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[StatusReason]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StatusReason] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_StatusReason_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_StatusReason_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_StatusReason_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_StatusReason1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_StatusReason_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_StatusReason_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_StatusReason1]
    ON [dbo].[tmp_ms_xx_StatusReason]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StatusReason])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_StatusReason] ([AddedAt], [ID], [Code], [Name], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[StatusReason]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[StatusReason];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StatusReason]', N'StatusReason';

EXECUTE sp_rename N'[dbo].[StatusReason].[tmp_ms_xx_index_CX_StatusReason1]', N'CX_StatusReason', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_StatusReason1]', N'PK_StatusReason', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_StatusReason_Code1]', N'UX_StatusReason_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_StatusReason_Name1]', N'UX_StatusReason_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[StatusReason].[IX_StatusReason_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_StatusReason_UserId]
    ON [dbo].[StatusReason]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TransformationType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TransformationType] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_TransformationType_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [iorder]      INT              NULL,
    [UserId]      UNIQUEIDENTIFIER NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_TransformationType_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_TransformationType_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TransformationType1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_TransformationType_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_TransformationType_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_TransformationType1]
    ON [dbo].[tmp_ms_xx_TransformationType]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TransformationType])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_TransformationType] ([AddedAt], [ID], [Code], [Name], [Description], [iorder], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [iorder],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[TransformationType]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[TransformationType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TransformationType]', N'TransformationType';

EXECUTE sp_rename N'[dbo].[TransformationType].[tmp_ms_xx_index_CX_TransformationType1]', N'CX_TransformationType', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TransformationType1]', N'PK_TransformationType', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_TransformationType_Code1]', N'UX_TransformationType_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_TransformationType_Name1]', N'UX_TransformationType_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TransformationType].[IX_TransformationType_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TransformationType_UserId]
    ON [dbo].[TransformationType]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UnitOfMeasure]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UnitOfMeasure] (
    [ID]         UNIQUEIDENTIFIER CONSTRAINT [DF_UnitOfMeasure_ID] DEFAULT (newid()) NOT NULL,
    [Code]       VARCHAR (50)     NOT NULL,
    [Unit]       VARCHAR (100)    NOT NULL,
    [UnitSymbol] VARCHAR (20)     NOT NULL,
    [UserId]     UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]    DATETIME         CONSTRAINT [DF_UnitOfMeasure_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]  DATETIME         CONSTRAINT [DF_UnitOfMeasure_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UnitOfMeasure1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_UnitOfMeasure_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_UnitOfMeasure_Unit1] UNIQUE NONCLUSTERED ([Unit] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_UnitOfMeasure1]
    ON [dbo].[tmp_ms_xx_UnitOfMeasure]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UnitOfMeasure])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_UnitOfMeasure] ([AddedAt], [ID], [Code], [Unit], [UnitSymbol], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Unit],
                 [UnitSymbol],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[UnitOfMeasure]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[UnitOfMeasure];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UnitOfMeasure]', N'UnitOfMeasure';

EXECUTE sp_rename N'[dbo].[UnitOfMeasure].[tmp_ms_xx_index_CX_UnitOfMeasure1]', N'CX_UnitOfMeasure', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UnitOfMeasure1]', N'PK_UnitOfMeasure', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_UnitOfMeasure_Code1]', N'UX_UnitOfMeasure_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_UnitOfMeasure_Unit1]', N'UX_UnitOfMeasure_Unit', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UnitOfMeasure].[IX_UnitOfMeasure_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_UnitOfMeasure_UserId]
    ON [dbo].[UnitOfMeasure]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Organisation]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Organisation] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_Organisation_ID] DEFAULT (newid()) NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [Url]         VARCHAR (250)    NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_Organisation_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_Organisation_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Organisation1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Organisation_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Organisation_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Organisation1]
    ON [dbo].[tmp_ms_xx_Organisation]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Organisation])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Organisation] ([AddedAt], [ID], [Code], [Name], [Description], [Url], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Organisation]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Organisation];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Organisation]', N'Organisation';

EXECUTE sp_rename N'[dbo].[Organisation].[tmp_ms_xx_index_CX_Organisation1]', N'CX_Organisation', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Organisation1]', N'PK_Organisation', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Organisation_Code1]', N'UX_Organisation_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Organisation_Name1]', N'UX_Organisation_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Organisation].[IX_Organisation_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_UserId]
    ON [dbo].[Organisation]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Organisation_Instrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Organisation_Instrument] (
    [ID]                 UNIQUEIDENTIFIER CONSTRAINT [DF_Organisation_Instrument_ID] DEFAULT newid() NOT NULL,
    [OrganisationID]     UNIQUEIDENTIFIER NOT NULL,
    [InstrumentID]       UNIQUEIDENTIFIER NOT NULL,
    [OrganisationRoleID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]          DATE             NULL,
    [EndDate]            DATE             NULL,
    [UserId]             UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]            DATETIME         CONSTRAINT [DF_Organisation_Instrument_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]          DATETIME         CONSTRAINT [DF_Organisation_Instrument_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Organisation_Instrument1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Organisation_Instrument1] UNIQUE NONCLUSTERED ([OrganisationID] ASC, [InstrumentID] ASC, [OrganisationRoleID] ASC, [StartDate] ASC, [EndDate] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_Organisation_Instrument1]
    ON [dbo].[tmp_ms_xx_Organisation_Instrument]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Organisation_Instrument])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Organisation_Instrument] ([AddedAt], [ID], [OrganisationID], [InstrumentID], [OrganisationRoleID], [StartDate], [EndDate], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [OrganisationID],
                 [InstrumentID],
                 [OrganisationRoleID],
                 [StartDate],
                 [EndDate],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[Organisation_Instrument]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[Organisation_Instrument];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Organisation_Instrument]', N'Organisation_Instrument';

EXECUTE sp_rename N'[dbo].[Organisation_Instrument].[tmp_ms_xx_index_CX_Organisation_Instrument1]', N'CX_Organisation_Instrument', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Organisation_Instrument1]', N'PK_Organisation_Instrument', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Organisation_Instrument1]', N'UX_Organisation_Instrument', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_InstrumentID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_InstrumentID]
    ON [dbo].[Organisation_Instrument]([InstrumentID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_OrganisationRoleID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_OrganisationRoleID]
    ON [dbo].[Organisation_Instrument]([OrganisationRoleID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_OrganisationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_OrganisationID]
    ON [dbo].[Organisation_Instrument]([OrganisationID] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_StartDate]
    ON [dbo].[Organisation_Instrument]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_EndDate]
    ON [dbo].[Organisation_Instrument]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Organisation_Instrument].[IX_Organisation_Instrument_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Organisation_Instrument_UserId]
    ON [dbo].[Organisation_Instrument]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AuditLog] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_AuditLog_ID] DEFAULT NewID() NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_AuditLog_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_AuditLog_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AuditLog1] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_CX_AuditLog_AddedAt1]
    ON [dbo].[tmp_ms_xx_AuditLog]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AuditLog])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_AuditLog] ([AddedAt], [ID], [Description], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [Description],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[AuditLog]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[AuditLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AuditLog]', N'AuditLog';

EXECUTE sp_rename N'[dbo].[AuditLog].[tmp_ms_xx_index_CX_AuditLog_AddedAt1]', N'CX_AuditLog_AddedAt', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AuditLog1]', N'PK_AuditLog', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[AuditLog].[IX_AuditLog_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditLog_UserId]
    ON [dbo].[AuditLog]([UserId] ASC);


GO
PRINT N'Creating [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_Sensor]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataLog_DataSourceTransformation]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_DataSourceTransformation] FOREIGN KEY ([DataSourceTransformationID]) REFERENCES [dbo].[DataSourceTransformation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_Status]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_StatusReason]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSchema_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSchema] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSchema_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataSchema_DataSourceType]...';


GO
ALTER TABLE [dbo].[DataSchema] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSchema_DataSourceType] FOREIGN KEY ([DataSourceTypeID]) REFERENCES [dbo].[DataSourceType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Instrument_DataSource_DataSource]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_DataSource_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceRole_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceRole] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceRole_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceRole_aspnet_Roles]...';


GO
ALTER TABLE [dbo].[DataSourceRole] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceRole_aspnet_Roles] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[aspnet_Roles] ([RoleId]);


GO
PRINT N'Creating [dbo].[FK_DataSourceRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceRole] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceRole_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_Sensor]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_Phenomenon]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_TransformationType]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_TransformationType] FOREIGN KEY ([TransformationTypeID]) REFERENCES [dbo].[TransformationType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_NewPhenomenonOffering]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonOffering] FOREIGN KEY ([NewPhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_NewPhenomenonUOM]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonUOM] FOREIGN KEY ([NewPhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSourceType] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceType_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Instrument_DataSource_Instrument]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_DataSource_Instrument] FOREIGN KEY ([InstrumentID]) REFERENCES [dbo].[Instrument] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Instrument_Sensor_Instrument]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_Sensor_Instrument] FOREIGN KEY ([InstrumentID]) REFERENCES [dbo].[Instrument] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Instrument_Instrument]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Instrument_Instrument] FOREIGN KEY ([InstrumentID]) REFERENCES [dbo].[Instrument] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Station_Instrument_Instrument]...';


GO
ALTER TABLE [dbo].[Station_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_Instrument_Instrument] FOREIGN KEY ([InstrumentID]) REFERENCES [dbo].[Instrument] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Instrument_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument_DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_DataSource_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Instrument_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_Sensor_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Instrument_Sensor_Sensor]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_Sensor_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_Sensor]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Observation_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_Status]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_StatusReason]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Offering_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Offering] WITH NOCHECK
    ADD CONSTRAINT [FK_Offering_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonOffering_Offering]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonOffering_Offering] FOREIGN KEY ([OfferingID]) REFERENCES [dbo].[Offering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Site_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Site_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Site_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Site_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Site_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Site_Organisation] FOREIGN KEY ([OrganisationID]) REFERENCES [dbo].[Organisation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Site_Site]...';


GO
ALTER TABLE [dbo].[Organisation_Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Site_Site] FOREIGN KEY ([SiteID]) REFERENCES [dbo].[Site] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Station_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Station_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Station_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Station_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Station_Organisation] FOREIGN KEY ([OrganisationID]) REFERENCES [dbo].[Organisation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Station_Station]...';


GO
ALTER TABLE [dbo].[Organisation_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Station_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[FK_OrganisationRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[OrganisationRole] WITH NOCHECK
    ADD CONSTRAINT [FK_OrganisationRole_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Instrument_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Instrument_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Phenomenon_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Phenomenon] WITH NOCHECK
    ADD CONSTRAINT [FK_Phenomenon_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_Phenomenon]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonOffering_Phenomenon]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonOffering_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonUOM_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonUOM_PhenomenonUOM] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Progress_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonOffering_aspnet_Users]...';


GO
ALTER TABLE [dbo].[PhenomenonOffering] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonOffering_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonUOM_aspnet_Users]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonUOM_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_PhenomenonUOM_UnitOfMeasure]...';


GO
ALTER TABLE [dbo].[PhenomenonUOM] WITH NOCHECK
    ADD CONSTRAINT [FK_PhenomenonUOM_UnitOfMeasure] FOREIGN KEY ([UnitOfMeasureID]) REFERENCES [dbo].[UnitOfMeasure] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Programme_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Programme] WITH NOCHECK
    ADD CONSTRAINT [FK_Programme_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Project_Programme]...';


GO
ALTER TABLE [dbo].[Project] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_Programme] FOREIGN KEY ([ProgrammeID]) REFERENCES [dbo].[Programme] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Project_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Project] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Project_Station_ProjectID]...';


GO
ALTER TABLE [dbo].[Project_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_Station_ProjectID] FOREIGN KEY ([ProjectID]) REFERENCES [dbo].[Project] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Project_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Project_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_Station_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Project_Station_StationID]...';


GO
ALTER TABLE [dbo].[Project_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_Station_StationID] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_SchemaColumnType]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_SchemaColumnType] FOREIGN KEY ([SchemaColumnTypeID]) REFERENCES [dbo].[SchemaColumnType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumnType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumnType_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Station_Site]...';


GO
ALTER TABLE [dbo].[Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_Site] FOREIGN KEY ([SiteID]) REFERENCES [dbo].[Site] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Site_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Site_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Station_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Station_ProjectSite]...';


GO
ALTER TABLE [dbo].[Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_ProjectSite] FOREIGN KEY ([ProjectSiteID]) REFERENCES [dbo].[ProjectSite] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Station_Instrument_Station]...';


GO
ALTER TABLE [dbo].[Station_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_Instrument_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Station_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Station_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_Instrument_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Status_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Status] WITH NOCHECK
    ADD CONSTRAINT [FK_Status_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_StatusReason_aspnet_Users]...';


GO
ALTER TABLE [dbo].[StatusReason] WITH NOCHECK
    ADD CONSTRAINT [FK_StatusReason_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_TransformationType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[TransformationType] WITH NOCHECK
    ADD CONSTRAINT [FK_TransformationType_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_UnitOfMeasure_aspnet_Users]...';


GO
ALTER TABLE [dbo].[UnitOfMeasure] WITH NOCHECK
    ADD CONSTRAINT [FK_UnitOfMeasure_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ProjectSite_Organisation]...';


GO
ALTER TABLE [dbo].[ProjectSite] WITH NOCHECK
    ADD CONSTRAINT [FK_ProjectSite_Organisation] FOREIGN KEY ([OrganisationID]) REFERENCES [dbo].[Organisation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Instrument_Organisation]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Instrument_Organisation] FOREIGN KEY ([OrganisationID]) REFERENCES [dbo].[Organisation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Instrument_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Instrument_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_AuditLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[AuditLog] WITH NOCHECK
    ADD CONSTRAINT [FK_AuditLog_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[TR_DataLog_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataLog_Insert] ON [dbo].[DataLog]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataLog src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataLog_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataLog_Update] ON [dbo].[DataLog]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataLog src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160708 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSchema_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSchema_Insert] ON [dbo].[DataSchema]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSchema src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSchema_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSchema_Update] ON [dbo].[DataSchema]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSchema src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSource_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSource_Insert] ON [dbo].[DataSource]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSource src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSource_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSource_Update] ON [dbo].[DataSource]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSource src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.3 20160421 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSourceRole_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceRole_Insert] ON [dbo].[DataSourceRole]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSourceRole src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSourceRole_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceRole_Update] ON [dbo].[DataSourceRole]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSourceRole src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSourceTransformation_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceTransformation_Insert] ON [dbo].[DataSourceTransformation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSourceTransformation src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSourceTransformation_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceTransformation_Update] ON [dbo].[DataSourceTransformation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSourceTransformation src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSourceType_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceType_Insert] ON [dbo].[DataSourceType]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        DataSourceType src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSourceType_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSourceType_Update] ON [dbo].[DataSourceType]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        DataSourceType src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Insert] ON [dbo].[ImportBatch]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        ImportBatch src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Update]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Update] ON [dbo].[ImportBatch]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        ImportBatch src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_Instrument_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_Insert] ON [dbo].[Instrument]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Instrument src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Instrument_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_Update] ON [dbo].[Instrument]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Instrument src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.4 20160508 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Instrument_DataSource_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_DataSource_Insert] ON [dbo].[Instrument_DataSource]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Instrument_DataSource src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Instrument_DataSource_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_DataSource_Update] ON [dbo].[Instrument_DataSource]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Instrument_DataSource src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.9 20160727 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Instrument_Sensor_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_Sensor_Insert] ON [dbo].[Instrument_Sensor]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Instrument_Sensor src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Instrument_Sensor_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Instrument_Sensor_Update] ON [dbo].[Instrument_Sensor]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Instrument_Sensor src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--> Added 2.0.5 20160530 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Observation_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Observation_Insert] ON [dbo].[Observation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Observation src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Observation_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Observation_Update] ON [dbo].[Observation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Observation src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_Offering_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Offering_Insert] ON [dbo].[Offering]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Offering src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Offering_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Offering_Update] ON [dbo].[Offering]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Offering src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_Organisation_Site_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Site_Insert] ON [dbo].[Organisation_Site]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Organisation_Site src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Organisation_Site_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Site_Update] ON [dbo].[Organisation_Site]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Organisation_Site src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160530 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Organisation_Station_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Station_Insert] ON [dbo].[Organisation_Station]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Organisation_Station src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Organisation_Station_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Station_Update] ON [dbo].[Organisation_Station]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Organisation_Station src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160530 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_OrganisationRole]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_OrganisationRole] ON [dbo].[OrganisationRole]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        OrganisationRole src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_OrganisationRole_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_OrganisationRole_Update] ON [dbo].[OrganisationRole]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        OrganisationRole src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Phenomenon_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Phenomenon_Insert] ON [dbo].[Phenomenon]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Phenomenon src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Phenomenon_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Phenomenon_Update] ON [dbo].[Phenomenon]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Phenomenon src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_PhenomenonOffering_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_PhenomenonOffering_Insert] ON [dbo].[PhenomenonOffering]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        PhenomenonOffering src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_PhenomenonOffering_Update]...';


GO
CREATE TRIGGER [dbo].[TR_PhenomenonOffering_Update] ON [dbo].[PhenomenonOffering]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        PhenomenonOffering src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_PhenomenonUOM_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_PhenomenonUOM_Insert] ON [dbo].[PhenomenonUOM]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        PhenomenonUOM src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_PhenomenonUOM_Update]...';


GO
CREATE TRIGGER [dbo].[TR_PhenomenonUOM_Update] ON [dbo].[PhenomenonUOM]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        PhenomenonUOM src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_Programme_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Programme_Insert] ON [dbo].[Programme]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Programme src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Programme_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Programme_Update] ON [dbo].[Programme]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Programme src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160511 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Project_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Project_Insert] ON [dbo].[Project]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Project src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Project_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Project_Update] ON [dbo].[Project]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Project src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160511 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Project_Station_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Project_Station_Insert] ON [dbo].[Project_Station]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Project_Station src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Project_Station_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Project_Station_Update] ON [dbo].[Project_Station]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Project_Station src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160527 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Insert] ON [dbo].[SchemaColumn]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        SchemaColumn src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Update] ON [dbo].[SchemaColumn]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        SchemaColumn src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.11 20160908 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumnType_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumnType_Insert] ON [dbo].[SchemaColumnType]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        SchemaColumnType src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumnType_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumnType_Update] ON [dbo].[SchemaColumnType]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        SchemaColumnType src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.11 20160908 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Sensor_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Sensor_Insert] ON [dbo].[Sensor]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Sensor src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Sensor_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Sensor_Update] ON [dbo].[Sensor]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Sensor src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_Site_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Insert] ON [dbo].[Site]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Site src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Site_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Update] ON [dbo].[Site]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Site src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.3 20160421 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Station_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Station_Insert] ON [dbo].[Station]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Station src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Station_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Station_Update] ON [dbo].[Station]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Station src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.3 20160421 TimPN
GO
PRINT N'Creating [dbo].[TR_Station_Instrument_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Station_Instrument_Insert] ON [dbo].[Station_Instrument]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Station_Instrument src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Station_Instrument_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Station_Instrument_Update] ON [dbo].[Station_Instrument]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Station_Instrument src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160512 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Status_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Status_Insert] ON [dbo].[Status]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Status src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Status_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Status_Update] ON [dbo].[Status]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Status src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_StatusReason_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_StatusReason_Insert] ON [dbo].[StatusReason]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        StatusReason src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_StatusReason_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_StatusReason_Update] ON [dbo].[StatusReason]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        StatusReason src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--> Added 2.0.9 20160823 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_TransformationType_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_TransformationType_Insert] ON [dbo].[TransformationType]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        TransformationType src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_TransformationType_Update]...';


GO
CREATE TRIGGER [dbo].[TR_TransformationType_Update] ON [dbo].[TransformationType]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        TransformationType src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_UnitOfMeasure_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_UnitOfMeasure_Insert] ON [dbo].[UnitOfMeasure]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        UnitOfMeasure src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_UnitOfMeasure_Update]...';


GO
CREATE TRIGGER [dbo].[TR_UnitOfMeasure_Update] ON [dbo].[UnitOfMeasure]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        UnitOfMeasure src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Creating [dbo].[TR_Organisation_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Organisation_Insert] ON [dbo].[Organisation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Organisation src
        inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Organisation_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Organisation_Update] ON [dbo].[Organisation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Organisation src
        inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.4 20160508 TimPN
GO
PRINT N'Creating [dbo].[TR_Organisation_Instrument_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Instrument_Insert] ON [dbo].[Organisation_Instrument]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        Organisation_Instrument src
        inner join inserted ins
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Organisation_Instrument_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Organisation_Instrument_Update] ON [dbo].[Organisation_Instrument]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        Organisation_Instrument src
        inner join inserted ins
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--< Changed 2.0.15 20161102 TimPN
--< Added 2.0.5 20160530 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_AuditLog_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_AuditLog_Insert] ON [dbo].[AuditLog]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        AuditLog src
		inner join inserted ins 
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_AuditLog_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_AuditLog_Update] ON [dbo].[AuditLog]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
--> Changed 2.0.19 20161205 TimPN
--		AddedAt = del.AddedAt,
        AddedAt = Coalesce(del.AddedAt, ins.AddedAt, GetDate ()),
--< Changed 2.0.19 20161205 TimPN
        UpdatedAt = GETDATE()
    from
        AuditLog src
		inner join inserted ins 
            on (ins.ID = src.ID)
		inner join deleted del
			on (del.ID = src.ID)
END
--> Changed 2.0.15 20161102 TimPN
--< Added 2.0.3 20160421 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vDataLog]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataLog]';


GO
PRINT N'Refreshing [dbo].[vDataSchema]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSchema]';


GO
PRINT N'Refreshing [dbo].[vDataSource]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSource]';


GO
PRINT N'Refreshing [dbo].[vObservation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservation]';


GO
PRINT N'Refreshing [dbo].[vSensor]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSensor]';


GO
PRINT N'Refreshing [dbo].[vObservationRoles]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservationRoles]';


GO
PRINT N'Refreshing [dbo].[vDataSourceRole]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSourceRole]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vDataSourceTransformation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSourceTransformation]';


GO
PRINT N'Refreshing [dbo].[vImportBatch]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vImportBatch]';


GO
PRINT N'Refreshing [dbo].[vInstrumentDataSource]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInstrumentDataSource]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vDataQuery]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataQuery]';


GO
PRINT N'Refreshing [dbo].[vInstrumentOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInstrumentOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vInstrumentSensor]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInstrumentSensor]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vInventory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInventory]';


GO
PRINT N'Refreshing [dbo].[vOrganisationInstrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationInstrument]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vSiteOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSiteOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vStationInstrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vStationInstrument]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vStationOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vStationOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vObservationsList]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservationsList]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vSchemaColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSchemaColumn]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vOrganisationSite]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationSite]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vOrganisationStation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationStation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vProject]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vProject]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vProjectStation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vProjectStation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vStation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vStation]';


GO
PRINT N'Refreshing [dbo].[vProjectSite]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vProjectSite]';


GO
PRINT N'Refreshing [dbo].[vAuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vAuditLog]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[progress_Status_Raw]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[progress_Status_Raw]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_ImportBatch];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_Sensor];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_aspnet_Users];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_DataSourceTransformation];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_Status];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_PhenomenonOffering];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_PhenomenonUOM];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_StatusReason];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_DataSchema];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSchema];

ALTER TABLE [dbo].[DataSchema] WITH CHECK CHECK CONSTRAINT [FK_DataSchema_aspnet_Users];

ALTER TABLE [dbo].[DataSchema] WITH CHECK CHECK CONSTRAINT [FK_DataSchema_DataSourceType];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_DataSchema];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_aspnet_Users];

ALTER TABLE [dbo].[Instrument_DataSource] WITH CHECK CHECK CONSTRAINT [FK_Instrument_DataSource_DataSource];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSource];

ALTER TABLE [dbo].[DataSourceRole] WITH CHECK CHECK CONSTRAINT [FK_DataSourceRole_DataSource];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_DataSource];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_DataSource];

ALTER TABLE [dbo].[DataSourceRole] WITH CHECK CHECK CONSTRAINT [FK_DataSourceRole_aspnet_Roles];

ALTER TABLE [dbo].[DataSourceRole] WITH CHECK CHECK CONSTRAINT [FK_DataSourceRole_aspnet_Users];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_aspnet_Users];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_Sensor];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_Phenomenon];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_TransformationType];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_PhenomenonOffering];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_PhenomenonUOM];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonOffering];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_NewPhenomenonUOM];

ALTER TABLE [dbo].[DataSourceType] WITH CHECK CHECK CONSTRAINT [FK_DataSourceType_aspnet_Users];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_ImportBatch];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_aspnet_Users];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_Status];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_StatusReason];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_ImportBatch];

ALTER TABLE [dbo].[Instrument] WITH CHECK CHECK CONSTRAINT [FK_Instrument_aspnet_Users];

ALTER TABLE [dbo].[Instrument_DataSource] WITH CHECK CHECK CONSTRAINT [FK_Instrument_DataSource_Instrument];

ALTER TABLE [dbo].[Instrument_Sensor] WITH CHECK CHECK CONSTRAINT [FK_Instrument_Sensor_Instrument];

ALTER TABLE [dbo].[Organisation_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Instrument_Instrument];

ALTER TABLE [dbo].[Station_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Station_Instrument_Instrument];

ALTER TABLE [dbo].[Instrument_DataSource] WITH CHECK CHECK CONSTRAINT [FK_Instrument_DataSource_aspnet_Users];

ALTER TABLE [dbo].[Instrument_Sensor] WITH CHECK CHECK CONSTRAINT [FK_Instrument_Sensor_aspnet_Users];

ALTER TABLE [dbo].[Instrument_Sensor] WITH CHECK CHECK CONSTRAINT [FK_Instrument_Sensor_Sensor];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_Sensor];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_aspnet_Users];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_PhenomenonOffering];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_PhenomenonUOM];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_Status];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_StatusReason];

ALTER TABLE [dbo].[Offering] WITH CHECK CHECK CONSTRAINT [FK_Offering_aspnet_Users];

ALTER TABLE [dbo].[PhenomenonOffering] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonOffering_Offering];

ALTER TABLE [dbo].[Organisation_Site] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Site_aspnet_Users];

ALTER TABLE [dbo].[Organisation_Site] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Site_OrganisationRole];

ALTER TABLE [dbo].[Organisation_Site] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Site_Organisation];

ALTER TABLE [dbo].[Organisation_Site] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Site_Site];

ALTER TABLE [dbo].[Organisation_Station] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Station_aspnet_Users];

ALTER TABLE [dbo].[Organisation_Station] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Station_OrganisationRole];

ALTER TABLE [dbo].[Organisation_Station] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Station_Organisation];

ALTER TABLE [dbo].[Organisation_Station] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Station_Station];

ALTER TABLE [dbo].[OrganisationRole] WITH CHECK CHECK CONSTRAINT [FK_OrganisationRole_aspnet_Users];

ALTER TABLE [dbo].[Organisation_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Instrument_OrganisationRole];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_Phenomenon];

ALTER TABLE [dbo].[Phenomenon] WITH CHECK CHECK CONSTRAINT [FK_Phenomenon_aspnet_Users];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_Phenomenon];

ALTER TABLE [dbo].[PhenomenonOffering] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonOffering_Phenomenon];

ALTER TABLE [dbo].[PhenomenonUOM] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonUOM_PhenomenonUOM];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_PhenomenonOffering];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonOffering];

ALTER TABLE [dbo].[PhenomenonOffering] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonOffering_aspnet_Users];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonUOM];

ALTER TABLE [dbo].[PhenomenonUOM] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonUOM_aspnet_Users];

ALTER TABLE [dbo].[PhenomenonUOM] WITH CHECK CHECK CONSTRAINT [FK_PhenomenonUOM_UnitOfMeasure];

ALTER TABLE [dbo].[Programme] WITH CHECK CHECK CONSTRAINT [FK_Programme_aspnet_Users];

ALTER TABLE [dbo].[Project] WITH CHECK CHECK CONSTRAINT [FK_Project_Programme];

ALTER TABLE [dbo].[Project] WITH CHECK CHECK CONSTRAINT [FK_Project_aspnet_Users];

ALTER TABLE [dbo].[Project_Station] WITH CHECK CHECK CONSTRAINT [FK_Project_Station_ProjectID];

ALTER TABLE [dbo].[Project_Station] WITH CHECK CHECK CONSTRAINT [FK_Project_Station_aspnet_Users];

ALTER TABLE [dbo].[Project_Station] WITH CHECK CHECK CONSTRAINT [FK_Project_Station_StationID];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_aspnet_Users];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_SchemaColumnType];

ALTER TABLE [dbo].[SchemaColumnType] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumnType_aspnet_Users];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_aspnet_Users];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_Sensor];

ALTER TABLE [dbo].[Station] WITH CHECK CHECK CONSTRAINT [FK_Station_Site];

ALTER TABLE [dbo].[Site] WITH CHECK CHECK CONSTRAINT [FK_Site_aspnet_Users];

ALTER TABLE [dbo].[Station] WITH CHECK CHECK CONSTRAINT [FK_Station_aspnet_Users];

ALTER TABLE [dbo].[Station] WITH CHECK CHECK CONSTRAINT [FK_Station_ProjectSite];

ALTER TABLE [dbo].[Station_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Station_Instrument_Station];

ALTER TABLE [dbo].[Station_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Station_Instrument_aspnet_Users];

ALTER TABLE [dbo].[Status] WITH CHECK CHECK CONSTRAINT [FK_Status_aspnet_Users];

ALTER TABLE [dbo].[StatusReason] WITH CHECK CHECK CONSTRAINT [FK_StatusReason_aspnet_Users];

ALTER TABLE [dbo].[TransformationType] WITH CHECK CHECK CONSTRAINT [FK_TransformationType_aspnet_Users];

ALTER TABLE [dbo].[UnitOfMeasure] WITH CHECK CHECK CONSTRAINT [FK_UnitOfMeasure_aspnet_Users];

ALTER TABLE [dbo].[ProjectSite] WITH CHECK CHECK CONSTRAINT [FK_ProjectSite_Organisation];

ALTER TABLE [dbo].[Organisation_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Instrument_Organisation];

ALTER TABLE [dbo].[Organisation] WITH CHECK CHECK CONSTRAINT [FK_Organisation_aspnet_Users];

ALTER TABLE [dbo].[Organisation_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Instrument_aspnet_Users];

ALTER TABLE [dbo].[AuditLog] WITH CHECK CHECK CONSTRAINT [FK_AuditLog_aspnet_Users];


GO
PRINT N'Update complete.';


GO
