/*
Deployment script for ObservationDB_Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationDB_Test"
:setvar DefaultFilePrefix "ObservationDB_Test"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 512e36e1-6b21-47b7-b7db-82e6cf040e34 is skipped, element [dbo].[Progress].[SensorProcedureID] (SqlSimpleColumn) will not be renamed to SensorID';


GO
PRINT N'The following operation was generated from a refactoring log file e29eb5f4-8a30-4346-b3bc-c84664baf1b8';

PRINT N'Rename [dbo].[FK_Progress_SensorProcedure] to FK_Progress_Sensor';


GO
EXECUTE sp_rename @objname = N'[dbo].[FK_Progress_SensorProcedure]', @newname = N'FK_Progress_Sensor', @objtype = N'OBJECT';


GO
PRINT N'The following operation was generated from a refactoring log file f214d16e-5d6e-4329-a8ea-6f7d561778ec';

PRINT N'Rename [dbo].[Progress].[IX_Progress_SensorProcedureID] to IX_Progress_SensorID';


GO
EXECUTE sp_rename @objname = N'[dbo].[Progress].[IX_Progress_SensorProcedureID]', @newname = N'IX_Progress_SensorID', @objtype = N'INDEX';


GO
PRINT N'Dropping [dbo].[Sensor].[IX_SensorProcedure_DataSourceID]...';


GO
DROP INDEX [IX_SensorProcedure_DataSourceID]
    ON [dbo].[Sensor];


GO
PRINT N'Dropping [dbo].[Station].[IX_Station_ProjectSiteID]...';


GO
DROP INDEX [IX_Station_ProjectSiteID]
    ON [dbo].[Station];


GO
PRINT N'Dropping [dbo].[DataLog].[IX_DataLog_SensorProcedureID]...';


GO
DROP INDEX [IX_DataLog_SensorProcedureID]
    ON [dbo].[DataLog];


GO
PRINT N'Dropping [dbo].[Observation].[IX_Observation_SensorProcedureID]...';


GO
DROP INDEX [IX_Observation_SensorProcedureID]
    ON [dbo].[Observation];


GO
PRINT N'Dropping [dbo].[Sensor].[IX_SensorProcedure_DataSchemaID]...';


GO
DROP INDEX [IX_SensorProcedure_DataSchemaID]
    ON [dbo].[Sensor];


GO
PRINT N'Dropping [dbo].[Sensor].[IX_SensorProcedure_PhenomenonID]...';


GO
DROP INDEX [IX_SensorProcedure_PhenomenonID]
    ON [dbo].[Sensor];


GO
PRINT N'Dropping [dbo].[Sensor].[IX_SensorProcedure_StationID]...';


GO
DROP INDEX [IX_SensorProcedure_StationID]
    ON [dbo].[Sensor];


GO
PRINT N'Dropping [dbo].[Sensor].[IX_SensorProcedure_UserId]...';


GO
DROP INDEX [IX_SensorProcedure_UserId]
    ON [dbo].[Sensor];


GO
PRINT N'Dropping [dbo].[Station].[IX_DataSource_StationID]...';


GO
DROP INDEX [IX_DataSource_StationID]
    ON [dbo].[Station];


GO
PRINT N'Dropping [dbo].[DF_AuditLog_ID]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [DF_AuditLog_ID];


GO
PRINT N'Dropping [dbo].[DF_AuditLog_AddedAt]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [DF_AuditLog_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_DataSource_ID]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [DF_DataSource_ID];


GO
PRINT N'Dropping [dbo].[DF_SensorProcedure_ID]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [DF_SensorProcedure_ID];


GO
PRINT N'Dropping [dbo].[FK_AuditLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[AuditLog] DROP CONSTRAINT [FK_AuditLog_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_DataSource];


GO
PRINT N'Dropping [dbo].[FK_SensorProcedure_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_SensorProcedure_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSourceRole_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceRole] DROP CONSTRAINT [FK_DataSourceRole_DataSource];


GO
PRINT N'Dropping [dbo].[FK_DataSource_Station]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_Station];


GO
PRINT N'Dropping [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSource] DROP CONSTRAINT [FK_DataSource_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Station_ProjectSite]...';


GO
ALTER TABLE [dbo].[Station] DROP CONSTRAINT [FK_Station_ProjectSite];


GO
PRINT N'Dropping [dbo].[FK_DataLog_SensorProcedure]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_SensorProcedure];


GO
PRINT N'Dropping [dbo].[FK_Observation_SensorProcedure]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_SensorProcedure];


GO
PRINT N'Dropping [dbo].[FK_SensorProcedure_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_SensorProcedure_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_SensorProcedure_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_SensorProcedure_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_SensorProcedure_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_SensorProcedure_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_SensorProcedure_Station]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_SensorProcedure_Station];


GO
PRINT N'Dropping [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_Sensor];


GO
PRINT N'Dropping [dbo].[UX_SensorProcedure_Code]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [UX_SensorProcedure_Code];


GO
PRINT N'Dropping [dbo].[UX_SensorProcedure_Name]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [UX_SensorProcedure_Name];


GO
PRINT N'Starting rebuilding table [dbo].[AuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AuditLog] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_AuditLog_ID] DEFAULT NewID() NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_AuditLog_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_AuditLog_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AuditLog1] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_IX_AuditLog_AddedAt1]
    ON [dbo].[tmp_ms_xx_AuditLog]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AuditLog])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_AuditLog] ([AddedAt], [ID], [Description], [UserId])
        SELECT   [AddedAt],
                 [ID],
                 [Description],
                 [UserId]
        FROM     [dbo].[AuditLog]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[AuditLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AuditLog]', N'AuditLog';

EXECUTE sp_rename N'[dbo].[AuditLog].[tmp_ms_xx_index_IX_AuditLog_AddedAt1]', N'IX_AuditLog_AddedAt', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AuditLog1]', N'PK_AuditLog', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[AuditLog].[IX_AuditLog_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditLog_UserId]
    ON [dbo].[AuditLog]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataSource]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataSource] (
    [ID]               UNIQUEIDENTIFIER CONSTRAINT [DF_DataSource_ID] DEFAULT (newid()) NOT NULL,
    [Code]             VARCHAR (50)     NOT NULL,
    [Name]             VARCHAR (150)    NOT NULL,
    [Description]      VARCHAR (5000)   NULL,
    [Url]              VARCHAR (250)    NOT NULL,
    [DefaultNullValue] FLOAT (53)       NULL,
    [ErrorEstimate]    FLOAT (53)       NULL,
    [UpdateFreq]       INT              NOT NULL,
    [StartDate]        DATETIME         NULL,
    [EndDate]          DATETIME         NULL,
    [LastUpdate]       DATETIME         NOT NULL,
    [DataSchemaID]     UNIQUEIDENTIFIER NULL,
    [UserId]           UNIQUEIDENTIFIER NOT NULL,
    [StationID]        UNIQUEIDENTIFIER NULL,
    [AddedAt]          DATETIME         CONSTRAINT [DF_DataSource_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]        DATETIME         CONSTRAINT [DF_DataSource_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_DataSource1] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSource_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_DataSource_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataSource])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DataSource] ([ID], [Code], [Name], [Description], [Url], [DefaultNullValue], [ErrorEstimate], [UpdateFreq], [StartDate], [LastUpdate], [DataSchemaID], [UserId], [StationID])
        SELECT   [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [DefaultNullValue],
                 [ErrorEstimate],
                 [UpdateFreq],
                 [StartDate],
                 [LastUpdate],
                 [DataSchemaID],
                 [UserId],
                 [StationID]
        FROM     [dbo].[DataSource]
        ORDER BY [ID] ASC;
    END

DROP TABLE [dbo].[DataSource];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataSource]', N'DataSource';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_DataSource1]', N'PK_DataSource', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSource_Code1]', N'UX_DataSource_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_DataSource_Name1]', N'UX_DataSource_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_DataSchemaID]
    ON [dbo].[DataSource]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_UserId]
    ON [dbo].[DataSource]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_StationID]
    ON [dbo].[DataSource]([StationID] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_StartDate]
    ON [dbo].[DataSource]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[DataSource].[IX_DataSource_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_EndDate]
    ON [dbo].[DataSource]([EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Sensor]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Sensor] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Sensor_ID] DEFAULT (newid()) NOT NULL,
    [Code]         VARCHAR (50)     NOT NULL,
    [Name]         VARCHAR (150)    NOT NULL,
    [Description]  VARCHAR (5000)   NULL,
    [Url]          VARCHAR (250)    NULL,
    [StationID]    UNIQUEIDENTIFIER NOT NULL,
    [PhenomenonID] UNIQUEIDENTIFIER NOT NULL,
    [DataSourceID] UNIQUEIDENTIFIER NULL,
    [DataSchemaID] UNIQUEIDENTIFIER NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Sensor1] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Sensor_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Sensor_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Sensor])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Sensor] ([ID], [Code], [Name], [Description], [Url], [StationID], [PhenomenonID], [DataSourceID], [DataSchemaID], [UserId])
        SELECT   [ID],
                 [Code],
                 [Name],
                 [Description],
                 [Url],
                 [StationID],
                 [PhenomenonID],
                 [DataSourceID],
                 [DataSchemaID],
                 [UserId]
        FROM     [dbo].[Sensor]
        ORDER BY [ID] ASC;
    END

DROP TABLE [dbo].[Sensor];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sensor]', N'Sensor';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sensor1]', N'PK_Sensor', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Sensor_Code1]', N'UX_Sensor_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Sensor_Name1]', N'UX_Sensor_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_StationID]
    ON [dbo].[Sensor]([StationID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_PhenomenonID]
    ON [dbo].[Sensor]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSourceID]
    ON [dbo].[Sensor]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSchemaID]
    ON [dbo].[Sensor]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_UserId]
    ON [dbo].[Sensor]([UserId] ASC);


GO
PRINT N'Altering [dbo].[Site]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER TABLE [dbo].[Site]
    ADD [AddedAt]   DATETIME CONSTRAINT [DF_Site_AddedAt] DEFAULT GetDate() NULL,
        [UpdatedAt] DATETIME CONSTRAINT [DF_Site_UpdatedAt] DEFAULT GetDate() NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Site].[IX_Site_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Site_EndDate]
    ON [dbo].[Site]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[Site].[IX_Site_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_Site_StartDate]
    ON [dbo].[Site]([StartDate] ASC);


GO
PRINT N'Altering [dbo].[Site_Organisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER TABLE [dbo].[Site_Organisation]
    ADD [AddedAt]   DATETIME CONSTRAINT [DF_Site_Organisation_AddedAt] DEFAULT GetDate() NULL,
        [UpdatedAt] DATETIME CONSTRAINT [DF_Site_Organisation_UpdatedAt] DEFAULT GetDate() NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[Station]...';


GO
ALTER TABLE [dbo].[Station] ALTER COLUMN [ProjectSiteID] UNIQUEIDENTIFIER NULL;


GO
ALTER TABLE [dbo].[Station]
    ADD [AddedAt]   DATETIME CONSTRAINT [DF_Station_AddedAt] DEFAULT GetDate() NULL,
        [UpdatedAt] DATETIME CONSTRAINT [DF_Station_UpdatedAt] DEFAULT GetDate() NULL;


GO
PRINT N'Creating [dbo].[Station].[IX_Station_ProjectSiteID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Station_ProjectSiteID]
    ON [dbo].[Station]([ProjectSiteID] ASC);


GO
PRINT N'Altering [dbo].[Station_Organisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER TABLE [dbo].[Station_Organisation]
    ADD [AddedAt]   DATETIME CONSTRAINT [DF_Station_Organisation_AddedAt] DEFAULT GetDate() NULL,
        [UpdatedAt] DATETIME CONSTRAINT [DF_Station_Organisation_UpdatedAt] DEFAULT GetDate() NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[DataSource_Organisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[DataSource_Organisation] (
    [ID]                 UNIQUEIDENTIFIER NOT NULL,
    [DataSourceID]       UNIQUEIDENTIFIER NOT NULL,
    [OrganisationID]     UNIQUEIDENTIFIER NOT NULL,
    [OrganisationRoleID] UNIQUEIDENTIFIER NOT NULL,
    [StartDate]          DATETIME         NULL,
    [EndDate]            DATETIME         NULL,
    [UserId]             UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]            DATETIME         NULL,
    [UpdatedAt]          DATETIME         NULL,
    CONSTRAINT [PK_DataSource_Organisation] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UX_DataSource_Organisation] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [OrganisationID] ASC, [OrganisationRoleID] ASC, [StartDate] ASC, [EndDate] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_DataSourceID]
    ON [dbo].[DataSource_Organisation]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_OrganisationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_OrganisationID]
    ON [dbo].[DataSource_Organisation]([OrganisationID] ASC);


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_OrganisationRoleID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_OrganisationRoleID]
    ON [dbo].[DataSource_Organisation]([OrganisationRoleID] ASC);


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_StartDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_StartDate]
    ON [dbo].[DataSource_Organisation]([StartDate] ASC);


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_EndDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_EndDate]
    ON [dbo].[DataSource_Organisation]([EndDate] ASC);


GO
PRINT N'Creating [dbo].[DataSource_Organisation].[IX_DataSource_Organisation_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_Organisation_UserId]
    ON [dbo].[DataSource_Organisation]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DataLog].[IX_DataLog_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataLog_SensorID]
    ON [dbo].[DataLog]([SensorID] ASC);


GO
PRINT N'Creating [dbo].[Observation].[IX_Observation_SensorID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Observation_SensorID]
    ON [dbo].[Observation]([SensorID] ASC);


GO
PRINT N'Creating [dbo].[DF_DataSource_Organisation_ID]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation]
    ADD CONSTRAINT [DF_DataSource_Organisation_ID] DEFAULT newid() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_DataSource_Organisation_AddedAt]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation]
    ADD CONSTRAINT [DF_DataSource_Organisation_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_DataSource_Organisation_UpdatedAt]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation]
    ADD CONSTRAINT [DF_DataSource_Organisation_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[FK_AuditLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[AuditLog] WITH NOCHECK
    ADD CONSTRAINT [FK_AuditLog_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceRole_DataSource]...';


GO
ALTER TABLE [dbo].[DataSourceRole] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceRole_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Station]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_DataSchema]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Station_ProjectSite]...';


GO
ALTER TABLE [dbo].[Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Station_ProjectSite] FOREIGN KEY ([ProjectSiteID]) REFERENCES [dbo].[ProjectSite] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_Station]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Organisation_DataSource]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Organisation_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Organisation_Organisation]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Organisation_Organisation] FOREIGN KEY ([OrganisationID]) REFERENCES [dbo].[Organisation] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Organisation_OrganisationRole]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Organisation_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Organisation_aspnet_Users]...';


GO
ALTER TABLE [dbo].[DataSource_Organisation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Organisation_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataLog_Sensor]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_Sensor]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[TR_AuditLog_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_AuditLog_Insert] ON [dbo].[AuditLog]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins 
        inner join AuditLog src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_AuditLog_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_AuditLog_Update] ON [dbo].[AuditLog]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update 
            src 
        set 
            UpdatedAt = GETDATE()
        from
            inserted ins 
            inner join AuditLog src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160421 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_DataSource_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_DataSource_Insert] ON [dbo].[DataSource]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join DataSource src
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_DataSource_Update]...';


GO
CREATE TRIGGER [dbo].[TR_DataSource_Update] ON [dbo].[DataSource]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update
            src
        set
            UpdatedAt = GETDATE()
        from
            inserted ins
            inner join DataSource src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160421 TimPN
GO
PRINT N'Creating [dbo].[TR_DataSource_Organisation_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_DataSource_Organisation_Insert] ON [dbo].[DataSource_Organisation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join DataSource_Organisation src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_DataSource_Organisation_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_DataSource_Organisation_Update] ON [dbo].[DataSource_Organisation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update
            src
        set
            UpdatedAt = GETDATE()
        from
            inserted ins
            inner join DataSource_Organisation src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.1 20160406 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Site_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Insert] ON [dbo].[Site]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update 
        src 
    set 
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins 
        inner join Site src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Site_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Update] ON [dbo].[Site]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update 
            src 
        set 
            UpdatedAt = GETDATE()
        from
            inserted ins 
            inner join Site src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160421 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Site_Organisation_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Organisation_Insert] ON [dbo].[Site_Organisation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join Site_Organisation src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Site_Organisation_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Site_Organisation_Update] ON [dbo].[Site_Organisation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update
            src
        set
            UpdatedAt = GETDATE()
        from
            inserted ins
            inner join Site_Organisation src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160426 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Station_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Station_Insert] ON [dbo].[Station]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join Station src
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Station_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Station_Update] ON [dbo].[Station]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update
            src
        set
            UpdatedAt = GETDATE()
        from
            inserted ins
            inner join Station src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160421 TimPN
GO
PRINT N'Creating [dbo].[TR_Station_Organisation_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Station_Organisation_Insert] ON [dbo].[Station_Organisation]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join Station_Organisation src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Station_Organisation_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_Station_Organisation_Update] ON [dbo].[Station_Organisation]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    if UPDATE(UpdatedAt) RAISERROR ('Cannot update UpdatedAt.', 16, 1)
    if not UPDATE(AddedAt) and not UPDATE(UpdatedAt)
        Update
            src
        set
            UpdatedAt = GETDATE()
        from
            inserted ins
            inner join Station_Organisation src
                on (ins.ID = src.ID)
END
--< Added 2.0.0.3 20160426 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vAuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vAuditLog]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vDataSource]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSource]';


GO
PRINT N'Refreshing [dbo].[vDataSourceTransformation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSourceTransformation]';


GO
PRINT N'Refreshing [dbo].[vImportBatch]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vImportBatch]';


GO
PRINT N'Altering [dbo].[vObservation]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW [dbo].[vObservation]
AS
--> Changed 2.0.0.3 20160421 TimPN
--SELECT     o.ID, o.SensorID, o.PhenonmenonOfferingID, o.PhenonmenonUOMID, o.UserId, o.RawValue, o.DataValue, o.ImportBatchID, o.ValueDate, 
SELECT     o.ID, o.SensorID, o.PhenomenonOfferingID, o.PhenomenonUOMID, o.UserId, o.RawValue, o.DataValue, o.ImportBatchID, o.ValueDate, 
--< Changed 2.0.0.3 20160421 TimPN
                      sp.Code AS spCode, sp.Description AS spDesc, sp.Name AS spName, sp.Url AS spURL, sp.DataSchemaID, sp.DataSourceID, sp.PhenomenonID, sp.StationID, 
                      ph.Name AS phName, st.Name AS stName, ds.Name AS dsName, ISNULL(dschema.Name,dschema1.Name) AS dschemaName, offer.Name AS offName, offer.ID AS offID, ps.Name AS psName, 
                      ps.ID AS psID, org.Name AS orgName, org.ID AS orgID, uom.Unit AS uomUnit, uom.UnitSymbol AS uomSymbol, users.UserName,
                      o.Comment
FROM         dbo.Observation AS o INNER JOIN
                      dbo.Sensor AS sp ON sp.ID = o.SensorID INNER JOIN
                      dbo.Phenomenon AS ph ON ph.ID = sp.PhenomenonID INNER JOIN
--> Changed 2.0.0.3 20160421 TimPN
--                      dbo.PhenomenonOffering AS phOff ON phOff.ID = o.PhenonmenonOfferingID INNER JOIN  
                      dbo.PhenomenonOffering AS phOff ON phOff.ID = o.PhenomenonOfferingID INNER JOIN  
--< Changed 2.0.0.3 20160421 TimPN
                      dbo.Offering AS offer ON offer.ID = phOff.OfferingID INNER JOIN
--> Changed 2.0.0.3 20160421 TimPN
--                      dbo.PhenomenonUOM AS puom ON puom.ID = o.PhenonmenonUOMID INNER JOIN
                      dbo.PhenomenonUOM AS puom ON puom.ID = o.PhenomenonUOMID INNER JOIN
--< Changed 2.0.0.3 20160421 TimPN
                      dbo.Station AS st ON st.ID = sp.StationID INNER JOIN
                      dbo.DataSource AS ds ON ds.ID = sp.DataSourceID LEFT JOIN
                      dbo.DataSchema AS dschema1 ON dschema1.ID = ds.DataSchemaID LEFT JOIN
                      dbo.DataSchema AS dschema ON dschema.ID = sp.DataSchemaID INNER JOIN                   
                      dbo.ProjectSite AS ps ON ps.ID = st.ProjectSiteID INNER JOIN
                      dbo.Organisation AS org ON org.ID = ps.OrganisationID INNER JOIN
                      dbo.UnitOfMeasure AS uom ON uom.ID = puom.UnitOfMeasureID INNER JOIN
                      dbo.aspnet_Users AS users ON users.UserId = o.UserId
GO
PRINT N'Altering [dbo].[vObservationRoles]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW [dbo].[vObservationRoles]
AS
--> Changed 2.0.0.3 20160421 TimPN
--SELECT     vo.ID, vo.SensorID, vo.PhenonmenonOfferingID, vo.PhenonmenonUOMID, vo.UserId, vo.RawValue, vo.DataValue, vo.ImportBatchID, vo.ValueDate, 
SELECT     vo.ID, vo.SensorID, vo.PhenomenonOfferingID, vo.PhenomenonUOMID, vo.UserId, vo.RawValue, vo.DataValue, vo.ImportBatchID, vo.ValueDate, 
--> Changed 2.0.0.3 20160421 TimPN
                      vo.spCode, vo.spDesc, vo.spName, vo.spURL, vo.DataSchemaID, vo.DataSourceID, vo.PhenomenonID, vo.StationID, vo.phName, vo.stName, vo.dsName, 
                      vo.dschemaName, vo.offName, vo.offID, vo.psName, vo.psID, vo.orgName, vo.orgID, vo.uomUnit, vo.uomSymbol, vo.UserName,
                      dr.DataSourceID AS Expr2, dr.DateStart, dr.DateEnd,
                      ur.UserId AS Expr5, vo.Comment
FROM         dbo.vObservation AS vo 
INNER JOIN 
(
 SELECT dr.DataSourceID,
        ur.UserId,
        MIN(dr.DateStart) DateStart,
        MAX(dr.DateEnd) DateEnd
 FROM DataSourceRole dr
 INNER JOIN    dbo.aspnet_Roles AS ar ON dr.RoleId = ar.RoleId INNER JOIN
               dbo.aspnet_UsersInRoles AS ur ON ar.RoleId = ur.RoleId
 GROUP By dr.DataSourceID,ur.UserId
) dr
ON vo.DataSourceID = dr.DataSourceID 
AND vo.ValueDate >= dr.DateStart AND vo.ValueDate <= dr.DateEnd
INNER JOIN aspnet_Users ur
 ON dr.UserId = ur.UserId
GO
PRINT N'Altering [dbo].[vStation]...';


GO
ALTER VIEW [dbo].[vStation]
AS
SELECT 
  Station.*,
  p.Code + ' - ' + p.Name ProjectSiteName,
  s.Code + ' - ' + s.Name SiteName
FROM 
  Station
  LEFT JOIN ProjectSite p -- Must be removed once all stations have sites
    on (Station.ProjectSiteID = p.ID)
  LEFT JOIN [Site] s -- Must be inner join once all stations have sites
    on (Station.SiteID = s.ID)
GO
PRINT N'Refreshing [dbo].[vSiteOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSiteOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[progress_Progress_Resolved]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW dbo.progress_Progress_Resolved
AS
SELECT     dbo.ImportBatch.ImportDate, dbo.ImportBatch.FileName, dbo.Progress.StartDate, dbo.Progress.EndDate, dbo.Progress.Observations, dbo.Progress.DateUploaded, 
                      dbo.aspnet_Users.UserName, dbo.Sensor.Name AS Sensor, dbo.Sensor.StationID, dbo.Station.Name AS Station
FROM         dbo.Sensor FULL OUTER JOIN
                      dbo.Station ON dbo.Sensor.StationID = dbo.Station.ID FULL OUTER JOIN
                      dbo.Progress LEFT OUTER JOIN
                      dbo.aspnet_Users ON dbo.Progress.UserId = dbo.aspnet_Users.UserId LEFT OUTER JOIN
                      dbo.ImportBatch ON dbo.Progress.ImportBatchID = dbo.ImportBatch.ID ON dbo.Sensor.ID = dbo.Progress.SensorID
GO
PRINT N'Altering [dbo].[vDataLog]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW [dbo].[vDataLog]
AS

SELECT 
d.ID, 
d.ImportDate,

org.Name Organisation,
ps.[Description] ProjectSite,
st.Name StationName,
d.SensorID,
sp.Name SensorName,
CASE 
    WHEN SensorID is null then 1
    ELSE 0
END SensorInvalid,

d.ValueDate,
d.InvalidDateValue, 
CASE 
    WHEN ValueDate is null then 1
    ELSE 0
END DateValueInvalid,

d.InvalidTimeValue, 
CASE 
    WHEN InvalidTimeValue is not null then 1
    ELSE 0
END TimeValueInvalid,

CASE 
    WHEN InvalidDateValue is null AND InvalidTimeValue IS NULL Then ValueDate
    WHEN ValueTime is not null then ValueTime 
END ValueTime,


d.RawValue,
d.ValueText,
CASE
    WHEN d.RawValue is null then 1
    ELSE 0
END RawValueInvalid,	

d.DataValue,
d.TransformValueText, 
CASE
    WHEN d.DataValue is null then 1
    ELSE 0
END DataValueInvalid,

d.PhenomenonOfferingID, 
CASE
    WHEN d.PhenomenonOfferingID is null then 1
    ELSE 0
END OfferingInvalid,

--> Changed 2.0.0.3 20160421 TimPN
--d.PhenonmenonUOMID, 
d.PhenomenonUOMID, 
--< Changed 2.0.0.3 20160421 TimPN
CASE
--> Changed 2.0.0.3 20160421 TimPN
--    WHEN d.PhenonmenonUOMID is null then 1
    WHEN d.PhenomenonUOMID is null then 1
--< Changed 2.0.0.3 20160421 TimPN
    ELSE 0
END UOMInvalid,

p.Name PhenomenonName,
o.Name OfferingName,
uom.Unit,

d.DataSourceTransformationID,
tt.Name Transformation,
d.StatusID,
s.Name [Status],
d.ImportBatchID,
d.RawFieldValue,
d.Comment

FROM DataLog d
LEFT JOIN Sensor sp
    on d.SensorID = sp.ID
LEFT JOIN Station st
    on sp.StationID = st.ID
LEFT JOIN ProjectSite ps
    on st.ProjectSiteID = ps.ID
LEFT JOIN Organisation org
    on ps.OrganisationID = org.ID
LEFT JOIN PhenomenonOffering po
 ON d.PhenomenonOfferingID = po.ID
LEFT JOIN Phenomenon p
    on po.PhenomenonID = p.ID
LEFT JOIN Offering o
    on po.OfferingID = o.ID
LEFT JOIN PhenomenonUOM pu
--> Changed 2.0.0.3 20160421 TimPN
--    on d.PhenonmenonUOMID = pu.ID
    on d.PhenomenonUOMID = pu.ID
--< Changed 2.0.0.3 20160421 TimPN
LEFT JOIN UnitOfMeasure uom
    on pu.UnitOfMeasureID = uom.ID
LEFT JOIN DataSourceTransformation ds
    on d.DataSourceTransformationID = ds.ID
LEFT JOIN TransformationType tt
    on ds.TransformationTypeID = tt.ID
INNER JOIN [Status] s
    on d.StatusID = s.ID
GO
PRINT N'Altering [dbo].[vDataQuery]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW [dbo].[vDataQuery]
AS
SELECT     TOP (100) PERCENT NEWID() AS ID, dbo.Organisation.ID AS OrganisationID, dbo.Organisation.Name AS Organisation, 
                      dbo.Organisation.Description AS OrganisationDesc, dbo.ProjectSite.ID AS ProjectSiteID, dbo.ProjectSite.Name AS ProjectSite, 
                      dbo.ProjectSite.Description AS ProjectSiteDesc, dbo.Station.ID AS StationID, dbo.Station.Name AS Station, dbo.Station.Description AS StationDesc, 
                      dbo.Sensor.ID AS SensorID, dbo.Sensor.Name AS Sensor, dbo.Sensor.Description AS SensorDesc, 
                      dbo.Phenomenon.ID AS PhenomenonID, dbo.Phenomenon.Name AS Phenomenon, dbo.Phenomenon.Description AS PhenomenonDesc, dbo.Offering.ID AS OfferingID, 
                      dbo.Offering.Name AS Offering, dbo.Offering.Description AS OfferingDesc
FROM         dbo.Station INNER JOIN
                      dbo.Sensor ON dbo.Sensor.StationID = dbo.Station.ID INNER JOIN
                      dbo.Phenomenon ON dbo.Phenomenon.ID = dbo.Sensor.PhenomenonID INNER JOIN
                      dbo.PhenomenonOffering ON dbo.PhenomenonOffering.PhenomenonID = dbo.Phenomenon.ID INNER JOIN
                      dbo.Offering ON dbo.Offering.ID = dbo.PhenomenonOffering.OfferingID INNER JOIN
                      dbo.ProjectSite ON dbo.ProjectSite.ID = dbo.Station.ProjectSiteID INNER JOIN
                      dbo.Organisation ON dbo.Organisation.ID = dbo.ProjectSite.OrganisationID
ORDER BY Organisation, ProjectSite, Station, Sensor, Phenomenon, Offering
GO
PRINT N'Altering [dbo].[vInventory]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
ALTER VIEW [dbo].[vInventory]
AS
Select 
 ps.Name Site,
 s.Name Station,
 sp.Name Sensor,
 p.Name Phenomenon,
 d.StartDate,
 d.EndDate
FROM Station s with (nolock)
 INNER Join ProjectSite ps with (nolock)
 on  ps.ID=  s.ProjectSiteID
INNER Join Sensor sp with (nolock)
 on s.ID = sp.StationID
INNER Join Phenomenon p with (nolock)
 on  sp.PhenomenonID = p.ID 

INNER JOIN 
(
 SELECT SensorID,MIN(ValueDate) StartDate,MAX(ValueDate) EndDate
  FROM Observation with (nolock)
 Group By SensorID
)d
ON sp.ID = d.SensorID
GO
PRINT N'Refreshing [dbo].[vStationOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vStationOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[vDataSourceOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW [dbo].[vDataSourceOrganisation] AS 
SELECT 
  so.*, o.Name OrganisationName, r.Name [OrganisationRoleName]
FROM 
  [DataSource_Organisation] so
  inner join [Organisation] o
    on (so.OrganisationID = o.ID)
  inner join [OrganisationRole] r
    on (so.OrganisationRoleID = r.ID)
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[vSensor]...';


GO
--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN
CREATE VIEW [dbo].[vSensor]
AS

SELECT 
s.ID,
s.Code,
s.Name,
s.[Description],
s.Url,
s.StationID,
s.DataSourceID,
s.PhenomenonID,
s.UserId,
st.Name AS StationName,
d.Name AS DataSourceName,
ds.[Description] DataSchemaName
FROM Sensor s
INNER JOIN DataSource d
    on s.DataSourceID = d.ID
INNER JOIN Station st
    on s.StationID = st.ID
LEFT JOIN DataSchema ds
    on s.DataSchemaID = ds.ID
GO
PRINT N'Altering [dbo].[progress_Status_Raw]...';


GO
-- =============================================
-- Author:		Wim Hugo
-- Create date: 20-06-2014
-- Description:	Create Progress Table - Raw Data
-- =============================================

--> Changed 2.0.0.3 20160503 TimPN
--Renamed SensorProcedure to Sensor
--< Changed 2.0.0.3 20160503 TimPN

ALTER PROCEDURE progress_Status_Raw 
    -- Add the parameters for the stored procedure here

AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
    
    DROP Table dbo.Progress
    
    CREATE TABLE [dbo].Progress(
    [ImportBatchID] [int],
    [StartDate] [datetime],
    [EndDate] [datetime],
    [DateUploaded] [datetime],
    [Observations] [bigint],
    [UserId] [uniqueidentifier],
    [SensorID] [uniqueidentifier],
--> Changed 2.0.0.3 20160421 TimPN
--    [PhenonmenonOfferingID] [uniqueidentifier]
    [PhenomenonOfferingID] [uniqueidentifier]
--< Changed 2.0.0.3 20160421 TimPN
    )

    -- Insert statements for procedure here
    INSERT INTO [dbo].[Progress]
    (
    [ImportBatchID],
    [StartDate],
    [EndDate],
    [DateUploaded],
    [Observations],
    [UserId],
    [SensorID],
--> Changed 2.0.0.3 20160421 TimPN
--    [PhenonmenonOfferingID]
    [PhenomenonOfferingID]
--< Changed 2.0.0.3 20160421 TimPN
    )
   
    SELECT     
        ImportBatchID, 
        MIN(ValueDate) AS StartDate, 
        MAX(ValueDate) AS EndDate, 
        MIN(AddedDate) AS DateUploaded, 
        COUNT(ID) AS Observations, 
        UserId, 
        SensorID, 
--> Changed 2.0.0.3 20160421 TimPN
--        PhenonmenonOfferingID
        PhenomenonOfferingID
--< Changed 2.0.0.3 20160421 TimPN
FROM    dbo.Observation
--> Changed 2.0.0.3 20160421 TimPN
--GROUP BY PhenonmenonOfferingID, PhenonmenonUOMID, ImportBatchID, UserId, SensorID
GROUP BY PhenomenonOfferingID, PhenomenonUOMID, ImportBatchID, UserId, SensorID
--< Changed 2.0.0.3 20160421 TimPN
END
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '512e36e1-6b21-47b7-b7db-82e6cf040e34')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('512e36e1-6b21-47b7-b7db-82e6cf040e34')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e29eb5f4-8a30-4346-b3bc-c84664baf1b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e29eb5f4-8a30-4346-b3bc-c84664baf1b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f214d16e-5d6e-4329-a8ea-6f7d561778ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f214d16e-5d6e-4329-a8ea-6f7d561778ec')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AuditLog] WITH CHECK CHECK CONSTRAINT [FK_AuditLog_aspnet_Users];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_DataSource];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_DataSource];

ALTER TABLE [dbo].[DataSourceRole] WITH CHECK CHECK CONSTRAINT [FK_DataSourceRole_DataSource];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Station];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_DataSchema];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_aspnet_Users];

ALTER TABLE [dbo].[Station] WITH CHECK CHECK CONSTRAINT [FK_Station_ProjectSite];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_Sensor];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_aspnet_Users];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSchema];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSource];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_Phenomenon];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_Station];

ALTER TABLE [dbo].[DataSource_Organisation] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Organisation_DataSource];

ALTER TABLE [dbo].[DataSource_Organisation] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Organisation_Organisation];

ALTER TABLE [dbo].[DataSource_Organisation] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Organisation_OrganisationRole];

ALTER TABLE [dbo].[DataSource_Organisation] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Organisation_aspnet_Users];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_Sensor];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_Sensor];


GO
PRINT N'Update complete.';


GO
