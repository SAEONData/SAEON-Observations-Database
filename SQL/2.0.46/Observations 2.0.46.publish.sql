/*
Deployment script for Observations

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Observations"
:setvar DefaultFilePrefix "Observations"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL14.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL14.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF (SELECT is_default
    FROM   [$(DatabaseName)].[sys].[filegroups]
    WHERE  [name] = N'Documents') = 0
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            MODIFY FILEGROUP [Documents] DEFAULT;
    END

GO
PRINT N'Altering [dbo].[vInventory]...';

GO
ALTER VIEW [dbo].[vInventory]
AS
Select
  NEWID() ID, s.*
from
(
Select
  SiteCode, SiteName, StationCode, StationName, InstrumentCode, InstrumentName, SensorCode, SensorName, PhenomenonCode, PhenomenonName, 
  OfferingCode, OfferingName, UnitOfMeasureCode, UnitOfMeasureUnit, Sum(Count) Count, Min(StartDate) StartDate, Max(EndDate) EndDate
from
  vImportBatchSummary
group by
  SiteCode, SiteName, StationCode, StationName, InstrumentCode, InstrumentName, SensorCode, SensorName, PhenomenonCode, PhenomenonName, 
  OfferingCode, OfferingName, UnitOfMeasureCode, UnitOfMeasureUnit
) s

GO
PRINT N'Creating [dbo].[vLocations]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW [dbo].[vLocations]
AS
-- Organisation Stations from Sites
Select
  OrganisationID, Station.SiteID, Station.ID StationID
from
  Organisation_Site
  inner join Station
    on (Organisation_Site.SiteID = Station.SiteID)
where
  ((Station.Latitude is not null) and (Station.Longitude is not null)) and
  Exists(Select * from ImportBatchSummary where (SiteID = Station.SiteID) and (StationID = Station.ID))
union
-- Organisation Stations
Select
  OrganisationID, SiteID, StationID
from
  Organisation_Station
  inner join Station
    on (Organisation_Station.StationID = Station.ID)
where
  ((Station.Latitude is not null) and (Station.Longitude is not null)) and
  Exists(Select * from ImportBatchSummary where (SiteID = Station.SiteID) and (StationID = Station.ID))
union
-- Organisation Stations from Instruments
Select
  OrganisationID, SiteID, StationID
from
  Organisation_Instrument
  inner join Station_Instrument
    on (Organisation_Instrument.InstrumentID = Station_Instrument.InstrumentID)
  inner join Station
    on (Station_Instrument.StationID = Station.ID)
where
  ((Station.Latitude is not null) and (Station.Longitude is not null)) and
  Exists(Select * from ImportBatchSummary where (SiteID = Station.SiteID) and (StationID = Station.ID))
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;

GO
PRINT N'Update complete.';


GO
