/*
Deployment script for ObservationDB_Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationDB_Test"
:setvar DefaultFilePrefix "ObservationDB_Test"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 05cd2faa-7c23-4e5f-9264-81298f8ceefe is skipped, element [dbo].[EventLog].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key fee5307d-8a4a-429b-9921-bf8139f25a56, 276a2e24-039a-4bf7-a9ce-cce5ceb4e50c, 256144d4-2f99-4700-b150-0c257126c337, 43448c07-d402-400f-bf6d-9d87395cfab3, 049cdc54-9501-4b6d-a846-45c27db04a39, 4ebff796-fe28-4feb-906f-bcee8e078946, f76c9143-8c8e-41cc-974a-cb6b1304c4c4 is skipped, element [dbo].[AuditLog].[When] (SqlSimpleColumn) will not be renamed to AddedAt';


GO
PRINT N'Rename refactoring operation with key 231c3cc6-48ee-4187-bb05-d713c8d495c3, 96fcdfa7-cde1-4b86-aa45-f7389ce65f94 is skipped, element [dbo].[AuditLog].[Where] (SqlSimpleColumn) will not be renamed to Location';


GO
PRINT N'Rename refactoring operation with key a80503a6-5c20-478a-b2eb-a1fc057457c6 is skipped, element [dbo].[AuditLog].[What] (SqlSimpleColumn) will not be renamed to Description';


GO
PRINT N'Altering [dbo].[DataSource]...';


GO
ALTER TABLE [dbo].[DataSource]
    ADD [StationID] UNIQUEIDENTIFIER NULL;


GO
PRINT N'Creating [dbo].[AuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[AuditLog] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         NOT NULL,
    [Description] VARCHAR (500)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_AuditLog] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[AuditLog].[IX_AuditLog_AddedAt]...';


GO
CREATE CLUSTERED INDEX [IX_AuditLog_AddedAt]
    ON [dbo].[AuditLog]([AddedAt] ASC);


GO
PRINT N'Creating [dbo].[AuditLog].[IX_AuditLog_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditLog_UserId]
    ON [dbo].[AuditLog]([UserId] ASC);


GO
PRINT N'Creating [dbo].[Station].[IX_DataSource_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_DataSource_StationID]
    ON [dbo].[Station]([ID] ASC);


GO
PRINT N'Creating [dbo].[DF_AuditLog_ID]...';


GO
ALTER TABLE [dbo].[AuditLog]
    ADD CONSTRAINT [DF_AuditLog_ID] DEFAULT NewID() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_AuditLog_AddedAt]...';


GO
ALTER TABLE [dbo].[AuditLog]
    ADD CONSTRAINT [DF_AuditLog_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[FK_AuditLog_aspnet_Users]...';


GO
ALTER TABLE [dbo].[AuditLog] WITH NOCHECK
    ADD CONSTRAINT [FK_AuditLog_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_DataSource_Station]...';


GO
ALTER TABLE [dbo].[DataSource] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSource_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Altering [dbo].[vDataSource]...';


GO
ALTER View [dbo].[vDataSource]
AS
Select 
  d.*,
  t.[Name] DataSchemaName,
  s.Code + ' - ' + s.Name StationName
from 
  DataSource d
  inner join Station s
    on (d.StationID = s.ID)
  LEFT JOIN DataSchema t  -- Must be inner join once all datasources have stations
    ON d.DataSchemaID = t.ID
GO
PRINT N'Refreshing [dbo].[vDataSourceTransformation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataSourceTransformation]';


GO
PRINT N'Refreshing [dbo].[vImportBatch]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vImportBatch]';


GO
PRINT N'Refreshing [dbo].[vObservation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservation]';


GO
PRINT N'Refreshing [dbo].[vSensorProcedure]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSensorProcedure]';


GO
PRINT N'Refreshing [dbo].[vObservationRoles]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservationRoles]';


GO
PRINT N'Altering [dbo].[vStation]...';


GO
ALTER VIEW [dbo].[vStation]
AS
SELECT 
  Station.*,
  p.Code + ' - ' + p.Name ProjectSiteName,
  s.Code + ' - ' + s.Name SiteName
FROM 
  Station
  INNER JOIN ProjectSite p
    on (Station.ProjectSiteID = p.ID)
  LEFT JOIN [Site] s -- Must be inner join once all stations have sites
    on (Station.SiteID = s.ID)
GO
PRINT N'Creating [dbo].[vAuditLog]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW [dbo].[vAuditLog]
AS
Select
  a.*, u.UserName
from
  AuditLog a
  inner join aspnet_Users u
    on (a.UserId = u.UserId)
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[vStationOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW [dbo].[vStationOrganisation] AS 
SELECT 
  so.*, o.Name OrganisationName, r.Name [OrganisationRoleName]
FROM 
  [Station_Organisation] so
  inner join [Organisation] o
    on (so.OrganisationID = o.ID)
  inner join [OrganisationRole] r
    on (so.OrganisationRoleID = r.ID)
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '05cd2faa-7c23-4e5f-9264-81298f8ceefe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('05cd2faa-7c23-4e5f-9264-81298f8ceefe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fee5307d-8a4a-429b-9921-bf8139f25a56')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fee5307d-8a4a-429b-9921-bf8139f25a56')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '231c3cc6-48ee-4187-bb05-d713c8d495c3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('231c3cc6-48ee-4187-bb05-d713c8d495c3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '47ddd230-8ddf-458a-bd1c-014f3805a4a8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('47ddd230-8ddf-458a-bd1c-014f3805a4a8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '96fcdfa7-cde1-4b86-aa45-f7389ce65f94')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('96fcdfa7-cde1-4b86-aa45-f7389ce65f94')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2486a920-cb37-4d6e-9bc6-b1a7bb9d3f87')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2486a920-cb37-4d6e-9bc6-b1a7bb9d3f87')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '276a2e24-039a-4bf7-a9ce-cce5ceb4e50c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('276a2e24-039a-4bf7-a9ce-cce5ceb4e50c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '256144d4-2f99-4700-b150-0c257126c337')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('256144d4-2f99-4700-b150-0c257126c337')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '43448c07-d402-400f-bf6d-9d87395cfab3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('43448c07-d402-400f-bf6d-9d87395cfab3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '049cdc54-9501-4b6d-a846-45c27db04a39')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('049cdc54-9501-4b6d-a846-45c27db04a39')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4ebff796-fe28-4feb-906f-bcee8e078946')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4ebff796-fe28-4feb-906f-bcee8e078946')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a80503a6-5c20-478a-b2eb-a1fc057457c6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a80503a6-5c20-478a-b2eb-a1fc057457c6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f76c9143-8c8e-41cc-974a-cb6b1304c4c4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f76c9143-8c8e-41cc-974a-cb6b1304c4c4')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AuditLog] WITH CHECK CHECK CONSTRAINT [FK_AuditLog_aspnet_Users];

ALTER TABLE [dbo].[DataSource] WITH CHECK CHECK CONSTRAINT [FK_DataSource_Station];


GO
PRINT N'Update complete.';


GO
