/*
Deployment script for ObservationsTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationsTest"
:setvar DefaultFilePrefix "ObservationsTest"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ID]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ID];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ImportDate]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ImportDate];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_AddedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_UpdatedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_UpdatedAt];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_DataSource];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_Status];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_ImportBatch];


GO
PRINT N'Starting rebuilding table [dbo].[ImportBatch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportBatch] (
    [ID]             UNIQUEIDENTIFIER CONSTRAINT [DF_ImportBatch_ID] DEFAULT newid() NOT NULL,
    [Code]           INT              IDENTITY (1, 1) NOT NULL,
    [DataSourceID]   UNIQUEIDENTIFIER NOT NULL,
    [ImportDate]     DATETIME         CONSTRAINT [DF_ImportBatch_ImportDate] DEFAULT getdate() NOT NULL,
    [Status]         INT              NOT NULL,
    [UserId]         UNIQUEIDENTIFIER NOT NULL,
    [FileName]       VARCHAR (250)    NULL,
    [LogFileName]    VARCHAR (250)    NULL,
    [Comment]        VARCHAR (8000)   NULL,
    [StatusID]       UNIQUEIDENTIFIER NULL,
    [StatusReasonID] UNIQUEIDENTIFIER NULL,
    [AddedAt]        DATETIME         CONSTRAINT [DF_ImportBatch_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]      DATETIME         CONSTRAINT [DF_ImportBatch_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportBatch1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [ImportDate] ASC, [LogFileName] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_ImportBatch1]
    ON [dbo].[tmp_ms_xx_ImportBatch]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportBatch])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ImportBatch] ([AddedAt], [ID], [DataSourceID], [ImportDate], [Status], [UserId], [FileName], [LogFileName], [Comment], [StatusID], [StatusReasonID], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [DataSourceID],
                 [ImportDate],
                 [Status],
                 [UserId],
                 [FileName],
                 [LogFileName],
                 [Comment],
                 [StatusID],
                 [StatusReasonID],
                 [UpdatedAt]
        FROM     [dbo].[ImportBatch]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[ImportBatch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportBatch]', N'ImportBatch';

EXECUTE sp_rename N'[dbo].[ImportBatch].[tmp_ms_xx_index_CX_ImportBatch1]', N'CX_ImportBatch', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportBatch1]', N'PK_ImportBatch', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch_Code1]', N'UX_ImportBatch_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch1]', N'UX_ImportBatch', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_DataSourceID]
    ON [dbo].[ImportBatch]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_UserId]
    ON [dbo].[ImportBatch]([UserId] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_ImportDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_ImportDate]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [ImportDate] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_LogFileName]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_LogFileName]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [LogFileName] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusID]
    ON [dbo].[ImportBatch]([StatusID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusReasonID]
    ON [dbo].[ImportBatch]([StatusReasonID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[SchemaColumn] (
    [ID]                   UNIQUEIDENTIFIER NOT NULL,
    [DataSchemaID]         UNIQUEIDENTIFIER NOT NULL,
    [Number]               INT              NOT NULL,
    [Name]                 VARCHAR (100)    NOT NULL,
    [SchemaColumnTypeID]   UNIQUEIDENTIFIER NOT NULL,
    [Width]                INT              NULL,
    [Format]               VARCHAR (50)     NULL,
    [PhenomenonID]         UNIQUEIDENTIFIER NULL,
    [PhenomenonOfferingID] UNIQUEIDENTIFIER NULL,
    [PhenomenonUOMID]      UNIQUEIDENTIFIER NULL,
    [EmptyValue]           VARCHAR (50)     NULL,
    [FixedTime]            INT              NULL,
    [UserId]               UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]              DATETIME         NULL,
    [UpdatedAt]            DATETIME         NULL,
    CONSTRAINT [PK_SchemaColumn] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [UX_SchemaColumn_DataSchemaID_Name] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Name] ASC),
    CONSTRAINT [UX_SchemaColumn_DataSchemaID_Number] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Number] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SchemaColumn].[CX_SchemaColumn]...';


GO
CREATE CLUSTERED INDEX [CX_SchemaColumn]
    ON [dbo].[SchemaColumn]([AddedAt] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_DataSchemaID]
    ON [dbo].[SchemaColumn]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_SchemaColumnTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_SchemaColumnTypeID]
    ON [dbo].[SchemaColumn]([SchemaColumnTypeID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonID]
    ON [dbo].[SchemaColumn]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonOfferingID]
    ON [dbo].[SchemaColumn]([PhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonUOMID]
    ON [dbo].[SchemaColumn]([PhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_UserId]
    ON [dbo].[SchemaColumn]([UserId] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumnType]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[SchemaColumnType] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        VARCHAR (50)     NOT NULL,
    [Description] VARCHAR (250)    NOT NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         NULL,
    [UpdatedAt]   DATETIME         NULL,
    CONSTRAINT [PK_SchemaColumnType] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [UX_SchemaColumnType] UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SchemaColumnType].[CX_SchemaColumnType]...';


GO
CREATE CLUSTERED INDEX [CX_SchemaColumnType]
    ON [dbo].[SchemaColumnType]([AddedAt] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumnType].[IX_SchemaColumnType_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumnType_UserId]
    ON [dbo].[SchemaColumnType]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DF_SchemaColumn_ID]...';


GO
ALTER TABLE [dbo].[SchemaColumn]
    ADD CONSTRAINT [DF_SchemaColumn_ID] DEFAULT newid() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_SchemaColumn_AddedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn]
    ADD CONSTRAINT [DF_SchemaColumn_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_SchemaColumn_UpdatedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn]
    ADD CONSTRAINT [DF_SchemaColumn_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[DF_SchemaColumnType_ID]...';


GO
ALTER TABLE [dbo].[SchemaColumnType]
    ADD CONSTRAINT [DF_SchemaColumnType_ID] DEFAULT newid() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_SchemaColumnType_AddedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumnType]
    ADD CONSTRAINT [DF_SchemaColumnType_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_SchemaColumnType_UpdatedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumnType]
    ADD CONSTRAINT [DF_SchemaColumnType_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_SchemaColumnType]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_SchemaColumnType] FOREIGN KEY ([SchemaColumnTypeID]) REFERENCES [dbo].[SchemaColumnType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_Phenomenon]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumnType_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumnType] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumnType_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[TR_ImportBatch_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Insert] ON [dbo].[ImportBatch]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join ImportBatch src
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Update]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Update] ON [dbo].[ImportBatch]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join ImportBatch src
            on (ins.ID = src.ID)
END
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Insert] ON [dbo].[SchemaColumn]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join SchemaColumn src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Update] ON [dbo].[SchemaColumn]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join SchemaColumn src
            on (ins.ID = src.ID)
END
--< Added 2.0.11 20160908 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumnType_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumnType_Insert] ON [dbo].[SchemaColumnType]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join SchemaColumnType src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumnType_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumnType_Update] ON [dbo].[SchemaColumnType]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join SchemaColumnType src
            on (ins.ID = src.ID)
END
--< Added 2.0.11 20160908 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[progress_Progress_Resolved]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[progress_Progress_Resolved]';


GO
PRINT N'Altering [dbo].[vImportBatch]...';


GO
ALTER VIEW [dbo].[vImportBatch]
AS

SELECT 
b.ID,
--> Added 2.0.11 20161004 TimPN
b.Code,
--< Added 2.0.11 20161004 TimPN
b.DataSourceID,
b.ImportDate, 
b.[Status],
d.Name DataSourceName,
b.UserId,
u.UserName,
CASE b.[Status]
	WHEN 0 THEN 'Errors in Datalog'
	WHEN 1 THEN 'No Errors in Log'
	WHEN 2 THEN 'Moved to Datalog'
END StatusDescription,
b.[FileName],
b.LogFileName

FROM ImportBatch b
INNER JOIN DataSource d
	on b.DataSourceID = d.ID
INNER JOIN aspnet_Users u
  on b.UserId = u.UserId
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_aspnet_Users];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_DataSource];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_Status];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_StatusReason];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_ImportBatch];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_ImportBatch];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_ImportBatch];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_DataSchema];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_SchemaColumnType];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_Phenomenon];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonOffering];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonUOM];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_aspnet_Users];

ALTER TABLE [dbo].[SchemaColumnType] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumnType_aspnet_Users];


GO
PRINT N'Update complete.';


GO
