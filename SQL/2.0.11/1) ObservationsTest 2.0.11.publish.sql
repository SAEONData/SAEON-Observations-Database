/*
Deployment script for ObservationsTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ObservationsTest"
:setvar DefaultFilePrefix "ObservationsTest"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SAEON\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column FixedTime in table [dbo].[SchemaColumn] is currently  VARCHAR (50) NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[SchemaColumn])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ID]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ID];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_ImportDate]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_ImportDate];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_AddedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_ImportBatch_UpdatedAt]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [DF_ImportBatch_UpdatedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_ID]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_ID];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_AddedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_AddedAt];


GO
PRINT N'Dropping [dbo].[DF_SchemaColumn_UpdatedAt]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [DF_SchemaColumn_UpdatedAt];


GO
PRINT N'Dropping [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_DataSource];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_Status];


GO
PRINT N'Dropping [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] DROP CONSTRAINT [FK_ImportBatch_StatusReason];


GO
PRINT N'Dropping [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_ImportBatch];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_SchemaColumnType]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_SchemaColumnType];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_Phenomenon]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_PhenomenonOffering];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_PhenomenonUOM];


GO
PRINT N'Dropping [dbo].[FK_SchemaColumn_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [FK_SchemaColumn_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Instrument_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] DROP CONSTRAINT [FK_Organisation_Instrument_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Site_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Site] DROP CONSTRAINT [FK_Organisation_Site_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_Organisation_Station_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Station] DROP CONSTRAINT [FK_Organisation_Station_OrganisationRole];


GO
PRINT N'Dropping [dbo].[FK_OrganisationRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[OrganisationRole] DROP CONSTRAINT [FK_OrganisationRole_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Instrument_Sensor_Sensor]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] DROP CONSTRAINT [FK_Instrument_Sensor_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] DROP CONSTRAINT [FK_Progress_Sensor];


GO
PRINT N'Dropping [dbo].[FK_DataSourceTransformation_Sensor]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] DROP CONSTRAINT [FK_DataSourceTransformation_Sensor];


GO
PRINT N'Dropping [dbo].[FK_DataLog_Sensor]...';


GO
ALTER TABLE [dbo].[DataLog] DROP CONSTRAINT [FK_DataLog_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Observation_Sensor]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK_Observation_Sensor];


GO
PRINT N'Dropping [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_DataSchema];


GO
PRINT N'Dropping [dbo].[FK_Sensor_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_DataSource];


GO
PRINT N'Dropping [dbo].[FK_Sensor_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_Phenomenon];


GO
PRINT N'Dropping [dbo].[FK_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_aspnet_Users];


GO
PRINT N'Dropping [dbo].[FK_Sensor_Station]...';


GO
ALTER TABLE [dbo].[Sensor] DROP CONSTRAINT [FK_Sensor_Station];


GO
PRINT N'Dropping [dbo].[UX_SchemaColumn_Name]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [UX_SchemaColumn_Name];


GO
PRINT N'Dropping [dbo].[UX_SchemaColumn_Number]...';


GO
ALTER TABLE [dbo].[SchemaColumn] DROP CONSTRAINT [UX_SchemaColumn_Number];


GO
PRINT N'Starting rebuilding table [dbo].[ImportBatch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportBatch] (
    [ID]             UNIQUEIDENTIFIER CONSTRAINT [DF_ImportBatch_ID] DEFAULT newid() NOT NULL,
    [Code]           INT              IDENTITY (1, 1) NOT NULL,
    [DataSourceID]   UNIQUEIDENTIFIER NOT NULL,
    [ImportDate]     DATETIME         CONSTRAINT [DF_ImportBatch_ImportDate] DEFAULT getdate() NOT NULL,
    [Status]         INT              NOT NULL,
    [UserId]         UNIQUEIDENTIFIER NOT NULL,
    [FileName]       VARCHAR (250)    NULL,
    [LogFileName]    VARCHAR (250)    NULL,
    [Comment]        VARCHAR (8000)   NULL,
    [StatusID]       UNIQUEIDENTIFIER NULL,
    [StatusReasonID] UNIQUEIDENTIFIER NULL,
    [AddedAt]        DATETIME         CONSTRAINT [DF_ImportBatch_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]      DATETIME         CONSTRAINT [DF_ImportBatch_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportBatch1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_ImportBatch1] UNIQUE NONCLUSTERED ([DataSourceID] ASC, [ImportDate] ASC, [LogFileName] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_ImportBatch1]
    ON [dbo].[tmp_ms_xx_ImportBatch]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportBatch])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ImportBatch] ([AddedAt], [ID], [DataSourceID], [ImportDate], [Status], [UserId], [FileName], [LogFileName], [Comment], [StatusID], [StatusReasonID], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [DataSourceID],
                 [ImportDate],
                 [Status],
                 [UserId],
                 [FileName],
                 [LogFileName],
                 [Comment],
                 [StatusID],
                 [StatusReasonID],
                 [UpdatedAt]
        FROM     [dbo].[ImportBatch]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[ImportBatch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportBatch]', N'ImportBatch';

EXECUTE sp_rename N'[dbo].[ImportBatch].[tmp_ms_xx_index_CX_ImportBatch1]', N'CX_ImportBatch', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportBatch1]', N'PK_ImportBatch', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch_Code1]', N'UX_ImportBatch_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_ImportBatch1]', N'UX_ImportBatch', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_DataSourceID]
    ON [dbo].[ImportBatch]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_UserId]
    ON [dbo].[ImportBatch]([UserId] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_ImportDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_ImportDate]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [ImportDate] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_LogFileName]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_LogFileName]
    ON [dbo].[ImportBatch]([DataSourceID] ASC, [LogFileName] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusID]
    ON [dbo].[ImportBatch]([StatusID] ASC);


GO
PRINT N'Creating [dbo].[ImportBatch].[IX_ImportBatch_StatusReasonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImportBatch_StatusReasonID]
    ON [dbo].[ImportBatch]([StatusReasonID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[OrganisationRole]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_OrganisationRole] (
    [ID]          UNIQUEIDENTIFIER CONSTRAINT [DF_OrganisationRole_ID] DEFAULT newid() NOT NULL,
    [Code]        VARCHAR (50)     NOT NULL,
    [Name]        VARCHAR (150)    NOT NULL,
    [Description] VARCHAR (5000)   NULL,
    [UserId]      UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]     DATETIME         CONSTRAINT [DF_OrganisationRole_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]   DATETIME         CONSTRAINT [DF_OrganisationRole_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_OrganisationRole1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_OrganisationRole_Code1] UNIQUE NONCLUSTERED ([Code] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_OrganisationRole_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_OrganisationRole1]
    ON [dbo].[tmp_ms_xx_OrganisationRole]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[OrganisationRole])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_OrganisationRole] ([ID], [Code], [Name], [Description], [UserId])
        SELECT [ID],
               [Code],
               [Name],
               [Description],
               [UserId]
        FROM   [dbo].[OrganisationRole];
    END

DROP TABLE [dbo].[OrganisationRole];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_OrganisationRole]', N'OrganisationRole';

EXECUTE sp_rename N'[dbo].[OrganisationRole].[tmp_ms_xx_index_CX_OrganisationRole1]', N'CX_OrganisationRole', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_OrganisationRole1]', N'PK_OrganisationRole', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_OrganisationRole_Code1]', N'UX_OrganisationRole_Code', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_OrganisationRole_Name1]', N'UX_OrganisationRole_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[OrganisationRole].[IX_OrganisationRole_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrganisationRole_UserId]
    ON [dbo].[OrganisationRole]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SchemaColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SchemaColumn] (
    [ID]                   UNIQUEIDENTIFIER CONSTRAINT [DF_SchemaColumn_ID] DEFAULT newid() NOT NULL,
    [DataSchemaID]         UNIQUEIDENTIFIER NOT NULL,
    [Number]               INT              NOT NULL,
    [Name]                 VARCHAR (100)    NOT NULL,
    [SchemaColumnTypeID]   UNIQUEIDENTIFIER NOT NULL,
    [Width]                INT              NULL,
    [Format]               VARCHAR (50)     NULL,
    [PhenomenonID]         UNIQUEIDENTIFIER NULL,
    [PhenomenonOfferingID] UNIQUEIDENTIFIER NULL,
    [PhenomenonUOMID]      UNIQUEIDENTIFIER NULL,
    [EmptyValue]           VARCHAR (50)     NULL,
    [FixedTime]            INT              NULL,
    [UserId]               UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]              DATETIME         CONSTRAINT [DF_SchemaColumn_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]            DATETIME         CONSTRAINT [DF_SchemaColumn_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SchemaColumn1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Number1] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Number] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Name1] UNIQUE NONCLUSTERED ([DataSchemaID] ASC, [Name] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_SchemaColumn1]
    ON [dbo].[tmp_ms_xx_SchemaColumn]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SchemaColumn])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_SchemaColumn] ([AddedAt], [ID], [DataSchemaID], [Number], [Name], [SchemaColumnTypeID], [Width], [Format], [PhenomenonID], [PhenomenonOfferingID], [PhenomenonUOMID], [FixedTime], [EmptyValue], [UserId], [UpdatedAt])
        SELECT   [AddedAt],
                 [ID],
                 [DataSchemaID],
                 [Number],
                 [Name],
                 [SchemaColumnTypeID],
                 [Width],
                 [Format],
                 [PhenomenonID],
                 [PhenomenonOfferingID],
                 [PhenomenonUOMID],
                 [FixedTime],
                 [EmptyValue],
                 [UserId],
                 [UpdatedAt]
        FROM     [dbo].[SchemaColumn]
        ORDER BY [AddedAt] ASC;
    END

DROP TABLE [dbo].[SchemaColumn];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SchemaColumn]', N'SchemaColumn';

EXECUTE sp_rename N'[dbo].[SchemaColumn].[tmp_ms_xx_index_CX_SchemaColumn1]', N'CX_SchemaColumn', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SchemaColumn1]', N'PK_SchemaColumn', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Number1]', N'UX_SchemaColumn_DataSchemaID_Number', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_SchemaColumn_DataSchemaID_Name1]', N'UX_SchemaColumn_DataSchemaID_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_DataSchemaID]
    ON [dbo].[SchemaColumn]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_SchemaColumnTypeID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_SchemaColumnTypeID]
    ON [dbo].[SchemaColumn]([SchemaColumnTypeID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonID]
    ON [dbo].[SchemaColumn]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonOfferingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonOfferingID]
    ON [dbo].[SchemaColumn]([PhenomenonOfferingID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_PhenomenonUOMID]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_PhenomenonUOMID]
    ON [dbo].[SchemaColumn]([PhenomenonUOMID] ASC);


GO
PRINT N'Creating [dbo].[SchemaColumn].[IX_SchemaColumn_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SchemaColumn_UserId]
    ON [dbo].[SchemaColumn]([UserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Sensor]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Sensor] (
    [ID]           UNIQUEIDENTIFIER CONSTRAINT [DF_Sensor_ID] DEFAULT (newid()) NOT NULL,
    [Code]         VARCHAR (50)     NOT NULL,
    [Name]         VARCHAR (150)    NOT NULL,
    [Description]  VARCHAR (5000)   NULL,
    [Url]          VARCHAR (250)    NULL,
    [StationID]    UNIQUEIDENTIFIER NOT NULL,
    [PhenomenonID] UNIQUEIDENTIFIER NOT NULL,
    [DataSourceID] UNIQUEIDENTIFIER NOT NULL,
    [DataSchemaID] UNIQUEIDENTIFIER NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [AddedAt]      DATETIME         CONSTRAINT [DF_Sensor_AddedAt] DEFAULT GetDate() NULL,
    [UpdatedAt]    DATETIME         CONSTRAINT [DF_Sensor_UpdatedAt] DEFAULT GetDate() NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Sensor1] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UX_Sensor_Code1] UNIQUE NONCLUSTERED ([Code] ASC)
);

CREATE CLUSTERED INDEX [tmp_ms_xx_index_CX_Sensor1]
    ON [dbo].[tmp_ms_xx_Sensor]([AddedAt] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Sensor])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Sensor] ([ID], [Code], [Name], [Description], [Url], [StationID], [PhenomenonID], [DataSourceID], [DataSchemaID], [UserId])
        SELECT [ID],
               [Code],
               [Name],
               [Description],
               [Url],
               [StationID],
               [PhenomenonID],
               [DataSourceID],
               [DataSchemaID],
               [UserId]
        FROM   [dbo].[Sensor];
    END

DROP TABLE [dbo].[Sensor];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sensor]', N'Sensor';

EXECUTE sp_rename N'[dbo].[Sensor].[tmp_ms_xx_index_CX_Sensor1]', N'CX_Sensor', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sensor1]', N'PK_Sensor', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UX_Sensor_Code1]', N'UX_Sensor_Code', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_StationID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_StationID]
    ON [dbo].[Sensor]([StationID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_PhenomenonID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_PhenomenonID]
    ON [dbo].[Sensor]([PhenomenonID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSourceID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSourceID]
    ON [dbo].[Sensor]([DataSourceID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_DataSchemaID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_DataSchemaID]
    ON [dbo].[Sensor]([DataSchemaID] ASC);


GO
PRINT N'Creating [dbo].[Sensor].[IX_Sensor_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sensor_UserId]
    ON [dbo].[Sensor]([UserId] ASC);


GO
PRINT N'Creating [dbo].[DF_Instrument_AddedAt]...';


GO
ALTER TABLE [dbo].[Instrument]
    ADD CONSTRAINT [DF_Instrument_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_Instrument_ID]...';


GO
ALTER TABLE [dbo].[Instrument]
    ADD CONSTRAINT [DF_Instrument_ID] DEFAULT newid() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_Instrument_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Instrument]
    ADD CONSTRAINT [DF_Instrument_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[DF_Site_AddedAt]...';


GO
ALTER TABLE [dbo].[Site]
    ADD CONSTRAINT [DF_Site_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_Site_ID]...';


GO
ALTER TABLE [dbo].[Site]
    ADD CONSTRAINT [DF_Site_ID] DEFAULT newid() FOR [ID];


GO
PRINT N'Creating [dbo].[DF_Site_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Site]
    ADD CONSTRAINT [DF_Site_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[DF_Station_AddedAt]...';


GO
ALTER TABLE [dbo].[Station]
    ADD CONSTRAINT [DF_Station_AddedAt] DEFAULT GetDate() FOR [AddedAt];


GO
PRINT N'Creating [dbo].[DF_Station_UpdatedAt]...';


GO
ALTER TABLE [dbo].[Station]
    ADD CONSTRAINT [DF_Station_UpdatedAt] DEFAULT GetDate() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[FK_Progress_ImportBatch]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_ImportBatch]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_aspnet_Users]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_DataSource]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_Status]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_Status] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[Status] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ImportBatch_StatusReason]...';


GO
ALTER TABLE [dbo].[ImportBatch] WITH NOCHECK
    ADD CONSTRAINT [FK_ImportBatch_StatusReason] FOREIGN KEY ([StatusReasonID]) REFERENCES [dbo].[StatusReason] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_ImportBatch]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_ImportBatch] FOREIGN KEY ([ImportBatchID]) REFERENCES [dbo].[ImportBatch] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_DataSchema]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_SchemaColumnType]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_SchemaColumnType] FOREIGN KEY ([SchemaColumnTypeID]) REFERENCES [dbo].[SchemaColumnType] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_Phenomenon]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonOffering]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonOffering] FOREIGN KEY ([PhenomenonOfferingID]) REFERENCES [dbo].[PhenomenonOffering] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_PhenomenonUOM]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_PhenomenonUOM] FOREIGN KEY ([PhenomenonUOMID]) REFERENCES [dbo].[PhenomenonUOM] ([ID]);


GO
PRINT N'Creating [dbo].[FK_SchemaColumn_aspnet_Users]...';


GO
ALTER TABLE [dbo].[SchemaColumn] WITH NOCHECK
    ADD CONSTRAINT [FK_SchemaColumn_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Instrument_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Instrument] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Instrument_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Site_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Site] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Site_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Organisation_Station_OrganisationRole]...';


GO
ALTER TABLE [dbo].[Organisation_Station] WITH NOCHECK
    ADD CONSTRAINT [FK_Organisation_Station_OrganisationRole] FOREIGN KEY ([OrganisationRoleID]) REFERENCES [dbo].[OrganisationRole] ([ID]);


GO
PRINT N'Creating [dbo].[FK_OrganisationRole_aspnet_Users]...';


GO
ALTER TABLE [dbo].[OrganisationRole] WITH NOCHECK
    ADD CONSTRAINT [FK_OrganisationRole_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Instrument_Sensor_Sensor]...';


GO
ALTER TABLE [dbo].[Instrument_Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Instrument_Sensor_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Progress_Sensor]...';


GO
ALTER TABLE [dbo].[Progress] WITH NOCHECK
    ADD CONSTRAINT [FK_Progress_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataSourceTransformation_Sensor]...';


GO
ALTER TABLE [dbo].[DataSourceTransformation] WITH NOCHECK
    ADD CONSTRAINT [FK_DataSourceTransformation_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DataLog_Sensor]...';


GO
ALTER TABLE [dbo].[DataLog] WITH NOCHECK
    ADD CONSTRAINT [FK_DataLog_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Observation_Sensor]...';


GO
ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD CONSTRAINT [FK_Observation_Sensor] FOREIGN KEY ([SensorID]) REFERENCES [dbo].[Sensor] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSchema]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSchema] FOREIGN KEY ([DataSchemaID]) REFERENCES [dbo].[DataSchema] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_DataSource]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_DataSource] FOREIGN KEY ([DataSourceID]) REFERENCES [dbo].[DataSource] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_Phenomenon]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_Phenomenon] FOREIGN KEY ([PhenomenonID]) REFERENCES [dbo].[Phenomenon] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Sensor_aspnet_Users]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_aspnet_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[aspnet_Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Sensor_Station]...';


GO
ALTER TABLE [dbo].[Sensor] WITH NOCHECK
    ADD CONSTRAINT [FK_Sensor_Station] FOREIGN KEY ([StationID]) REFERENCES [dbo].[Station] ([ID]);


GO
PRINT N'Creating [dbo].[TR_ImportBatch_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Insert] ON [dbo].[ImportBatch]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join ImportBatch src
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_ImportBatch_Update]...';


GO
CREATE TRIGGER [dbo].[TR_ImportBatch_Update] ON [dbo].[ImportBatch]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join ImportBatch src
            on (ins.ID = src.ID)
END
--< Added 2.0.8 20160715 TimPN
GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Insert]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Insert] ON [dbo].[SchemaColumn]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join SchemaColumn src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_SchemaColumn_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_SchemaColumn_Update] ON [dbo].[SchemaColumn]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join SchemaColumn src
            on (ins.ID = src.ID)
END
--< Added 2.0.11 20160908 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_OrganisationRole]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_OrganisationRole] ON [dbo].[OrganisationRole]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join OrganisationRole src
            on (ins.ID = src.ID)
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_OrganisationRole_Update]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TRIGGER [dbo].[TR_OrganisationRole_Update] ON [dbo].[OrganisationRole]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join OrganisationRole src
            on (ins.ID = src.ID)
END
--< Added 2.0.8 20160718 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[TR_Sensor_Insert]...';


GO
CREATE TRIGGER [dbo].[TR_Sensor_Insert] ON [dbo].[Sensor]
FOR INSERT
AS
BEGIN
    SET NoCount ON
    Update
        src
    set
        AddedAt = GETDATE(),
        UpdatedAt = NULL
    from
        inserted ins
        inner join Sensor src
            on (ins.ID = src.ID)
END
GO
PRINT N'Creating [dbo].[TR_Sensor_Update]...';


GO
CREATE TRIGGER [dbo].[TR_Sensor_Update] ON [dbo].[Sensor]
FOR UPDATE
AS
BEGIN
    SET NoCount ON
    --if UPDATE(AddedAt) RAISERROR ('Cannot update AddedAt.', 16, 1)
    Update
        src
    set
        UpdatedAt = GETDATE()
    from
        inserted ins
        inner join Sensor src
            on (ins.ID = src.ID)
END
--< Added 2.0.8 20160718 TimPN
GO
PRINT N'Refreshing [dbo].[progress_Progress_Resolved]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[progress_Progress_Resolved]';


GO
PRINT N'Altering [dbo].[vImportBatch]...';


GO
ALTER VIEW [dbo].[vImportBatch]
AS

SELECT 
b.ID,
--> Added 2.0.11 20161004 TimPN
b.Code,
--< Added 2.0.11 20161004 TimPN
b.DataSourceID,
b.ImportDate, 
b.[Status],
d.Name DataSourceName,
b.UserId,
u.UserName,
CASE b.[Status]
	WHEN 0 THEN 'Errors in Datalog'
	WHEN 1 THEN 'No Errors in Log'
	WHEN 2 THEN 'Moved to Datalog'
END StatusDescription,
b.[FileName],
b.LogFileName

FROM ImportBatch b
INNER JOIN DataSource d
	on b.DataSourceID = d.ID
INNER JOIN aspnet_Users u
  on b.UserId = u.UserId
GO
PRINT N'Refreshing [dbo].[vInstrumentOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInstrumentOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vOrganisationInstrument]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationInstrument]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vOrganisationSite]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationSite]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vOrganisationStation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vOrganisationStation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vSiteOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSiteOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vStationOrganisation]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vStationOrganisation]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[vSchemaColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
--> Added 2.0.11 20160927 TimPN
ALTER VIEW [dbo].[vSchemaColumn]
AS 
SELECT 
  SchemaColumn.*,
  SchemaColumnType.Name SchemaColumnTypeName, 
  Phenomenon.Name PhenomenonName,
  Offering.Name OfferingName,
  UnitOfMeasure.Unit UnitOfMeasureUnit
FROM 
  SchemaColumn
  inner join SchemaColumnType 
    on (SchemaColumn.SchemaColumnTypeID = SchemaColumnType.ID)
  left join Phenomenon
    on (SchemaColumn.PhenomenonID = Phenomenon.ID)
  left join PhenomenonOffering
    on (SchemaColumn.PhenomenonOfferingID = PhenomenonOffering.ID)
  left join Offering
    on (PhenomenonOffering.OfferingID = Offering.ID)
  left join PhenomenonUOM 
    on (SchemaColumn.PhenomenonUOMID = PhenomenonUOM.ID)
  left join  UnitOfMeasure
    on (PhenomenonUOM.UnitOfMeasureID = UnitOfMeasure.ID)
--< Added 2.0.11 20160927 TimPN
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vDataLog]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataLog]';


GO
PRINT N'Refreshing [dbo].[vDataQuery]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vDataQuery]';


GO
PRINT N'Refreshing [dbo].[vInstrumentSensor]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInstrumentSensor]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[vInventory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vInventory]';


GO
PRINT N'Refreshing [dbo].[vObservation]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservation]';


GO
PRINT N'Refreshing [dbo].[vSensor]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vSensor]';


GO
PRINT N'Refreshing [dbo].[vObservationRoles]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vObservationRoles]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_ImportBatch];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_ImportBatch];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_aspnet_Users];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_DataSource];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_Status];

ALTER TABLE [dbo].[ImportBatch] WITH CHECK CHECK CONSTRAINT [FK_ImportBatch_StatusReason];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_ImportBatch];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_DataSchema];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_SchemaColumnType];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_Phenomenon];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonOffering];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_PhenomenonUOM];

ALTER TABLE [dbo].[SchemaColumn] WITH CHECK CHECK CONSTRAINT [FK_SchemaColumn_aspnet_Users];

ALTER TABLE [dbo].[Organisation_Instrument] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Instrument_OrganisationRole];

ALTER TABLE [dbo].[Organisation_Site] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Site_OrganisationRole];

ALTER TABLE [dbo].[Organisation_Station] WITH CHECK CHECK CONSTRAINT [FK_Organisation_Station_OrganisationRole];

ALTER TABLE [dbo].[OrganisationRole] WITH CHECK CHECK CONSTRAINT [FK_OrganisationRole_aspnet_Users];

ALTER TABLE [dbo].[Instrument_Sensor] WITH CHECK CHECK CONSTRAINT [FK_Instrument_Sensor_Sensor];

ALTER TABLE [dbo].[Progress] WITH CHECK CHECK CONSTRAINT [FK_Progress_Sensor];

ALTER TABLE [dbo].[DataSourceTransformation] WITH CHECK CHECK CONSTRAINT [FK_DataSourceTransformation_Sensor];

ALTER TABLE [dbo].[DataLog] WITH CHECK CHECK CONSTRAINT [FK_DataLog_Sensor];

ALTER TABLE [dbo].[Observation] WITH CHECK CHECK CONSTRAINT [FK_Observation_Sensor];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSchema];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_DataSource];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_Phenomenon];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_aspnet_Users];

ALTER TABLE [dbo].[Sensor] WITH CHECK CHECK CONSTRAINT [FK_Sensor_Station];


GO
PRINT N'Update complete.';


GO
